syntax = "proto3";
option java_package = "mahjong.mode";
import "gameBase.proto";

//房卡模式进入房间请求
message RoomCardIntoRequest {
    string Id = 1; //用户名
    string roomNo = 2; //房号
}

//进入房间返回
message RoomCardIntoResponse {
    ErrorCode error = 1;
    double baseScore = 2; //基础分
    string roomNo = 3; //桌号
}

//所有玩家信息
message RoomSeatsInfo {
    repeated SeatResponse seats = 1; //座位
}

//游戏信息
message GameInfo {
    GameStatus gameStatus = 1; //游戏状态
    string operationUser = 2; //当前操作的人
    string lastOperationUser = 3; //上家出牌人
    repeated SeatGameInfo seats = 4; //座位
}

//玩家信息
message SeatResponse {
    uint32 seatNo = 1; //座位号
    string ID = 2; //用户名
    string nickname = 3; //用户名
    double gold = 4; //金币
    bool isReady = 5; //是否准备
    string areaString = 6; //地区
}

//玩家游戏信息
message SeatGameInfo {
    string ID = 1; //用户名
    repeated uint32 cards = 2; //牌
    uint32 cardsSize = 3; //牌数量
    repeated uint32 invertedCards = 4; //碰或杠的牌
    repeated uint32 invertedIndex = 5; //碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
    repeated uint32 playedCards = 6; //出过的牌
    double score = 7; //输赢分数
    bool isRobot = 8; //是否托管
}

//游戏开始 发牌
message DealCardResponse {
    string banker = 1; //庄家
    repeated uint32 dice = 2; //骰子
    repeated uint32 cards = 3; //牌
}

//出牌
message PlayCardRequest {
    uint32 card = 1; //牌
}

//出牌
message PlayCardResponse {
    string ID = 1; //用户名
    uint32 card = 2; //牌
}

//喇叭
message MessageRequest {
    string message = 1; //内容
}

//碰
message PengResponse {
    string ID = 1; //碰牌的人
}

//暗杠或扒杠
message GangRequest {
    uint32 card = 1; //牌
}

//杠
message GangResponse {
    string ID = 1; //杠牌的人
    uint32 card = 2; //牌
}

//胡
message HuResponse {
    string ID = 1; //胡牌的人
}

//摸牌
message GetCardResponse {
    string ID = 1; //用户名
    uint32 card = 2; //牌
}

//当局游戏结果
message ResultResponse {
    repeated UserResult userResult = 1; //用户结算
}

//单个人结算
message UserResult {
    string ID = 1; //人
    repeated Result result = 2; //结算
    repeated uint32 cards = 3;
}

//单个结算
message Result {
    double score = 1; //结算
    repeated uint32 scoreTypes = 2; //牌型
}

//喇叭
message MessageResponse {
    string message = 1; //内容
}

enum GameStatus {
    WAITING = 0; //等待开始
    READYING = 1; //准备状态
    PLAYING = 2; //游戏中
}