// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ruijin.proto

package mahjong.mode;

public final class Ruijin {
  private Ruijin() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RuijinMahjongIntoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RuijinMahjongIntoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *底分
     * </pre>
     *
     * <code>uint32 baseScore = 1;</code>
     */
    int getBaseScore();

    /**
     * <pre>
     *游戏局数
     * </pre>
     *
     * <code>uint32 gameTimes = 2;</code>
     */
    int getGameTimes();

    /**
     * <pre>
     *人数
     * </pre>
     *
     * <code>uint32 count = 3;</code>
     */
    int getCount();

    /**
     * <pre>
     *点炮
     * </pre>
     *
     * <code>bool dianpao = 4;</code>
     */
    boolean getDianpao();

    /**
     * <pre>
     *庄闲
     * </pre>
     *
     * <code>uint32 zhuangxian = 5;</code>
     */
    int getZhuangxian();
  }
  /**
   * <pre>
   *进入房间返回 ROOM_INFO
   * </pre>
   *
   * Protobuf type {@code RuijinMahjongIntoResponse}
   */
  public  static final class RuijinMahjongIntoResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RuijinMahjongIntoResponse)
      RuijinMahjongIntoResponseOrBuilder {
    // Use RuijinMahjongIntoResponse.newBuilder() to construct.
    private RuijinMahjongIntoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RuijinMahjongIntoResponse() {
      baseScore_ = 0;
      gameTimes_ = 0;
      count_ = 0;
      dianpao_ = false;
      zhuangxian_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RuijinMahjongIntoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              baseScore_ = input.readUInt32();
              break;
            }
            case 16: {

              gameTimes_ = input.readUInt32();
              break;
            }
            case 24: {

              count_ = input.readUInt32();
              break;
            }
            case 32: {

              dianpao_ = input.readBool();
              break;
            }
            case 40: {

              zhuangxian_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mahjong.mode.Ruijin.internal_static_RuijinMahjongIntoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mahjong.mode.Ruijin.internal_static_RuijinMahjongIntoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mahjong.mode.Ruijin.RuijinMahjongIntoResponse.class, mahjong.mode.Ruijin.RuijinMahjongIntoResponse.Builder.class);
    }

    public static final int BASESCORE_FIELD_NUMBER = 1;
    private int baseScore_;
    /**
     * <pre>
     *底分
     * </pre>
     *
     * <code>uint32 baseScore = 1;</code>
     */
    public int getBaseScore() {
      return baseScore_;
    }

    public static final int GAMETIMES_FIELD_NUMBER = 2;
    private int gameTimes_;
    /**
     * <pre>
     *游戏局数
     * </pre>
     *
     * <code>uint32 gameTimes = 2;</code>
     */
    public int getGameTimes() {
      return gameTimes_;
    }

    public static final int COUNT_FIELD_NUMBER = 3;
    private int count_;
    /**
     * <pre>
     *人数
     * </pre>
     *
     * <code>uint32 count = 3;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int DIANPAO_FIELD_NUMBER = 4;
    private boolean dianpao_;
    /**
     * <pre>
     *点炮
     * </pre>
     *
     * <code>bool dianpao = 4;</code>
     */
    public boolean getDianpao() {
      return dianpao_;
    }

    public static final int ZHUANGXIAN_FIELD_NUMBER = 5;
    private int zhuangxian_;
    /**
     * <pre>
     *庄闲
     * </pre>
     *
     * <code>uint32 zhuangxian = 5;</code>
     */
    public int getZhuangxian() {
      return zhuangxian_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseScore_ != 0) {
        output.writeUInt32(1, baseScore_);
      }
      if (gameTimes_ != 0) {
        output.writeUInt32(2, gameTimes_);
      }
      if (count_ != 0) {
        output.writeUInt32(3, count_);
      }
      if (dianpao_ != false) {
        output.writeBool(4, dianpao_);
      }
      if (zhuangxian_ != 0) {
        output.writeUInt32(5, zhuangxian_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, baseScore_);
      }
      if (gameTimes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gameTimes_);
      }
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, count_);
      }
      if (dianpao_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, dianpao_);
      }
      if (zhuangxian_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, zhuangxian_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mahjong.mode.Ruijin.RuijinMahjongIntoResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Ruijin.RuijinMahjongIntoResponse other = (mahjong.mode.Ruijin.RuijinMahjongIntoResponse) obj;

      boolean result = true;
      result = result && (getBaseScore()
          == other.getBaseScore());
      result = result && (getGameTimes()
          == other.getGameTimes());
      result = result && (getCount()
          == other.getCount());
      result = result && (getDianpao()
          == other.getDianpao());
      result = result && (getZhuangxian()
          == other.getZhuangxian());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BASESCORE_FIELD_NUMBER;
      hash = (53 * hash) + getBaseScore();
      hash = (37 * hash) + GAMETIMES_FIELD_NUMBER;
      hash = (53 * hash) + getGameTimes();
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      hash = (37 * hash) + DIANPAO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDianpao());
      hash = (37 * hash) + ZHUANGXIAN_FIELD_NUMBER;
      hash = (53 * hash) + getZhuangxian();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mahjong.mode.Ruijin.RuijinMahjongIntoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *进入房间返回 ROOM_INFO
     * </pre>
     *
     * Protobuf type {@code RuijinMahjongIntoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RuijinMahjongIntoResponse)
        mahjong.mode.Ruijin.RuijinMahjongIntoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mahjong.mode.Ruijin.internal_static_RuijinMahjongIntoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mahjong.mode.Ruijin.internal_static_RuijinMahjongIntoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mahjong.mode.Ruijin.RuijinMahjongIntoResponse.class, mahjong.mode.Ruijin.RuijinMahjongIntoResponse.Builder.class);
      }

      // Construct using mahjong.mode.Ruijin.RuijinMahjongIntoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        baseScore_ = 0;

        gameTimes_ = 0;

        count_ = 0;

        dianpao_ = false;

        zhuangxian_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mahjong.mode.Ruijin.internal_static_RuijinMahjongIntoResponse_descriptor;
      }

      public mahjong.mode.Ruijin.RuijinMahjongIntoResponse getDefaultInstanceForType() {
        return mahjong.mode.Ruijin.RuijinMahjongIntoResponse.getDefaultInstance();
      }

      public mahjong.mode.Ruijin.RuijinMahjongIntoResponse build() {
        mahjong.mode.Ruijin.RuijinMahjongIntoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Ruijin.RuijinMahjongIntoResponse buildPartial() {
        mahjong.mode.Ruijin.RuijinMahjongIntoResponse result = new mahjong.mode.Ruijin.RuijinMahjongIntoResponse(this);
        result.baseScore_ = baseScore_;
        result.gameTimes_ = gameTimes_;
        result.count_ = count_;
        result.dianpao_ = dianpao_;
        result.zhuangxian_ = zhuangxian_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Ruijin.RuijinMahjongIntoResponse) {
          return mergeFrom((mahjong.mode.Ruijin.RuijinMahjongIntoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Ruijin.RuijinMahjongIntoResponse other) {
        if (other == mahjong.mode.Ruijin.RuijinMahjongIntoResponse.getDefaultInstance()) return this;
        if (other.getBaseScore() != 0) {
          setBaseScore(other.getBaseScore());
        }
        if (other.getGameTimes() != 0) {
          setGameTimes(other.getGameTimes());
        }
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        if (other.getDianpao() != false) {
          setDianpao(other.getDianpao());
        }
        if (other.getZhuangxian() != 0) {
          setZhuangxian(other.getZhuangxian());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mahjong.mode.Ruijin.RuijinMahjongIntoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Ruijin.RuijinMahjongIntoResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int baseScore_ ;
      /**
       * <pre>
       *底分
       * </pre>
       *
       * <code>uint32 baseScore = 1;</code>
       */
      public int getBaseScore() {
        return baseScore_;
      }
      /**
       * <pre>
       *底分
       * </pre>
       *
       * <code>uint32 baseScore = 1;</code>
       */
      public Builder setBaseScore(int value) {
        
        baseScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *底分
       * </pre>
       *
       * <code>uint32 baseScore = 1;</code>
       */
      public Builder clearBaseScore() {
        
        baseScore_ = 0;
        onChanged();
        return this;
      }

      private int gameTimes_ ;
      /**
       * <pre>
       *游戏局数
       * </pre>
       *
       * <code>uint32 gameTimes = 2;</code>
       */
      public int getGameTimes() {
        return gameTimes_;
      }
      /**
       * <pre>
       *游戏局数
       * </pre>
       *
       * <code>uint32 gameTimes = 2;</code>
       */
      public Builder setGameTimes(int value) {
        
        gameTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *游戏局数
       * </pre>
       *
       * <code>uint32 gameTimes = 2;</code>
       */
      public Builder clearGameTimes() {
        
        gameTimes_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <pre>
       *人数
       * </pre>
       *
       * <code>uint32 count = 3;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <pre>
       *人数
       * </pre>
       *
       * <code>uint32 count = 3;</code>
       */
      public Builder setCount(int value) {
        
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *人数
       * </pre>
       *
       * <code>uint32 count = 3;</code>
       */
      public Builder clearCount() {
        
        count_ = 0;
        onChanged();
        return this;
      }

      private boolean dianpao_ ;
      /**
       * <pre>
       *点炮
       * </pre>
       *
       * <code>bool dianpao = 4;</code>
       */
      public boolean getDianpao() {
        return dianpao_;
      }
      /**
       * <pre>
       *点炮
       * </pre>
       *
       * <code>bool dianpao = 4;</code>
       */
      public Builder setDianpao(boolean value) {
        
        dianpao_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *点炮
       * </pre>
       *
       * <code>bool dianpao = 4;</code>
       */
      public Builder clearDianpao() {
        
        dianpao_ = false;
        onChanged();
        return this;
      }

      private int zhuangxian_ ;
      /**
       * <pre>
       *庄闲
       * </pre>
       *
       * <code>uint32 zhuangxian = 5;</code>
       */
      public int getZhuangxian() {
        return zhuangxian_;
      }
      /**
       * <pre>
       *庄闲
       * </pre>
       *
       * <code>uint32 zhuangxian = 5;</code>
       */
      public Builder setZhuangxian(int value) {
        
        zhuangxian_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *庄闲
       * </pre>
       *
       * <code>uint32 zhuangxian = 5;</code>
       */
      public Builder clearZhuangxian() {
        
        zhuangxian_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RuijinMahjongIntoResponse)
    }

    // @@protoc_insertion_point(class_scope:RuijinMahjongIntoResponse)
    private static final mahjong.mode.Ruijin.RuijinMahjongIntoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mahjong.mode.Ruijin.RuijinMahjongIntoResponse();
    }

    public static mahjong.mode.Ruijin.RuijinMahjongIntoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RuijinMahjongIntoResponse>
        PARSER = new com.google.protobuf.AbstractParser<RuijinMahjongIntoResponse>() {
      public RuijinMahjongIntoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RuijinMahjongIntoResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RuijinMahjongIntoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RuijinMahjongIntoResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Ruijin.RuijinMahjongIntoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RuijinMahjongReplayResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RuijinMahjongReplayResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.MahjongStartResponse start = 1;</code>
     */
    boolean hasStart();
    /**
     * <code>.MahjongStartResponse start = 1;</code>
     */
    mahjong.mode.Mahjong.MahjongStartResponse getStart();
    /**
     * <code>.MahjongStartResponse start = 1;</code>
     */
    mahjong.mode.Mahjong.MahjongStartResponseOrBuilder getStartOrBuilder();

    /**
     * <pre>
     *操作记录
     * </pre>
     *
     * <code>repeated .OperationHistory history = 2;</code>
     */
    java.util.List<mahjong.mode.GameBase.OperationHistory> 
        getHistoryList();
    /**
     * <pre>
     *操作记录
     * </pre>
     *
     * <code>repeated .OperationHistory history = 2;</code>
     */
    mahjong.mode.GameBase.OperationHistory getHistory(int index);
    /**
     * <pre>
     *操作记录
     * </pre>
     *
     * <code>repeated .OperationHistory history = 2;</code>
     */
    int getHistoryCount();
    /**
     * <pre>
     *操作记录
     * </pre>
     *
     * <code>repeated .OperationHistory history = 2;</code>
     */
    java.util.List<? extends mahjong.mode.GameBase.OperationHistoryOrBuilder> 
        getHistoryOrBuilderList();
    /**
     * <pre>
     *操作记录
     * </pre>
     *
     * <code>repeated .OperationHistory history = 2;</code>
     */
    mahjong.mode.GameBase.OperationHistoryOrBuilder getHistoryOrBuilder(
        int index);

    /**
     * <code>.MahjongResultResponse result = 3;</code>
     */
    boolean hasResult();
    /**
     * <code>.MahjongResultResponse result = 3;</code>
     */
    mahjong.mode.Mahjong.MahjongResultResponse getResult();
    /**
     * <code>.MahjongResultResponse result = 3;</code>
     */
    mahjong.mode.Mahjong.MahjongResultResponseOrBuilder getResultOrBuilder();
  }
  /**
   * <pre>
   *回放    REPLAY
   * </pre>
   *
   * Protobuf type {@code RuijinMahjongReplayResponse}
   */
  public  static final class RuijinMahjongReplayResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RuijinMahjongReplayResponse)
      RuijinMahjongReplayResponseOrBuilder {
    // Use RuijinMahjongReplayResponse.newBuilder() to construct.
    private RuijinMahjongReplayResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RuijinMahjongReplayResponse() {
      history_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RuijinMahjongReplayResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
                mahjong.mode.Mahjong.MahjongStartResponse.Builder subBuilder = null;
              if (start_ != null) {
                subBuilder = start_.toBuilder();
              }
                start_ = input.readMessage(mahjong.mode.Mahjong.MahjongStartResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(start_);
                start_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                history_ = new java.util.ArrayList<mahjong.mode.GameBase.OperationHistory>();
                mutable_bitField0_ |= 0x00000002;
              }
              history_.add(
                  input.readMessage(mahjong.mode.GameBase.OperationHistory.parser(), extensionRegistry));
              break;
            }
            case 26: {
              mahjong.mode.Mahjong.MahjongResultResponse.Builder subBuilder = null;
              if (result_ != null) {
                subBuilder = result_.toBuilder();
              }
              result_ = input.readMessage(mahjong.mode.Mahjong.MahjongResultResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(result_);
                result_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          history_ = java.util.Collections.unmodifiableList(history_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mahjong.mode.Ruijin.internal_static_RuijinMahjongReplayResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mahjong.mode.Ruijin.internal_static_RuijinMahjongReplayResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mahjong.mode.Ruijin.RuijinMahjongReplayResponse.class, mahjong.mode.Ruijin.RuijinMahjongReplayResponse.Builder.class);
    }

    private int bitField0_;
    public static final int START_FIELD_NUMBER = 1;
      private mahjong.mode.Mahjong.MahjongStartResponse start_;
    /**
     * <code>.MahjongStartResponse start = 1;</code>
     */
    public boolean hasStart() {
      return start_ != null;
    }
    /**
     * <code>.MahjongStartResponse start = 1;</code>
     */
    public mahjong.mode.Mahjong.MahjongStartResponse getStart() {
        return start_ == null ? mahjong.mode.Mahjong.MahjongStartResponse.getDefaultInstance() : start_;
    }
    /**
     * <code>.MahjongStartResponse start = 1;</code>
     */
    public mahjong.mode.Mahjong.MahjongStartResponseOrBuilder getStartOrBuilder() {
      return getStart();
    }

    public static final int HISTORY_FIELD_NUMBER = 2;
    private java.util.List<mahjong.mode.GameBase.OperationHistory> history_;
    /**
     * <pre>
     *操作记录
     * </pre>
     *
     * <code>repeated .OperationHistory history = 2;</code>
     */
    public java.util.List<mahjong.mode.GameBase.OperationHistory> getHistoryList() {
      return history_;
    }
    /**
     * <pre>
     *操作记录
     * </pre>
     *
     * <code>repeated .OperationHistory history = 2;</code>
     */
    public java.util.List<? extends mahjong.mode.GameBase.OperationHistoryOrBuilder> 
        getHistoryOrBuilderList() {
      return history_;
    }
    /**
     * <pre>
     *操作记录
     * </pre>
     *
     * <code>repeated .OperationHistory history = 2;</code>
     */
    public int getHistoryCount() {
      return history_.size();
    }
    /**
     * <pre>
     *操作记录
     * </pre>
     *
     * <code>repeated .OperationHistory history = 2;</code>
     */
    public mahjong.mode.GameBase.OperationHistory getHistory(int index) {
      return history_.get(index);
    }
    /**
     * <pre>
     *操作记录
     * </pre>
     *
     * <code>repeated .OperationHistory history = 2;</code>
     */
    public mahjong.mode.GameBase.OperationHistoryOrBuilder getHistoryOrBuilder(
        int index) {
      return history_.get(index);
    }

    public static final int RESULT_FIELD_NUMBER = 3;
    private mahjong.mode.Mahjong.MahjongResultResponse result_;
    /**
     * <code>.MahjongResultResponse result = 3;</code>
     */
    public boolean hasResult() {
      return result_ != null;
    }
    /**
     * <code>.MahjongResultResponse result = 3;</code>
     */
    public mahjong.mode.Mahjong.MahjongResultResponse getResult() {
      return result_ == null ? mahjong.mode.Mahjong.MahjongResultResponse.getDefaultInstance() : result_;
    }
    /**
     * <code>.MahjongResultResponse result = 3;</code>
     */
    public mahjong.mode.Mahjong.MahjongResultResponseOrBuilder getResultOrBuilder() {
      return getResult();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (start_ != null) {
        output.writeMessage(1, getStart());
      }
      for (int i = 0; i < history_.size(); i++) {
        output.writeMessage(2, history_.get(i));
      }
      if (result_ != null) {
        output.writeMessage(3, getResult());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (start_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStart());
      }
      for (int i = 0; i < history_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, history_.get(i));
      }
      if (result_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getResult());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mahjong.mode.Ruijin.RuijinMahjongReplayResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Ruijin.RuijinMahjongReplayResponse other = (mahjong.mode.Ruijin.RuijinMahjongReplayResponse) obj;

      boolean result = true;
      result = result && (hasStart() == other.hasStart());
      if (hasStart()) {
        result = result && getStart()
            .equals(other.getStart());
      }
      result = result && getHistoryList()
          .equals(other.getHistoryList());
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && getResult()
            .equals(other.getResult());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStart()) {
        hash = (37 * hash) + START_FIELD_NUMBER;
        hash = (53 * hash) + getStart().hashCode();
      }
      if (getHistoryCount() > 0) {
        hash = (37 * hash) + HISTORY_FIELD_NUMBER;
        hash = (53 * hash) + getHistoryList().hashCode();
      }
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getResult().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mahjong.mode.Ruijin.RuijinMahjongReplayResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *回放    REPLAY
     * </pre>
     *
     * Protobuf type {@code RuijinMahjongReplayResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RuijinMahjongReplayResponse)
        mahjong.mode.Ruijin.RuijinMahjongReplayResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mahjong.mode.Ruijin.internal_static_RuijinMahjongReplayResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mahjong.mode.Ruijin.internal_static_RuijinMahjongReplayResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mahjong.mode.Ruijin.RuijinMahjongReplayResponse.class, mahjong.mode.Ruijin.RuijinMahjongReplayResponse.Builder.class);
      }

      // Construct using mahjong.mode.Ruijin.RuijinMahjongReplayResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHistoryFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (startBuilder_ == null) {
          start_ = null;
        } else {
          start_ = null;
          startBuilder_ = null;
        }
        if (historyBuilder_ == null) {
          history_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          historyBuilder_.clear();
        }
        if (resultBuilder_ == null) {
          result_ = null;
        } else {
          result_ = null;
          resultBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mahjong.mode.Ruijin.internal_static_RuijinMahjongReplayResponse_descriptor;
      }

      public mahjong.mode.Ruijin.RuijinMahjongReplayResponse getDefaultInstanceForType() {
        return mahjong.mode.Ruijin.RuijinMahjongReplayResponse.getDefaultInstance();
      }

      public mahjong.mode.Ruijin.RuijinMahjongReplayResponse build() {
        mahjong.mode.Ruijin.RuijinMahjongReplayResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Ruijin.RuijinMahjongReplayResponse buildPartial() {
        mahjong.mode.Ruijin.RuijinMahjongReplayResponse result = new mahjong.mode.Ruijin.RuijinMahjongReplayResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (startBuilder_ == null) {
          result.start_ = start_;
        } else {
          result.start_ = startBuilder_.build();
        }
        if (historyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            history_ = java.util.Collections.unmodifiableList(history_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.history_ = history_;
        } else {
          result.history_ = historyBuilder_.build();
        }
        if (resultBuilder_ == null) {
          result.result_ = result_;
        } else {
          result.result_ = resultBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Ruijin.RuijinMahjongReplayResponse) {
          return mergeFrom((mahjong.mode.Ruijin.RuijinMahjongReplayResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Ruijin.RuijinMahjongReplayResponse other) {
        if (other == mahjong.mode.Ruijin.RuijinMahjongReplayResponse.getDefaultInstance()) return this;
        if (other.hasStart()) {
          mergeStart(other.getStart());
        }
        if (historyBuilder_ == null) {
          if (!other.history_.isEmpty()) {
            if (history_.isEmpty()) {
              history_ = other.history_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHistoryIsMutable();
              history_.addAll(other.history_);
            }
            onChanged();
          }
        } else {
          if (!other.history_.isEmpty()) {
            if (historyBuilder_.isEmpty()) {
              historyBuilder_.dispose();
              historyBuilder_ = null;
              history_ = other.history_;
              bitField0_ = (bitField0_ & ~0x00000002);
              historyBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHistoryFieldBuilder() : null;
            } else {
              historyBuilder_.addAllMessages(other.history_);
            }
          }
        }
        if (other.hasResult()) {
          mergeResult(other.getResult());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mahjong.mode.Ruijin.RuijinMahjongReplayResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Ruijin.RuijinMahjongReplayResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

        private mahjong.mode.Mahjong.MahjongStartResponse start_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              mahjong.mode.Mahjong.MahjongStartResponse, mahjong.mode.Mahjong.MahjongStartResponse.Builder, mahjong.mode.Mahjong.MahjongStartResponseOrBuilder> startBuilder_;
      /**
       * <code>.MahjongStartResponse start = 1;</code>
       */
      public boolean hasStart() {
        return startBuilder_ != null || start_ != null;
      }
      /**
       * <code>.MahjongStartResponse start = 1;</code>
       */
      public mahjong.mode.Mahjong.MahjongStartResponse getStart() {
        if (startBuilder_ == null) {
            return start_ == null ? mahjong.mode.Mahjong.MahjongStartResponse.getDefaultInstance() : start_;
        } else {
          return startBuilder_.getMessage();
        }
      }
      /**
       * <code>.MahjongStartResponse start = 1;</code>
       */
      public Builder setStart(mahjong.mode.Mahjong.MahjongStartResponse value) {
        if (startBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          start_ = value;
          onChanged();
        } else {
          startBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.MahjongStartResponse start = 1;</code>
       */
      public Builder setStart(
              mahjong.mode.Mahjong.MahjongStartResponse.Builder builderForValue) {
        if (startBuilder_ == null) {
          start_ = builderForValue.build();
          onChanged();
        } else {
          startBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.MahjongStartResponse start = 1;</code>
       */
      public Builder mergeStart(mahjong.mode.Mahjong.MahjongStartResponse value) {
        if (startBuilder_ == null) {
          if (start_ != null) {
            start_ =
                    mahjong.mode.Mahjong.MahjongStartResponse.newBuilder(start_).mergeFrom(value).buildPartial();
          } else {
            start_ = value;
          }
          onChanged();
        } else {
          startBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.MahjongStartResponse start = 1;</code>
       */
      public Builder clearStart() {
        if (startBuilder_ == null) {
          start_ = null;
          onChanged();
        } else {
          start_ = null;
          startBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.MahjongStartResponse start = 1;</code>
       */
      public mahjong.mode.Mahjong.MahjongStartResponse.Builder getStartBuilder() {
        
        onChanged();
        return getStartFieldBuilder().getBuilder();
      }
      /**
       * <code>.MahjongStartResponse start = 1;</code>
       */
      public mahjong.mode.Mahjong.MahjongStartResponseOrBuilder getStartOrBuilder() {
        if (startBuilder_ != null) {
          return startBuilder_.getMessageOrBuilder();
        } else {
          return start_ == null ?
                  mahjong.mode.Mahjong.MahjongStartResponse.getDefaultInstance() : start_;
        }
      }
      /**
       * <code>.MahjongStartResponse start = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              mahjong.mode.Mahjong.MahjongStartResponse, mahjong.mode.Mahjong.MahjongStartResponse.Builder, mahjong.mode.Mahjong.MahjongStartResponseOrBuilder>
          getStartFieldBuilder() {
        if (startBuilder_ == null) {
          startBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  mahjong.mode.Mahjong.MahjongStartResponse, mahjong.mode.Mahjong.MahjongStartResponse.Builder, mahjong.mode.Mahjong.MahjongStartResponseOrBuilder>(
                  getStart(),
                  getParentForChildren(),
                  isClean());
          start_ = null;
        }
        return startBuilder_;
      }

      private java.util.List<mahjong.mode.GameBase.OperationHistory> history_ =
        java.util.Collections.emptyList();
      private void ensureHistoryIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          history_ = new java.util.ArrayList<mahjong.mode.GameBase.OperationHistory>(history_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          mahjong.mode.GameBase.OperationHistory, mahjong.mode.GameBase.OperationHistory.Builder, mahjong.mode.GameBase.OperationHistoryOrBuilder> historyBuilder_;

      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public java.util.List<mahjong.mode.GameBase.OperationHistory> getHistoryList() {
        if (historyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(history_);
        } else {
          return historyBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public int getHistoryCount() {
        if (historyBuilder_ == null) {
          return history_.size();
        } else {
          return historyBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public mahjong.mode.GameBase.OperationHistory getHistory(int index) {
        if (historyBuilder_ == null) {
          return history_.get(index);
        } else {
          return historyBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public Builder setHistory(
          int index, mahjong.mode.GameBase.OperationHistory value) {
        if (historyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryIsMutable();
          history_.set(index, value);
          onChanged();
        } else {
          historyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public Builder setHistory(
          int index, mahjong.mode.GameBase.OperationHistory.Builder builderForValue) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.set(index, builderForValue.build());
          onChanged();
        } else {
          historyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public Builder addHistory(mahjong.mode.GameBase.OperationHistory value) {
        if (historyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryIsMutable();
          history_.add(value);
          onChanged();
        } else {
          historyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public Builder addHistory(
          int index, mahjong.mode.GameBase.OperationHistory value) {
        if (historyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryIsMutable();
          history_.add(index, value);
          onChanged();
        } else {
          historyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public Builder addHistory(
          mahjong.mode.GameBase.OperationHistory.Builder builderForValue) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.add(builderForValue.build());
          onChanged();
        } else {
          historyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public Builder addHistory(
          int index, mahjong.mode.GameBase.OperationHistory.Builder builderForValue) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.add(index, builderForValue.build());
          onChanged();
        } else {
          historyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public Builder addAllHistory(
          java.lang.Iterable<? extends mahjong.mode.GameBase.OperationHistory> values) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, history_);
          onChanged();
        } else {
          historyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public Builder clearHistory() {
        if (historyBuilder_ == null) {
          history_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          historyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public Builder removeHistory(int index) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.remove(index);
          onChanged();
        } else {
          historyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public mahjong.mode.GameBase.OperationHistory.Builder getHistoryBuilder(
          int index) {
        return getHistoryFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public mahjong.mode.GameBase.OperationHistoryOrBuilder getHistoryOrBuilder(
          int index) {
        if (historyBuilder_ == null) {
          return history_.get(index);  } else {
          return historyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public java.util.List<? extends mahjong.mode.GameBase.OperationHistoryOrBuilder> 
           getHistoryOrBuilderList() {
        if (historyBuilder_ != null) {
          return historyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(history_);
        }
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public mahjong.mode.GameBase.OperationHistory.Builder addHistoryBuilder() {
        return getHistoryFieldBuilder().addBuilder(
            mahjong.mode.GameBase.OperationHistory.getDefaultInstance());
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public mahjong.mode.GameBase.OperationHistory.Builder addHistoryBuilder(
          int index) {
        return getHistoryFieldBuilder().addBuilder(
            index, mahjong.mode.GameBase.OperationHistory.getDefaultInstance());
      }
      /**
       * <pre>
       *操作记录
       * </pre>
       *
       * <code>repeated .OperationHistory history = 2;</code>
       */
      public java.util.List<mahjong.mode.GameBase.OperationHistory.Builder> 
           getHistoryBuilderList() {
        return getHistoryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          mahjong.mode.GameBase.OperationHistory, mahjong.mode.GameBase.OperationHistory.Builder, mahjong.mode.GameBase.OperationHistoryOrBuilder> 
          getHistoryFieldBuilder() {
        if (historyBuilder_ == null) {
          historyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              mahjong.mode.GameBase.OperationHistory, mahjong.mode.GameBase.OperationHistory.Builder, mahjong.mode.GameBase.OperationHistoryOrBuilder>(
                  history_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          history_ = null;
        }
        return historyBuilder_;
      }

      private mahjong.mode.Mahjong.MahjongResultResponse result_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mahjong.mode.Mahjong.MahjongResultResponse, mahjong.mode.Mahjong.MahjongResultResponse.Builder, mahjong.mode.Mahjong.MahjongResultResponseOrBuilder> resultBuilder_;
      /**
       * <code>.MahjongResultResponse result = 3;</code>
       */
      public boolean hasResult() {
        return resultBuilder_ != null || result_ != null;
      }
      /**
       * <code>.MahjongResultResponse result = 3;</code>
       */
      public mahjong.mode.Mahjong.MahjongResultResponse getResult() {
        if (resultBuilder_ == null) {
          return result_ == null ? mahjong.mode.Mahjong.MahjongResultResponse.getDefaultInstance() : result_;
        } else {
          return resultBuilder_.getMessage();
        }
      }
      /**
       * <code>.MahjongResultResponse result = 3;</code>
       */
      public Builder setResult(mahjong.mode.Mahjong.MahjongResultResponse value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          result_ = value;
          onChanged();
        } else {
          resultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.MahjongResultResponse result = 3;</code>
       */
      public Builder setResult(
          mahjong.mode.Mahjong.MahjongResultResponse.Builder builderForValue) {
        if (resultBuilder_ == null) {
          result_ = builderForValue.build();
          onChanged();
        } else {
          resultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.MahjongResultResponse result = 3;</code>
       */
      public Builder mergeResult(mahjong.mode.Mahjong.MahjongResultResponse value) {
        if (resultBuilder_ == null) {
          if (result_ != null) {
            result_ =
              mahjong.mode.Mahjong.MahjongResultResponse.newBuilder(result_).mergeFrom(value).buildPartial();
          } else {
            result_ = value;
          }
          onChanged();
        } else {
          resultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.MahjongResultResponse result = 3;</code>
       */
      public Builder clearResult() {
        if (resultBuilder_ == null) {
          result_ = null;
          onChanged();
        } else {
          result_ = null;
          resultBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.MahjongResultResponse result = 3;</code>
       */
      public mahjong.mode.Mahjong.MahjongResultResponse.Builder getResultBuilder() {
        
        onChanged();
        return getResultFieldBuilder().getBuilder();
      }
      /**
       * <code>.MahjongResultResponse result = 3;</code>
       */
      public mahjong.mode.Mahjong.MahjongResultResponseOrBuilder getResultOrBuilder() {
        if (resultBuilder_ != null) {
          return resultBuilder_.getMessageOrBuilder();
        } else {
          return result_ == null ?
              mahjong.mode.Mahjong.MahjongResultResponse.getDefaultInstance() : result_;
        }
      }
      /**
       * <code>.MahjongResultResponse result = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mahjong.mode.Mahjong.MahjongResultResponse, mahjong.mode.Mahjong.MahjongResultResponse.Builder, mahjong.mode.Mahjong.MahjongResultResponseOrBuilder> 
          getResultFieldBuilder() {
        if (resultBuilder_ == null) {
          resultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mahjong.mode.Mahjong.MahjongResultResponse, mahjong.mode.Mahjong.MahjongResultResponse.Builder, mahjong.mode.Mahjong.MahjongResultResponseOrBuilder>(
                  getResult(),
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        return resultBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RuijinMahjongReplayResponse)
    }

    // @@protoc_insertion_point(class_scope:RuijinMahjongReplayResponse)
    private static final mahjong.mode.Ruijin.RuijinMahjongReplayResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mahjong.mode.Ruijin.RuijinMahjongReplayResponse();
    }

    public static mahjong.mode.Ruijin.RuijinMahjongReplayResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RuijinMahjongReplayResponse>
        PARSER = new com.google.protobuf.AbstractParser<RuijinMahjongReplayResponse>() {
      public RuijinMahjongReplayResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RuijinMahjongReplayResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RuijinMahjongReplayResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RuijinMahjongReplayResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Ruijin.RuijinMahjongReplayResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RuijinMahjongIntoResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RuijinMahjongIntoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RuijinMahjongReplayResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RuijinMahjongReplayResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014ruijin.proto\032\016gameBase.proto\032\rmahjong." +
              "proto\"u\n\031RuijinMahjongIntoResponse\022\021\n\tba" +
              "seScore\030\001 \001(\r\022\021\n\tgameTimes\030\002 \001(\r\022\r\n\005coun" +
              "t\030\003 \001(\r\022\017\n\007dianpao\030\004 \001(\010\022\022\n\nzhuangxian\030\005" +
              " \001(\r\"\217\001\n\033RuijinMahjongReplayResponse\022$\n\005" +
              "start\030\001 \001(\0132\025.MahjongStartResponse\022\"\n\007hi" +
              "story\030\002 \003(\0132\021.OperationHistory\022&\n\006result" +
              "\030\003 \001(\0132\026.MahjongResultResponseB\016\n\014mahjon" +
              "g.modeb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          mahjong.mode.GameBase.getDescriptor(),
          mahjong.mode.Mahjong.getDescriptor(),
        }, assigner);
    internal_static_RuijinMahjongIntoResponse_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_RuijinMahjongIntoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RuijinMahjongIntoResponse_descriptor,
        new java.lang.String[] { "BaseScore", "GameTimes", "Count", "Dianpao", "Zhuangxian", });
    internal_static_RuijinMahjongReplayResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
    internal_static_RuijinMahjongReplayResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RuijinMahjongReplayResponse_descriptor,
        new java.lang.String[] { "Start", "History", "Result", });
    mahjong.mode.GameBase.getDescriptor();
    mahjong.mode.Mahjong.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
