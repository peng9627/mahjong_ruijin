// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mahjong.proto

package mahjong.mode;

public final class Mahjong {
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RoomCardIntoRequest_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RoomCardIntoRequest_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RoomCardIntoResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RoomCardIntoResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RoomSeatsInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RoomSeatsInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_GameInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_GameInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_SeatResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_SeatResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_SeatGameInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_SeatGameInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_DealCardResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_DealCardResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_PlayCardRequest_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_PlayCardRequest_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_PlayCardResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_PlayCardResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_MessageRequest_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_MessageRequest_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_PengResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_PengResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_GangRequest_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_GangRequest_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_GangResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_GangResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_ChiRequest_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_ChiRequest_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_ChiResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_ChiResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_HuResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_HuResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_GetCardResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_GetCardResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_ResultResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_ResultResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_UserResult_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_UserResult_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_Result_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_Result_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_MessageResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_MessageResponse_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\rmahjong.proto\032\016gameBase.proto\"1\n\023RoomC" +
                        "ardIntoRequest\022\n\n\002Id\030\001 \001(\t\022\016\n\006roomNo\030\002 \001" +
                        "(\t\"T\n\024RoomCardIntoResponse\022\031\n\005error\030\001 \001(" +
                        "\0162\n.ErrorCode\022\021\n\tbaseScore\030\002 \001(\001\022\016\n\006room" +
                        "No\030\003 \001(\t\"-\n\rRoomSeatsInfo\022\034\n\005seats\030\001 \003(\013" +
                        "2\r.SeatResponse\"{\n\010GameInfo\022\037\n\ngameStatu" +
                        "s\030\001 \001(\0162\013.GameStatus\022\025\n\roperationUser\030\002 " +
                        "\001(\t\022\031\n\021lastOperationUser\030\003 \001(\t\022\034\n\005seats\030" +
                        "\004 \003(\0132\r.SeatGameInfo\"o\n\014SeatResponse\022\016\n\006" +
                        "seatNo\030\001 \001(\r\022\n\n\002ID\030\002 \001(\t\022\020\n\010nickname\030\003 \001",
                "(\t\022\014\n\004gold\030\004 \001(\001\022\017\n\007isReady\030\005 \001(\010\022\022\n\nare" +
                        "aString\030\006 \001(\t\"\237\001\n\014SeatGameInfo\022\n\n\002ID\030\001 \001" +
                        "(\t\022\r\n\005cards\030\002 \003(\r\022\021\n\tcardsSize\030\003 \001(\r\022\025\n\r" +
                        "invertedCards\030\004 \003(\r\022\025\n\rinvertedIndex\030\005 \003" +
                        "(\r\022\023\n\013playedCards\030\006 \003(\r\022\r\n\005score\030\007 \001(\001\022\017" +
                        "\n\007isRobot\030\010 \001(\010\"?\n\020DealCardResponse\022\016\n\006b" +
                        "anker\030\001 \001(\t\022\014\n\004dice\030\002 \003(\r\022\r\n\005cards\030\003 \003(\r" +
                        "\"\037\n\017PlayCardRequest\022\014\n\004card\030\001 \001(\r\",\n\020Pla" +
                        "yCardResponse\022\n\n\002ID\030\001 \001(\t\022\014\n\004card\030\002 \001(\r\"" +
                        "!\n\016MessageRequest\022\017\n\007message\030\001 \001(\t\"\032\n\014Pe",
                "ngResponse\022\n\n\002ID\030\001 \001(\t\"\033\n\013GangRequest\022\014\n" +
                        "\004card\030\001 \001(\r\"(\n\014GangResponse\022\n\n\002ID\030\001 \001(\t\022" +
                        "\014\n\004card\030\002 \001(\r\"\033\n\nChiRequest\022\r\n\005cards\030\001 \003" +
                        "(\r\"\'\n\013ChiResponse\022\n\n\002ID\030\001 \001(\t\022\014\n\004card\030\002 " +
                        "\003(\r\"\030\n\nHuResponse\022\n\n\002ID\030\001 \001(\t\"+\n\017GetCard" +
                        "Response\022\n\n\002ID\030\001 \001(\t\022\014\n\004card\030\002 \001(\r\"1\n\016Re" +
                        "sultResponse\022\037\n\nuserResult\030\001 \003(\0132\013.UserR" +
                        "esult\"@\n\nUserResult\022\n\n\002ID\030\001 \001(\t\022\027\n\006resul" +
                        "t\030\002 \003(\0132\007.Result\022\r\n\005cards\030\003 \003(\r\"+\n\006Resul" +
                        "t\022\r\n\005score\030\001 \001(\001\022\022\n\nscoreTypes\030\002 \003(\r\"\"\n\017",
                "MessageResponse\022\017\n\007message\030\001 \001(\t*4\n\nGame" +
                        "Status\022\013\n\007WAITING\020\000\022\014\n\010READYING\020\001\022\013\n\007PLA" +
                        "YING\020\002B\016\n\014mahjong.modeb\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                mahjong.mode.GameBase.getDescriptor(),
                        }, assigner);
        internal_static_RoomCardIntoRequest_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_RoomCardIntoRequest_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RoomCardIntoRequest_descriptor,
                new java.lang.String[]{"Id", "RoomNo",});
        internal_static_RoomCardIntoResponse_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_RoomCardIntoResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RoomCardIntoResponse_descriptor,
                new java.lang.String[]{"Error", "BaseScore", "RoomNo",});
        internal_static_RoomSeatsInfo_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_RoomSeatsInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RoomSeatsInfo_descriptor,
                new java.lang.String[]{"Seats",});
        internal_static_GameInfo_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_GameInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_GameInfo_descriptor,
                new java.lang.String[]{"GameStatus", "OperationUser", "LastOperationUser", "Seats",});
        internal_static_SeatResponse_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_SeatResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_SeatResponse_descriptor,
                new java.lang.String[]{"SeatNo", "ID", "Nickname", "Gold", "IsReady", "AreaString",});
        internal_static_SeatGameInfo_descriptor =
                getDescriptor().getMessageTypes().get(5);
        internal_static_SeatGameInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_SeatGameInfo_descriptor,
                new java.lang.String[]{"ID", "Cards", "CardsSize", "InvertedCards", "InvertedIndex", "PlayedCards", "Score", "IsRobot",});
        internal_static_DealCardResponse_descriptor =
                getDescriptor().getMessageTypes().get(6);
        internal_static_DealCardResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_DealCardResponse_descriptor,
                new java.lang.String[]{"Banker", "Dice", "Cards",});
        internal_static_PlayCardRequest_descriptor =
                getDescriptor().getMessageTypes().get(7);
        internal_static_PlayCardRequest_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_PlayCardRequest_descriptor,
                new java.lang.String[]{"Card",});
        internal_static_PlayCardResponse_descriptor =
                getDescriptor().getMessageTypes().get(8);
        internal_static_PlayCardResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_PlayCardResponse_descriptor,
                new java.lang.String[]{"ID", "Card",});
        internal_static_MessageRequest_descriptor =
                getDescriptor().getMessageTypes().get(9);
        internal_static_MessageRequest_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_MessageRequest_descriptor,
                new java.lang.String[]{"Message",});
        internal_static_PengResponse_descriptor =
                getDescriptor().getMessageTypes().get(10);
        internal_static_PengResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_PengResponse_descriptor,
                new java.lang.String[]{"ID",});
        internal_static_GangRequest_descriptor =
                getDescriptor().getMessageTypes().get(11);
        internal_static_GangRequest_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_GangRequest_descriptor,
                new java.lang.String[]{"Card",});
        internal_static_GangResponse_descriptor =
                getDescriptor().getMessageTypes().get(12);
        internal_static_GangResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_GangResponse_descriptor,
                new java.lang.String[]{"ID", "Card",});
        internal_static_ChiRequest_descriptor =
                getDescriptor().getMessageTypes().get(13);
        internal_static_ChiRequest_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_ChiRequest_descriptor,
                new java.lang.String[]{"Cards",});
        internal_static_ChiResponse_descriptor =
                getDescriptor().getMessageTypes().get(14);
        internal_static_ChiResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_ChiResponse_descriptor,
                new java.lang.String[]{"ID", "Card",});
        internal_static_HuResponse_descriptor =
                getDescriptor().getMessageTypes().get(15);
        internal_static_HuResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_HuResponse_descriptor,
                new java.lang.String[]{"ID",});
        internal_static_GetCardResponse_descriptor =
                getDescriptor().getMessageTypes().get(16);
        internal_static_GetCardResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_GetCardResponse_descriptor,
                new java.lang.String[]{"ID", "Card",});
        internal_static_ResultResponse_descriptor =
                getDescriptor().getMessageTypes().get(17);
        internal_static_ResultResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_ResultResponse_descriptor,
                new java.lang.String[]{"UserResult",});
        internal_static_UserResult_descriptor =
                getDescriptor().getMessageTypes().get(18);
        internal_static_UserResult_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_UserResult_descriptor,
                new java.lang.String[]{"ID", "Result", "Cards",});
        internal_static_Result_descriptor =
                getDescriptor().getMessageTypes().get(19);
        internal_static_Result_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_Result_descriptor,
                new java.lang.String[]{"Score", "ScoreTypes",});
        internal_static_MessageResponse_descriptor =
                getDescriptor().getMessageTypes().get(20);
        internal_static_MessageResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_MessageResponse_descriptor,
                new java.lang.String[]{"Message",});
        mahjong.mode.GameBase.getDescriptor();
    }

    private Mahjong() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    /**
     * Protobuf enum {@code GameStatus}
     */
    public enum GameStatus
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         *等待开始
         * </pre>
         *
         * <code>WAITING = 0;</code>
         */
        WAITING(0),
        /**
         * <pre>
         *准备状态
         * </pre>
         *
         * <code>READYING = 1;</code>
         */
        READYING(1),
        /**
         * <pre>
         *游戏中
         * </pre>
         *
         * <code>PLAYING = 2;</code>
         */
        PLAYING(2),
        UNRECOGNIZED(-1),;

        /**
         * <pre>
         *等待开始
         * </pre>
         *
         * <code>WAITING = 0;</code>
         */
        public static final int WAITING_VALUE = 0;
        /**
         * <pre>
         *准备状态
         * </pre>
         *
         * <code>READYING = 1;</code>
         */
        public static final int READYING_VALUE = 1;
        /**
         * <pre>
         *游戏中
         * </pre>
         *
         * <code>PLAYING = 2;</code>
         */
        public static final int PLAYING_VALUE = 2;
        private static final com.google.protobuf.Internal.EnumLiteMap<
                GameStatus> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<GameStatus>() {
                    public GameStatus findValueByNumber(int number) {
                        return GameStatus.forNumber(number);
                    }
                };
        private static final GameStatus[] VALUES = values();
        private final int value;

        private GameStatus(int value) {
            this.value = value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static GameStatus valueOf(int value) {
            return forNumber(value);
        }

        public static GameStatus forNumber(int value) {
            switch (value) {
                case 0:
                    return WAITING;
                case 1:
                    return READYING;
                case 2:
                    return PLAYING;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<GameStatus>
        internalGetValueMap() {
            return internalValueMap;
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.getDescriptor().getEnumTypes().get(0);
        }

        public static GameStatus valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        // @@protoc_insertion_point(enum_scope:GameStatus)
    }

    public interface RoomCardIntoRequestOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RoomCardIntoRequest)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string Id = 1;</code>
         */
        java.lang.String getId();

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string Id = 1;</code>
         */
        com.google.protobuf.ByteString
        getIdBytes();

        /**
         * <pre>
         * 房号
         * </pre>
         * <p>
         * <code>string roomNo = 2;</code>
         */
        java.lang.String getRoomNo();

        /**
         * <pre>
         *房号
         * </pre>
         *
         * <code>string roomNo = 2;</code>
         */
        com.google.protobuf.ByteString
        getRoomNoBytes();
    }

    public interface RoomCardIntoResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RoomCardIntoResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.ErrorCode error = 1;</code>
         */
        int getErrorValue();

        /**
         * <code>.ErrorCode error = 1;</code>
         */
        mahjong.mode.GameBase.ErrorCode getError();

        /**
         * <pre>
         * 基础分
         * </pre>
         * <p>
         * <code>double baseScore = 2;</code>
         */
        double getBaseScore();

        /**
         * <pre>
         * 桌号
         * </pre>
         * <p>
         * <code>string roomNo = 3;</code>
         */
        java.lang.String getRoomNo();

        /**
         * <pre>
         * 桌号
         * </pre>
         * <p>
         * <code>string roomNo = 3;</code>
         */
        com.google.protobuf.ByteString
        getRoomNoBytes();
    }

    public interface RoomSeatsInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RoomSeatsInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatResponse seats = 1;</code>
         */
        java.util.List<mahjong.mode.Mahjong.SeatResponse>
        getSeatsList();

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatResponse seats = 1;</code>
         */
        mahjong.mode.Mahjong.SeatResponse getSeats(int index);

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatResponse seats = 1;</code>
         */
        int getSeatsCount();

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatResponse seats = 1;</code>
         */
        java.util.List<? extends mahjong.mode.Mahjong.SeatResponseOrBuilder>
        getSeatsOrBuilderList();

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatResponse seats = 1;</code>
         */
        mahjong.mode.Mahjong.SeatResponseOrBuilder getSeatsOrBuilder(
                int index);
    }

    public interface GameInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:GameInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 游戏状态
         * </pre>
         * <p>
         * <code>.GameStatus gameStatus = 1;</code>
         */
        int getGameStatusValue();

        /**
         * <pre>
         * 游戏状态
         * </pre>
         * <p>
         * <code>.GameStatus gameStatus = 1;</code>
         */
        mahjong.mode.Mahjong.GameStatus getGameStatus();

        /**
         * <pre>
         * 当前操作的人
         * </pre>
         * <p>
         * <code>string operationUser = 2;</code>
         */
        java.lang.String getOperationUser();

        /**
         * <pre>
         *当前操作的人
         * </pre>
         *
         * <code>string operationUser = 2;</code>
         */
        com.google.protobuf.ByteString
        getOperationUserBytes();

        /**
         * <pre>
         *上家出牌人
         * </pre>
         *
         * <code>string lastOperationUser = 3;</code>
         */
        java.lang.String getLastOperationUser();

        /**
         * <pre>
         * 上家出牌人
         * </pre>
         * <p>
         * <code>string lastOperationUser = 3;</code>
         */
        com.google.protobuf.ByteString
        getLastOperationUserBytes();

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatGameInfo seats = 4;</code>
         */
        java.util.List<mahjong.mode.Mahjong.SeatGameInfo>
        getSeatsList();

        /**
         * <pre>
         *座位
         * </pre>
         *
         * <code>repeated .SeatGameInfo seats = 4;</code>
         */
        mahjong.mode.Mahjong.SeatGameInfo getSeats(int index);

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatGameInfo seats = 4;</code>
         */
        int getSeatsCount();

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatGameInfo seats = 4;</code>
         */
        java.util.List<? extends mahjong.mode.Mahjong.SeatGameInfoOrBuilder>
        getSeatsOrBuilderList();

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatGameInfo seats = 4;</code>
         */
        mahjong.mode.Mahjong.SeatGameInfoOrBuilder getSeatsOrBuilder(
                int index);
    }

    public interface SeatResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:SeatResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 座位号
         * </pre>
         * <p>
         * <code>uint32 seatNo = 1;</code>
         */
        int getSeatNo();

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 2;</code>
         */
        java.lang.String getID();

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 2;</code>
         */
        com.google.protobuf.ByteString
        getIDBytes();

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string nickname = 3;</code>
         */
        java.lang.String getNickname();

        /**
         * <pre>
         *用户名
         * </pre>
         *
         * <code>string nickname = 3;</code>
         */
        com.google.protobuf.ByteString
        getNicknameBytes();

        /**
         * <pre>
         * 金币
         * </pre>
         * <p>
         * <code>double gold = 4;</code>
         */
        double getGold();

        /**
         * <pre>
         * 是否准备
         * </pre>
         * <p>
         * <code>bool isReady = 5;</code>
         */
        boolean getIsReady();

        /**
         * <pre>
         *地区
         * </pre>
         *
         * <code>string areaString = 6;</code>
         */
        java.lang.String getAreaString();

        /**
         * <pre>
         * 地区
         * </pre>
         * <p>
         * <code>string areaString = 6;</code>
         */
        com.google.protobuf.ByteString
        getAreaStringBytes();
    }

    public interface SeatGameInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:SeatGameInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        java.lang.String getID();

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        com.google.protobuf.ByteString
        getIDBytes();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 2;</code>
         */
        java.util.List<java.lang.Integer> getCardsList();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 2;</code>
         */
        int getCardsCount();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 2;</code>
         */
        int getCards(int index);

        /**
         * <pre>
         * 牌数量
         * </pre>
         * <p>
         * <code>uint32 cardsSize = 3;</code>
         */
        int getCardsSize();

        /**
         * <pre>
         * 碰或杠的牌
         * </pre>
         * <p>
         * <code>repeated uint32 invertedCards = 4;</code>
         */
        java.util.List<java.lang.Integer> getInvertedCardsList();

        /**
         * <pre>
         * 碰或杠的牌
         * </pre>
         * <p>
         * <code>repeated uint32 invertedCards = 4;</code>
         */
        int getInvertedCardsCount();

        /**
         * <pre>
         * 碰或杠的牌
         * </pre>
         * <p>
         * <code>repeated uint32 invertedCards = 4;</code>
         */
        int getInvertedCards(int index);

        /**
         * <pre>
         * 碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
         * </pre>
         * <p>
         * <code>repeated uint32 invertedIndex = 5;</code>
         */
        java.util.List<java.lang.Integer> getInvertedIndexList();

        /**
         * <pre>
         * 碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
         * </pre>
         * <p>
         * <code>repeated uint32 invertedIndex = 5;</code>
         */
        int getInvertedIndexCount();

        /**
         * <pre>
         * 碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
         * </pre>
         * <p>
         * <code>repeated uint32 invertedIndex = 5;</code>
         */
        int getInvertedIndex(int index);

        /**
         * <pre>
         * 出过的牌
         * </pre>
         * <p>
         * <code>repeated uint32 playedCards = 6;</code>
         */
        java.util.List<java.lang.Integer> getPlayedCardsList();

        /**
         * <pre>
         * 出过的牌
         * </pre>
         * <p>
         * <code>repeated uint32 playedCards = 6;</code>
         */
        int getPlayedCardsCount();

        /**
         * <pre>
         * 出过的牌
         * </pre>
         * <p>
         * <code>repeated uint32 playedCards = 6;</code>
         */
        int getPlayedCards(int index);

        /**
         * <pre>
         * 输赢分数
         * </pre>
         * <p>
         * <code>double score = 7;</code>
         */
        double getScore();

        /**
         * <pre>
         * 是否托管
         * </pre>
         * <p>
         * <code>bool isRobot = 8;</code>
         */
        boolean getIsRobot();
    }

    public interface DealCardResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:DealCardResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 庄家
         * </pre>
         * <p>
         * <code>string banker = 1;</code>
         */
        java.lang.String getBanker();

        /**
         * <pre>
         * 庄家
         * </pre>
         * <p>
         * <code>string banker = 1;</code>
         */
        com.google.protobuf.ByteString
        getBankerBytes();

        /**
         * <pre>
         * 骰子
         * </pre>
         * <p>
         * <code>repeated uint32 dice = 2;</code>
         */
        java.util.List<java.lang.Integer> getDiceList();

        /**
         * <pre>
         * 骰子
         * </pre>
         * <p>
         * <code>repeated uint32 dice = 2;</code>
         */
        int getDiceCount();

        /**
         * <pre>
         * 骰子
         * </pre>
         * <p>
         * <code>repeated uint32 dice = 2;</code>
         */
        int getDice(int index);

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 3;</code>
         */
        java.util.List<java.lang.Integer> getCardsList();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 3;</code>
         */
        int getCardsCount();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 3;</code>
         */
        int getCards(int index);
    }

    public interface PlayCardRequestOrBuilder extends
            // @@protoc_insertion_point(interface_extends:PlayCardRequest)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>uint32 card = 1;</code>
         */
        int getCard();
    }

    public interface PlayCardResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:PlayCardResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        java.lang.String getID();

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        com.google.protobuf.ByteString
        getIDBytes();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>uint32 card = 2;</code>
         */
        int getCard();
    }

    public interface MessageRequestOrBuilder extends
            // @@protoc_insertion_point(interface_extends:MessageRequest)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 内容
         * </pre>
         * <p>
         * <code>string message = 1;</code>
         */
        java.lang.String getMessage();

        /**
         * <pre>
         * 内容
         * </pre>
         * <p>
         * <code>string message = 1;</code>
         */
        com.google.protobuf.ByteString
        getMessageBytes();
    }

    public interface PengResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:PengResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 碰牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        java.lang.String getID();

        /**
         * <pre>
         * 碰牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        com.google.protobuf.ByteString
        getIDBytes();
    }

    public interface GangRequestOrBuilder extends
            // @@protoc_insertion_point(interface_extends:GangRequest)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>uint32 card = 1;</code>
         */
        int getCard();
    }

    public interface GangResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:GangResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 杠牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        java.lang.String getID();

        /**
         * <pre>
         * 杠牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        com.google.protobuf.ByteString
        getIDBytes();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>uint32 card = 2;</code>
         */
        int getCard();
    }

    public interface ChiRequestOrBuilder extends
            // @@protoc_insertion_point(interface_extends:ChiRequest)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 1;</code>
         */
        java.util.List<java.lang.Integer> getCardsList();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 1;</code>
         */
        int getCardsCount();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 1;</code>
         */
        int getCards(int index);
    }

    public interface ChiResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:ChiResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 吃牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        java.lang.String getID();

        /**
         * <pre>
         * 吃牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        com.google.protobuf.ByteString
        getIDBytes();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 card = 2;</code>
         */
        java.util.List<java.lang.Integer> getCardList();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 card = 2;</code>
         */
        int getCardCount();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 card = 2;</code>
         */
        int getCard(int index);
    }

    public interface HuResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:HuResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 胡牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        java.lang.String getID();

        /**
         * <pre>
         * 胡牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        com.google.protobuf.ByteString
        getIDBytes();
    }

    public interface GetCardResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:GetCardResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *用户名
         * </pre>
         *
         * <code>string ID = 1;</code>
         */
        java.lang.String getID();

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        com.google.protobuf.ByteString
        getIDBytes();

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>uint32 card = 2;</code>
         */
        int getCard();
    }

    public interface ResultResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:ResultResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 用户结算
         * </pre>
         * <p>
         * <code>repeated .UserResult userResult = 1;</code>
         */
        java.util.List<mahjong.mode.Mahjong.UserResult>
        getUserResultList();

        /**
         * <pre>
         * 用户结算
         * </pre>
         * <p>
         * <code>repeated .UserResult userResult = 1;</code>
         */
        mahjong.mode.Mahjong.UserResult getUserResult(int index);

        /**
         * <pre>
         * 用户结算
         * </pre>
         * <p>
         * <code>repeated .UserResult userResult = 1;</code>
         */
        int getUserResultCount();

        /**
         * <pre>
         * 用户结算
         * </pre>
         * <p>
         * <code>repeated .UserResult userResult = 1;</code>
         */
        java.util.List<? extends mahjong.mode.Mahjong.UserResultOrBuilder>
        getUserResultOrBuilderList();

        /**
         * <pre>
         * 用户结算
         * </pre>
         * <p>
         * <code>repeated .UserResult userResult = 1;</code>
         */
        mahjong.mode.Mahjong.UserResultOrBuilder getUserResultOrBuilder(
                int index);
    }

    public interface UserResultOrBuilder extends
            // @@protoc_insertion_point(interface_extends:UserResult)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        java.lang.String getID();

        /**
         * <pre>
         * 人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        com.google.protobuf.ByteString
        getIDBytes();

        /**
         * <pre>
         * 结算
         * </pre>
         * <p>
         * <code>repeated .Result result = 2;</code>
         */
        java.util.List<mahjong.mode.Mahjong.Result>
        getResultList();

        /**
         * <pre>
         * 结算
         * </pre>
         * <p>
         * <code>repeated .Result result = 2;</code>
         */
        mahjong.mode.Mahjong.Result getResult(int index);

        /**
         * <pre>
         * 结算
         * </pre>
         * <p>
         * <code>repeated .Result result = 2;</code>
         */
        int getResultCount();

        /**
         * <pre>
         * 结算
         * </pre>
         * <p>
         * <code>repeated .Result result = 2;</code>
         */
        java.util.List<? extends mahjong.mode.Mahjong.ResultOrBuilder>
        getResultOrBuilderList();

        /**
         * <pre>
         * 结算
         * </pre>
         * <p>
         * <code>repeated .Result result = 2;</code>
         */
        mahjong.mode.Mahjong.ResultOrBuilder getResultOrBuilder(
                int index);

        /**
         * <code>repeated uint32 cards = 3;</code>
         */
        java.util.List<java.lang.Integer> getCardsList();

        /**
         * <code>repeated uint32 cards = 3;</code>
         */
        int getCardsCount();

        /**
         * <code>repeated uint32 cards = 3;</code>
         */
        int getCards(int index);
    }

    public interface ResultOrBuilder extends
            // @@protoc_insertion_point(interface_extends:Result)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 结算
         * </pre>
         * <p>
         * <code>double score = 1;</code>
         */
        double getScore();

        /**
         * <pre>
         * 牌型
         * </pre>
         * <p>
         * <code>repeated uint32 scoreTypes = 2;</code>
         */
        java.util.List<java.lang.Integer> getScoreTypesList();

        /**
         * <pre>
         * 牌型
         * </pre>
         * <p>
         * <code>repeated uint32 scoreTypes = 2;</code>
         */
        int getScoreTypesCount();

        /**
         * <pre>
         * 牌型
         * </pre>
         * <p>
         * <code>repeated uint32 scoreTypes = 2;</code>
         */
        int getScoreTypes(int index);
    }

    public interface MessageResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:MessageResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 内容
         * </pre>
         * <p>
         * <code>string message = 1;</code>
         */
        java.lang.String getMessage();

        /**
         * <pre>
         * 内容
         * </pre>
         * <p>
         * <code>string message = 1;</code>
         */
        com.google.protobuf.ByteString
        getMessageBytes();
    }

    /**
     * <pre>
     * 房卡模式进入房间请求
     * </pre>
     * <p>
     * Protobuf type {@code RoomCardIntoRequest}
     */
    public static final class RoomCardIntoRequest extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RoomCardIntoRequest)
            RoomCardIntoRequestOrBuilder {
        public static final int ID_FIELD_NUMBER = 1;
        public static final int ROOMNO_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:RoomCardIntoRequest)
        private static final mahjong.mode.Mahjong.RoomCardIntoRequest DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<RoomCardIntoRequest>
                PARSER = new com.google.protobuf.AbstractParser<RoomCardIntoRequest>() {
            public RoomCardIntoRequest parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RoomCardIntoRequest(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.RoomCardIntoRequest();
        }

        private volatile java.lang.Object id_;
        private volatile java.lang.Object roomNo_;
        private byte memoizedIsInitialized = -1;

        // Use RoomCardIntoRequest.newBuilder() to construct.
        private RoomCardIntoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private RoomCardIntoRequest() {
            id_ = "";
            roomNo_ = "";
        }

        private RoomCardIntoRequest(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            id_ = s;
                            break;
                        }
                        case 18: {
                            java.lang.String s = input.readStringRequireUtf8();

                            roomNo_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_RoomCardIntoRequest_descriptor;
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.RoomCardIntoRequest prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoRequest getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<RoomCardIntoRequest> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_RoomCardIntoRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.RoomCardIntoRequest.class, mahjong.mode.Mahjong.RoomCardIntoRequest.Builder.class);
        }

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string Id = 1;</code>
         */
        public java.lang.String getId() {
            java.lang.Object ref = id_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                id_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string Id = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIdBytes() {
            java.lang.Object ref = id_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                id_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * 房号
         * </pre>
         * <p>
         * <code>string roomNo = 2;</code>
         */
        public java.lang.String getRoomNo() {
            java.lang.Object ref = roomNo_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                roomNo_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 房号
         * </pre>
         * <p>
         * <code>string roomNo = 2;</code>
         */
        public com.google.protobuf.ByteString
        getRoomNoBytes() {
            java.lang.Object ref = roomNo_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                roomNo_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getIdBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
            }
            if (!getRoomNoBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, roomNo_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIdBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
            }
            if (!getRoomNoBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, roomNo_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.RoomCardIntoRequest)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.RoomCardIntoRequest other = (mahjong.mode.Mahjong.RoomCardIntoRequest) obj;

            boolean result = true;
            result = result && getId()
                    .equals(other.getId());
            result = result && getRoomNo()
                    .equals(other.getRoomNo());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getId().hashCode();
            hash = (37 * hash) + ROOMNO_FIELD_NUMBER;
            hash = (53 * hash) + getRoomNo().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<RoomCardIntoRequest> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.RoomCardIntoRequest getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 房卡模式进入房间请求
         * </pre>
         * <p>
         * Protobuf type {@code RoomCardIntoRequest}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RoomCardIntoRequest)
                mahjong.mode.Mahjong.RoomCardIntoRequestOrBuilder {
            private java.lang.Object id_ = "";
            private java.lang.Object roomNo_ = "";

            // Construct using mahjong.mode.Mahjong.RoomCardIntoRequest.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_RoomCardIntoRequest_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_RoomCardIntoRequest_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.RoomCardIntoRequest.class, mahjong.mode.Mahjong.RoomCardIntoRequest.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                id_ = "";

                roomNo_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_RoomCardIntoRequest_descriptor;
            }

            public mahjong.mode.Mahjong.RoomCardIntoRequest getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.RoomCardIntoRequest.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.RoomCardIntoRequest build() {
                mahjong.mode.Mahjong.RoomCardIntoRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.RoomCardIntoRequest buildPartial() {
                mahjong.mode.Mahjong.RoomCardIntoRequest result = new mahjong.mode.Mahjong.RoomCardIntoRequest(this);
                result.id_ = id_;
                result.roomNo_ = roomNo_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.RoomCardIntoRequest) {
                    return mergeFrom((mahjong.mode.Mahjong.RoomCardIntoRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.RoomCardIntoRequest other) {
                if (other == mahjong.mode.Mahjong.RoomCardIntoRequest.getDefaultInstance()) return this;
                if (!other.getId().isEmpty()) {
                    id_ = other.id_;
                    onChanged();
                }
                if (!other.getRoomNo().isEmpty()) {
                    roomNo_ = other.roomNo_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.RoomCardIntoRequest parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.RoomCardIntoRequest) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string Id = 1;</code>
             */
            public java.lang.String getId() {
                java.lang.Object ref = id_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    id_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string Id = 1;</code>
             */
            public Builder setId(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string Id = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIdBytes() {
                java.lang.Object ref = id_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    id_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string Id = 1;</code>
             */
            public Builder setIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string Id = 1;</code>
             */
            public Builder clearId() {

                id_ = getDefaultInstance().getId();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 房号
             * </pre>
             * <p>
             * <code>string roomNo = 2;</code>
             */
            public java.lang.String getRoomNo() {
                java.lang.Object ref = roomNo_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    roomNo_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 房号
             * </pre>
             * <p>
             * <code>string roomNo = 2;</code>
             */
            public Builder setRoomNo(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                roomNo_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 房号
             * </pre>
             * <p>
             * <code>string roomNo = 2;</code>
             */
            public com.google.protobuf.ByteString
            getRoomNoBytes() {
                java.lang.Object ref = roomNo_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    roomNo_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 房号
             * </pre>
             * <p>
             * <code>string roomNo = 2;</code>
             */
            public Builder setRoomNoBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                roomNo_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 房号
             * </pre>
             * <p>
             * <code>string roomNo = 2;</code>
             */
            public Builder clearRoomNo() {

                roomNo_ = getDefaultInstance().getRoomNo();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:RoomCardIntoRequest)
        }

    }

    /**
     * <pre>
     * 进入房间返回
     * </pre>
     * <p>
     * Protobuf type {@code RoomCardIntoResponse}
     */
    public static final class RoomCardIntoResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RoomCardIntoResponse)
            RoomCardIntoResponseOrBuilder {
        public static final int ERROR_FIELD_NUMBER = 1;
        public static final int BASESCORE_FIELD_NUMBER = 2;
        public static final int ROOMNO_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:RoomCardIntoResponse)
        private static final mahjong.mode.Mahjong.RoomCardIntoResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<RoomCardIntoResponse>
                PARSER = new com.google.protobuf.AbstractParser<RoomCardIntoResponse>() {
            public RoomCardIntoResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RoomCardIntoResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.RoomCardIntoResponse();
        }

        private int error_;
        private double baseScore_;
        private volatile java.lang.Object roomNo_;
        private byte memoizedIsInitialized = -1;

        // Use RoomCardIntoResponse.newBuilder() to construct.
        private RoomCardIntoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private RoomCardIntoResponse() {
            error_ = 0;
            baseScore_ = 0D;
            roomNo_ = "";
        }

        private RoomCardIntoResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();

                            error_ = rawValue;
                            break;
                        }
                        case 17: {

                            baseScore_ = input.readDouble();
                            break;
                        }
                        case 26: {
                            java.lang.String s = input.readStringRequireUtf8();

                            roomNo_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_RoomCardIntoResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.RoomCardIntoResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.RoomCardIntoResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<RoomCardIntoResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_RoomCardIntoResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.RoomCardIntoResponse.class, mahjong.mode.Mahjong.RoomCardIntoResponse.Builder.class);
        }

        /**
         * <code>.ErrorCode error = 1;</code>
         */
        public int getErrorValue() {
            return error_;
        }

        /**
         * <code>.ErrorCode error = 1;</code>
         */
        public mahjong.mode.GameBase.ErrorCode getError() {
            mahjong.mode.GameBase.ErrorCode result = mahjong.mode.GameBase.ErrorCode.valueOf(error_);
            return result == null ? mahjong.mode.GameBase.ErrorCode.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * 基础分
         * </pre>
         * <p>
         * <code>double baseScore = 2;</code>
         */
        public double getBaseScore() {
            return baseScore_;
        }

        /**
         * <pre>
         * 桌号
         * </pre>
         * <p>
         * <code>string roomNo = 3;</code>
         */
        public java.lang.String getRoomNo() {
            java.lang.Object ref = roomNo_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                roomNo_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 桌号
         * </pre>
         * <p>
         * <code>string roomNo = 3;</code>
         */
        public com.google.protobuf.ByteString
        getRoomNoBytes() {
            java.lang.Object ref = roomNo_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                roomNo_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (error_ != mahjong.mode.GameBase.ErrorCode.SUCCESS.getNumber()) {
                output.writeEnum(1, error_);
            }
            if (baseScore_ != 0D) {
                output.writeDouble(2, baseScore_);
            }
            if (!getRoomNoBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, roomNo_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (error_ != mahjong.mode.GameBase.ErrorCode.SUCCESS.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, error_);
            }
            if (baseScore_ != 0D) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(2, baseScore_);
            }
            if (!getRoomNoBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, roomNo_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.RoomCardIntoResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.RoomCardIntoResponse other = (mahjong.mode.Mahjong.RoomCardIntoResponse) obj;

            boolean result = true;
            result = result && error_ == other.error_;
            result = result && (
                    java.lang.Double.doubleToLongBits(getBaseScore())
                            == java.lang.Double.doubleToLongBits(
                            other.getBaseScore()));
            result = result && getRoomNo()
                    .equals(other.getRoomNo());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ERROR_FIELD_NUMBER;
            hash = (53 * hash) + error_;
            hash = (37 * hash) + BASESCORE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    java.lang.Double.doubleToLongBits(getBaseScore()));
            hash = (37 * hash) + ROOMNO_FIELD_NUMBER;
            hash = (53 * hash) + getRoomNo().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<RoomCardIntoResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.RoomCardIntoResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 进入房间返回
         * </pre>
         * <p>
         * Protobuf type {@code RoomCardIntoResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RoomCardIntoResponse)
                mahjong.mode.Mahjong.RoomCardIntoResponseOrBuilder {
            private int error_ = 0;
            private double baseScore_;
            private java.lang.Object roomNo_ = "";

            // Construct using mahjong.mode.Mahjong.RoomCardIntoResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_RoomCardIntoResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_RoomCardIntoResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.RoomCardIntoResponse.class, mahjong.mode.Mahjong.RoomCardIntoResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                error_ = 0;

                baseScore_ = 0D;

                roomNo_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_RoomCardIntoResponse_descriptor;
            }

            public mahjong.mode.Mahjong.RoomCardIntoResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.RoomCardIntoResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.RoomCardIntoResponse build() {
                mahjong.mode.Mahjong.RoomCardIntoResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.RoomCardIntoResponse buildPartial() {
                mahjong.mode.Mahjong.RoomCardIntoResponse result = new mahjong.mode.Mahjong.RoomCardIntoResponse(this);
                result.error_ = error_;
                result.baseScore_ = baseScore_;
                result.roomNo_ = roomNo_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.RoomCardIntoResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.RoomCardIntoResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.RoomCardIntoResponse other) {
                if (other == mahjong.mode.Mahjong.RoomCardIntoResponse.getDefaultInstance()) return this;
                if (other.error_ != 0) {
                    setErrorValue(other.getErrorValue());
                }
                if (other.getBaseScore() != 0D) {
                    setBaseScore(other.getBaseScore());
                }
                if (!other.getRoomNo().isEmpty()) {
                    roomNo_ = other.roomNo_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.RoomCardIntoResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.RoomCardIntoResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>.ErrorCode error = 1;</code>
             */
            public int getErrorValue() {
                return error_;
            }

            /**
             * <code>.ErrorCode error = 1;</code>
             */
            public Builder setErrorValue(int value) {
                error_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>.ErrorCode error = 1;</code>
             */
            public mahjong.mode.GameBase.ErrorCode getError() {
                mahjong.mode.GameBase.ErrorCode result = mahjong.mode.GameBase.ErrorCode.valueOf(error_);
                return result == null ? mahjong.mode.GameBase.ErrorCode.UNRECOGNIZED : result;
            }

            /**
             * <code>.ErrorCode error = 1;</code>
             */
            public Builder setError(mahjong.mode.GameBase.ErrorCode value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                error_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <code>.ErrorCode error = 1;</code>
             */
            public Builder clearError() {

                error_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *基础分
             * </pre>
             *
             * <code>double baseScore = 2;</code>
             */
            public double getBaseScore() {
                return baseScore_;
            }

            /**
             * <pre>
             *基础分
             * </pre>
             *
             * <code>double baseScore = 2;</code>
             */
            public Builder setBaseScore(double value) {

                baseScore_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *基础分
             * </pre>
             *
             * <code>double baseScore = 2;</code>
             */
            public Builder clearBaseScore() {

                baseScore_ = 0D;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *桌号
             * </pre>
             *
             * <code>string roomNo = 3;</code>
             */
            public java.lang.String getRoomNo() {
                java.lang.Object ref = roomNo_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    roomNo_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *桌号
             * </pre>
             *
             * <code>string roomNo = 3;</code>
             */
            public Builder setRoomNo(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                roomNo_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *桌号
             * </pre>
             *
             * <code>string roomNo = 3;</code>
             */
            public com.google.protobuf.ByteString
            getRoomNoBytes() {
                java.lang.Object ref = roomNo_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    roomNo_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *桌号
             * </pre>
             *
             * <code>string roomNo = 3;</code>
             */
            public Builder setRoomNoBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                roomNo_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *桌号
             * </pre>
             *
             * <code>string roomNo = 3;</code>
             */
            public Builder clearRoomNo() {

                roomNo_ = getDefaultInstance().getRoomNo();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:RoomCardIntoResponse)
        }

    }

    /**
     * <pre>
     * 所有玩家信息
     * </pre>
     * <p>
     * Protobuf type {@code RoomSeatsInfo}
     */
    public static final class RoomSeatsInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RoomSeatsInfo)
            RoomSeatsInfoOrBuilder {
        public static final int SEATS_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:RoomSeatsInfo)
        private static final mahjong.mode.Mahjong.RoomSeatsInfo DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<RoomSeatsInfo>
                PARSER = new com.google.protobuf.AbstractParser<RoomSeatsInfo>() {
            public RoomSeatsInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RoomSeatsInfo(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.RoomSeatsInfo();
        }

        private java.util.List<mahjong.mode.Mahjong.SeatResponse> seats_;
        private byte memoizedIsInitialized = -1;

        // Use RoomSeatsInfo.newBuilder() to construct.
        private RoomSeatsInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private RoomSeatsInfo() {
            seats_ = java.util.Collections.emptyList();
        }

        private RoomSeatsInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                seats_ = new java.util.ArrayList<mahjong.mode.Mahjong.SeatResponse>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            seats_.add(
                                    input.readMessage(mahjong.mode.Mahjong.SeatResponse.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    seats_ = java.util.Collections.unmodifiableList(seats_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_RoomSeatsInfo_descriptor;
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.RoomSeatsInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.RoomSeatsInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<RoomSeatsInfo> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_RoomSeatsInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.RoomSeatsInfo.class, mahjong.mode.Mahjong.RoomSeatsInfo.Builder.class);
        }

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatResponse seats = 1;</code>
         */
        public java.util.List<mahjong.mode.Mahjong.SeatResponse> getSeatsList() {
            return seats_;
        }

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatResponse seats = 1;</code>
         */
        public java.util.List<? extends mahjong.mode.Mahjong.SeatResponseOrBuilder>
        getSeatsOrBuilderList() {
            return seats_;
        }

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatResponse seats = 1;</code>
         */
        public int getSeatsCount() {
            return seats_.size();
        }

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatResponse seats = 1;</code>
         */
        public mahjong.mode.Mahjong.SeatResponse getSeats(int index) {
            return seats_.get(index);
        }

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatResponse seats = 1;</code>
         */
        public mahjong.mode.Mahjong.SeatResponseOrBuilder getSeatsOrBuilder(
                int index) {
            return seats_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < seats_.size(); i++) {
                output.writeMessage(1, seats_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < seats_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, seats_.get(i));
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.RoomSeatsInfo)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.RoomSeatsInfo other = (mahjong.mode.Mahjong.RoomSeatsInfo) obj;

            boolean result = true;
            result = result && getSeatsList()
                    .equals(other.getSeatsList());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getSeatsCount() > 0) {
                hash = (37 * hash) + SEATS_FIELD_NUMBER;
                hash = (53 * hash) + getSeatsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<RoomSeatsInfo> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.RoomSeatsInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 所有玩家信息
         * </pre>
         * <p>
         * Protobuf type {@code RoomSeatsInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RoomSeatsInfo)
                mahjong.mode.Mahjong.RoomSeatsInfoOrBuilder {
            private int bitField0_;
            private java.util.List<mahjong.mode.Mahjong.SeatResponse> seats_ =
                    java.util.Collections.emptyList();
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    mahjong.mode.Mahjong.SeatResponse, mahjong.mode.Mahjong.SeatResponse.Builder, mahjong.mode.Mahjong.SeatResponseOrBuilder> seatsBuilder_;

            // Construct using mahjong.mode.Mahjong.RoomSeatsInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_RoomSeatsInfo_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_RoomSeatsInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.RoomSeatsInfo.class, mahjong.mode.Mahjong.RoomSeatsInfo.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getSeatsFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                if (seatsBuilder_ == null) {
                    seats_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    seatsBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_RoomSeatsInfo_descriptor;
            }

            public mahjong.mode.Mahjong.RoomSeatsInfo getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.RoomSeatsInfo.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.RoomSeatsInfo build() {
                mahjong.mode.Mahjong.RoomSeatsInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.RoomSeatsInfo buildPartial() {
                mahjong.mode.Mahjong.RoomSeatsInfo result = new mahjong.mode.Mahjong.RoomSeatsInfo(this);
                int from_bitField0_ = bitField0_;
                if (seatsBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        seats_ = java.util.Collections.unmodifiableList(seats_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.seats_ = seats_;
                } else {
                    result.seats_ = seatsBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.RoomSeatsInfo) {
                    return mergeFrom((mahjong.mode.Mahjong.RoomSeatsInfo) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.RoomSeatsInfo other) {
                if (other == mahjong.mode.Mahjong.RoomSeatsInfo.getDefaultInstance()) return this;
                if (seatsBuilder_ == null) {
                    if (!other.seats_.isEmpty()) {
                        if (seats_.isEmpty()) {
                            seats_ = other.seats_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureSeatsIsMutable();
                            seats_.addAll(other.seats_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.seats_.isEmpty()) {
                        if (seatsBuilder_.isEmpty()) {
                            seatsBuilder_.dispose();
                            seatsBuilder_ = null;
                            seats_ = other.seats_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            seatsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getSeatsFieldBuilder() : null;
                        } else {
                            seatsBuilder_.addAllMessages(other.seats_);
                        }
                    }
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.RoomSeatsInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.RoomSeatsInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private void ensureSeatsIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    seats_ = new java.util.ArrayList<mahjong.mode.Mahjong.SeatResponse>(seats_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public java.util.List<mahjong.mode.Mahjong.SeatResponse> getSeatsList() {
                if (seatsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(seats_);
                } else {
                    return seatsBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public int getSeatsCount() {
                if (seatsBuilder_ == null) {
                    return seats_.size();
                } else {
                    return seatsBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public mahjong.mode.Mahjong.SeatResponse getSeats(int index) {
                if (seatsBuilder_ == null) {
                    return seats_.get(index);
                } else {
                    return seatsBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public Builder setSeats(
                    int index, mahjong.mode.Mahjong.SeatResponse value) {
                if (seatsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSeatsIsMutable();
                    seats_.set(index, value);
                    onChanged();
                } else {
                    seatsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public Builder setSeats(
                    int index, mahjong.mode.Mahjong.SeatResponse.Builder builderForValue) {
                if (seatsBuilder_ == null) {
                    ensureSeatsIsMutable();
                    seats_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    seatsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public Builder addSeats(mahjong.mode.Mahjong.SeatResponse value) {
                if (seatsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSeatsIsMutable();
                    seats_.add(value);
                    onChanged();
                } else {
                    seatsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public Builder addSeats(
                    int index, mahjong.mode.Mahjong.SeatResponse value) {
                if (seatsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSeatsIsMutable();
                    seats_.add(index, value);
                    onChanged();
                } else {
                    seatsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public Builder addSeats(
                    mahjong.mode.Mahjong.SeatResponse.Builder builderForValue) {
                if (seatsBuilder_ == null) {
                    ensureSeatsIsMutable();
                    seats_.add(builderForValue.build());
                    onChanged();
                } else {
                    seatsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public Builder addSeats(
                    int index, mahjong.mode.Mahjong.SeatResponse.Builder builderForValue) {
                if (seatsBuilder_ == null) {
                    ensureSeatsIsMutable();
                    seats_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    seatsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public Builder addAllSeats(
                    java.lang.Iterable<? extends mahjong.mode.Mahjong.SeatResponse> values) {
                if (seatsBuilder_ == null) {
                    ensureSeatsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, seats_);
                    onChanged();
                } else {
                    seatsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public Builder clearSeats() {
                if (seatsBuilder_ == null) {
                    seats_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    seatsBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public Builder removeSeats(int index) {
                if (seatsBuilder_ == null) {
                    ensureSeatsIsMutable();
                    seats_.remove(index);
                    onChanged();
                } else {
                    seatsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public mahjong.mode.Mahjong.SeatResponse.Builder getSeatsBuilder(
                    int index) {
                return getSeatsFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public mahjong.mode.Mahjong.SeatResponseOrBuilder getSeatsOrBuilder(
                    int index) {
                if (seatsBuilder_ == null) {
                    return seats_.get(index);
                } else {
                    return seatsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public java.util.List<? extends mahjong.mode.Mahjong.SeatResponseOrBuilder>
            getSeatsOrBuilderList() {
                if (seatsBuilder_ != null) {
                    return seatsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(seats_);
                }
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public mahjong.mode.Mahjong.SeatResponse.Builder addSeatsBuilder() {
                return getSeatsFieldBuilder().addBuilder(
                        mahjong.mode.Mahjong.SeatResponse.getDefaultInstance());
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public mahjong.mode.Mahjong.SeatResponse.Builder addSeatsBuilder(
                    int index) {
                return getSeatsFieldBuilder().addBuilder(
                        index, mahjong.mode.Mahjong.SeatResponse.getDefaultInstance());
            }

            /**
             * <pre>
             * 座位
             * </pre>
             * <p>
             * <code>repeated .SeatResponse seats = 1;</code>
             */
            public java.util.List<mahjong.mode.Mahjong.SeatResponse.Builder>
            getSeatsBuilderList() {
                return getSeatsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    mahjong.mode.Mahjong.SeatResponse, mahjong.mode.Mahjong.SeatResponse.Builder, mahjong.mode.Mahjong.SeatResponseOrBuilder>
            getSeatsFieldBuilder() {
                if (seatsBuilder_ == null) {
                    seatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            mahjong.mode.Mahjong.SeatResponse, mahjong.mode.Mahjong.SeatResponse.Builder, mahjong.mode.Mahjong.SeatResponseOrBuilder>(
                            seats_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    seats_ = null;
                }
                return seatsBuilder_;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:RoomSeatsInfo)
        }

    }

    /**
     * <pre>
     * 游戏信息
     * </pre>
     * <p>
     * Protobuf type {@code GameInfo}
     */
    public static final class GameInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:GameInfo)
            GameInfoOrBuilder {
        public static final int GAMESTATUS_FIELD_NUMBER = 1;
        public static final int OPERATIONUSER_FIELD_NUMBER = 2;
        public static final int LASTOPERATIONUSER_FIELD_NUMBER = 3;
        public static final int SEATS_FIELD_NUMBER = 4;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:GameInfo)
        private static final mahjong.mode.Mahjong.GameInfo DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<GameInfo>
                PARSER = new com.google.protobuf.AbstractParser<GameInfo>() {
            public GameInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new GameInfo(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.GameInfo();
        }

        private int bitField0_;
        private int gameStatus_;
        private volatile java.lang.Object operationUser_;
        private volatile java.lang.Object lastOperationUser_;
        private java.util.List<mahjong.mode.Mahjong.SeatGameInfo> seats_;
        private byte memoizedIsInitialized = -1;

        // Use GameInfo.newBuilder() to construct.
        private GameInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private GameInfo() {
            gameStatus_ = 0;
            operationUser_ = "";
            lastOperationUser_ = "";
            seats_ = java.util.Collections.emptyList();
        }

        private GameInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();

                            gameStatus_ = rawValue;
                            break;
                        }
                        case 18: {
                            java.lang.String s = input.readStringRequireUtf8();

                            operationUser_ = s;
                            break;
                        }
                        case 26: {
                            java.lang.String s = input.readStringRequireUtf8();

                            lastOperationUser_ = s;
                            break;
                        }
                        case 34: {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                seats_ = new java.util.ArrayList<mahjong.mode.Mahjong.SeatGameInfo>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            seats_.add(
                                    input.readMessage(mahjong.mode.Mahjong.SeatGameInfo.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    seats_ = java.util.Collections.unmodifiableList(seats_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_GameInfo_descriptor;
        }

        public static mahjong.mode.Mahjong.GameInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GameInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GameInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GameInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GameInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GameInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GameInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GameInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GameInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GameInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GameInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GameInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.GameInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.GameInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<GameInfo> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_GameInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.GameInfo.class, mahjong.mode.Mahjong.GameInfo.Builder.class);
        }

        /**
         * <pre>
         * 游戏状态
         * </pre>
         * <p>
         * <code>.GameStatus gameStatus = 1;</code>
         */
        public int getGameStatusValue() {
            return gameStatus_;
        }

        /**
         * <pre>
         * 游戏状态
         * </pre>
         * <p>
         * <code>.GameStatus gameStatus = 1;</code>
         */
        public mahjong.mode.Mahjong.GameStatus getGameStatus() {
            mahjong.mode.Mahjong.GameStatus result = mahjong.mode.Mahjong.GameStatus.valueOf(gameStatus_);
            return result == null ? mahjong.mode.Mahjong.GameStatus.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * 当前操作的人
         * </pre>
         * <p>
         * <code>string operationUser = 2;</code>
         */
        public java.lang.String getOperationUser() {
            java.lang.Object ref = operationUser_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                operationUser_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 当前操作的人
         * </pre>
         * <p>
         * <code>string operationUser = 2;</code>
         */
        public com.google.protobuf.ByteString
        getOperationUserBytes() {
            java.lang.Object ref = operationUser_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                operationUser_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * 上家出牌人
         * </pre>
         * <p>
         * <code>string lastOperationUser = 3;</code>
         */
        public java.lang.String getLastOperationUser() {
            java.lang.Object ref = lastOperationUser_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                lastOperationUser_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 上家出牌人
         * </pre>
         * <p>
         * <code>string lastOperationUser = 3;</code>
         */
        public com.google.protobuf.ByteString
        getLastOperationUserBytes() {
            java.lang.Object ref = lastOperationUser_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                lastOperationUser_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatGameInfo seats = 4;</code>
         */
        public java.util.List<mahjong.mode.Mahjong.SeatGameInfo> getSeatsList() {
            return seats_;
        }

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatGameInfo seats = 4;</code>
         */
        public java.util.List<? extends mahjong.mode.Mahjong.SeatGameInfoOrBuilder>
        getSeatsOrBuilderList() {
            return seats_;
        }

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatGameInfo seats = 4;</code>
         */
        public int getSeatsCount() {
            return seats_.size();
        }

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatGameInfo seats = 4;</code>
         */
        public mahjong.mode.Mahjong.SeatGameInfo getSeats(int index) {
            return seats_.get(index);
        }

        /**
         * <pre>
         * 座位
         * </pre>
         * <p>
         * <code>repeated .SeatGameInfo seats = 4;</code>
         */
        public mahjong.mode.Mahjong.SeatGameInfoOrBuilder getSeatsOrBuilder(
                int index) {
            return seats_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (gameStatus_ != mahjong.mode.Mahjong.GameStatus.WAITING.getNumber()) {
                output.writeEnum(1, gameStatus_);
            }
            if (!getOperationUserBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, operationUser_);
            }
            if (!getLastOperationUserBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, lastOperationUser_);
            }
            for (int i = 0; i < seats_.size(); i++) {
                output.writeMessage(4, seats_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (gameStatus_ != mahjong.mode.Mahjong.GameStatus.WAITING.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, gameStatus_);
            }
            if (!getOperationUserBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, operationUser_);
            }
            if (!getLastOperationUserBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, lastOperationUser_);
            }
            for (int i = 0; i < seats_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, seats_.get(i));
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.GameInfo)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.GameInfo other = (mahjong.mode.Mahjong.GameInfo) obj;

            boolean result = true;
            result = result && gameStatus_ == other.gameStatus_;
            result = result && getOperationUser()
                    .equals(other.getOperationUser());
            result = result && getLastOperationUser()
                    .equals(other.getLastOperationUser());
            result = result && getSeatsList()
                    .equals(other.getSeatsList());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + GAMESTATUS_FIELD_NUMBER;
            hash = (53 * hash) + gameStatus_;
            hash = (37 * hash) + OPERATIONUSER_FIELD_NUMBER;
            hash = (53 * hash) + getOperationUser().hashCode();
            hash = (37 * hash) + LASTOPERATIONUSER_FIELD_NUMBER;
            hash = (53 * hash) + getLastOperationUser().hashCode();
            if (getSeatsCount() > 0) {
                hash = (37 * hash) + SEATS_FIELD_NUMBER;
                hash = (53 * hash) + getSeatsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<GameInfo> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.GameInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 游戏信息
         * </pre>
         * <p>
         * Protobuf type {@code GameInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:GameInfo)
                mahjong.mode.Mahjong.GameInfoOrBuilder {
            private int bitField0_;
            private int gameStatus_ = 0;
            private java.lang.Object operationUser_ = "";
            private java.lang.Object lastOperationUser_ = "";
            private java.util.List<mahjong.mode.Mahjong.SeatGameInfo> seats_ =
                    java.util.Collections.emptyList();
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    mahjong.mode.Mahjong.SeatGameInfo, mahjong.mode.Mahjong.SeatGameInfo.Builder, mahjong.mode.Mahjong.SeatGameInfoOrBuilder> seatsBuilder_;

            // Construct using mahjong.mode.Mahjong.GameInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_GameInfo_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_GameInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.GameInfo.class, mahjong.mode.Mahjong.GameInfo.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getSeatsFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                gameStatus_ = 0;

                operationUser_ = "";

                lastOperationUser_ = "";

                if (seatsBuilder_ == null) {
                    seats_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                    seatsBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_GameInfo_descriptor;
            }

            public mahjong.mode.Mahjong.GameInfo getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.GameInfo.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.GameInfo build() {
                mahjong.mode.Mahjong.GameInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.GameInfo buildPartial() {
                mahjong.mode.Mahjong.GameInfo result = new mahjong.mode.Mahjong.GameInfo(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.gameStatus_ = gameStatus_;
                result.operationUser_ = operationUser_;
                result.lastOperationUser_ = lastOperationUser_;
                if (seatsBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008)) {
                        seats_ = java.util.Collections.unmodifiableList(seats_);
                        bitField0_ = (bitField0_ & ~0x00000008);
                    }
                    result.seats_ = seats_;
                } else {
                    result.seats_ = seatsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.GameInfo) {
                    return mergeFrom((mahjong.mode.Mahjong.GameInfo) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.GameInfo other) {
                if (other == mahjong.mode.Mahjong.GameInfo.getDefaultInstance()) return this;
                if (other.gameStatus_ != 0) {
                    setGameStatusValue(other.getGameStatusValue());
                }
                if (!other.getOperationUser().isEmpty()) {
                    operationUser_ = other.operationUser_;
                    onChanged();
                }
                if (!other.getLastOperationUser().isEmpty()) {
                    lastOperationUser_ = other.lastOperationUser_;
                    onChanged();
                }
                if (seatsBuilder_ == null) {
                    if (!other.seats_.isEmpty()) {
                        if (seats_.isEmpty()) {
                            seats_ = other.seats_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                        } else {
                            ensureSeatsIsMutable();
                            seats_.addAll(other.seats_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.seats_.isEmpty()) {
                        if (seatsBuilder_.isEmpty()) {
                            seatsBuilder_.dispose();
                            seatsBuilder_ = null;
                            seats_ = other.seats_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                            seatsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getSeatsFieldBuilder() : null;
                        } else {
                            seatsBuilder_.addAllMessages(other.seats_);
                        }
                    }
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.GameInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.GameInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             *游戏状态
             * </pre>
             *
             * <code>.GameStatus gameStatus = 1;</code>
             */
            public int getGameStatusValue() {
                return gameStatus_;
            }

            /**
             * <pre>
             *游戏状态
             * </pre>
             *
             * <code>.GameStatus gameStatus = 1;</code>
             */
            public Builder setGameStatusValue(int value) {
                gameStatus_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *游戏状态
             * </pre>
             *
             * <code>.GameStatus gameStatus = 1;</code>
             */
            public mahjong.mode.Mahjong.GameStatus getGameStatus() {
                mahjong.mode.Mahjong.GameStatus result = mahjong.mode.Mahjong.GameStatus.valueOf(gameStatus_);
                return result == null ? mahjong.mode.Mahjong.GameStatus.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             *游戏状态
             * </pre>
             *
             * <code>.GameStatus gameStatus = 1;</code>
             */
            public Builder setGameStatus(mahjong.mode.Mahjong.GameStatus value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                gameStatus_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             *游戏状态
             * </pre>
             *
             * <code>.GameStatus gameStatus = 1;</code>
             */
            public Builder clearGameStatus() {

                gameStatus_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *当前操作的人
             * </pre>
             *
             * <code>string operationUser = 2;</code>
             */
            public java.lang.String getOperationUser() {
                java.lang.Object ref = operationUser_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    operationUser_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *当前操作的人
             * </pre>
             *
             * <code>string operationUser = 2;</code>
             */
            public Builder setOperationUser(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                operationUser_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *当前操作的人
             * </pre>
             *
             * <code>string operationUser = 2;</code>
             */
            public com.google.protobuf.ByteString
            getOperationUserBytes() {
                java.lang.Object ref = operationUser_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    operationUser_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *当前操作的人
             * </pre>
             *
             * <code>string operationUser = 2;</code>
             */
            public Builder setOperationUserBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                operationUser_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *当前操作的人
             * </pre>
             *
             * <code>string operationUser = 2;</code>
             */
            public Builder clearOperationUser() {

                operationUser_ = getDefaultInstance().getOperationUser();
                onChanged();
                return this;
            }

            /**
             * <pre>
             *上家出牌人
             * </pre>
             *
             * <code>string lastOperationUser = 3;</code>
             */
            public java.lang.String getLastOperationUser() {
                java.lang.Object ref = lastOperationUser_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    lastOperationUser_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *上家出牌人
             * </pre>
             *
             * <code>string lastOperationUser = 3;</code>
             */
            public Builder setLastOperationUser(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                lastOperationUser_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *上家出牌人
             * </pre>
             *
             * <code>string lastOperationUser = 3;</code>
             */
            public com.google.protobuf.ByteString
            getLastOperationUserBytes() {
                java.lang.Object ref = lastOperationUser_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    lastOperationUser_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *上家出牌人
             * </pre>
             *
             * <code>string lastOperationUser = 3;</code>
             */
            public Builder setLastOperationUserBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                lastOperationUser_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *上家出牌人
             * </pre>
             *
             * <code>string lastOperationUser = 3;</code>
             */
            public Builder clearLastOperationUser() {

                lastOperationUser_ = getDefaultInstance().getLastOperationUser();
                onChanged();
                return this;
            }

            private void ensureSeatsIsMutable() {
                if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                    seats_ = new java.util.ArrayList<mahjong.mode.Mahjong.SeatGameInfo>(seats_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public java.util.List<mahjong.mode.Mahjong.SeatGameInfo> getSeatsList() {
                if (seatsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(seats_);
                } else {
                    return seatsBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public int getSeatsCount() {
                if (seatsBuilder_ == null) {
                    return seats_.size();
                } else {
                    return seatsBuilder_.getCount();
                }
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public mahjong.mode.Mahjong.SeatGameInfo getSeats(int index) {
                if (seatsBuilder_ == null) {
                    return seats_.get(index);
                } else {
                    return seatsBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public Builder setSeats(
                    int index, mahjong.mode.Mahjong.SeatGameInfo value) {
                if (seatsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSeatsIsMutable();
                    seats_.set(index, value);
                    onChanged();
                } else {
                    seatsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public Builder setSeats(
                    int index, mahjong.mode.Mahjong.SeatGameInfo.Builder builderForValue) {
                if (seatsBuilder_ == null) {
                    ensureSeatsIsMutable();
                    seats_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    seatsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public Builder addSeats(mahjong.mode.Mahjong.SeatGameInfo value) {
                if (seatsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSeatsIsMutable();
                    seats_.add(value);
                    onChanged();
                } else {
                    seatsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public Builder addSeats(
                    int index, mahjong.mode.Mahjong.SeatGameInfo value) {
                if (seatsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSeatsIsMutable();
                    seats_.add(index, value);
                    onChanged();
                } else {
                    seatsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public Builder addSeats(
                    mahjong.mode.Mahjong.SeatGameInfo.Builder builderForValue) {
                if (seatsBuilder_ == null) {
                    ensureSeatsIsMutable();
                    seats_.add(builderForValue.build());
                    onChanged();
                } else {
                    seatsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public Builder addSeats(
                    int index, mahjong.mode.Mahjong.SeatGameInfo.Builder builderForValue) {
                if (seatsBuilder_ == null) {
                    ensureSeatsIsMutable();
                    seats_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    seatsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public Builder addAllSeats(
                    java.lang.Iterable<? extends mahjong.mode.Mahjong.SeatGameInfo> values) {
                if (seatsBuilder_ == null) {
                    ensureSeatsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, seats_);
                    onChanged();
                } else {
                    seatsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public Builder clearSeats() {
                if (seatsBuilder_ == null) {
                    seats_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                    onChanged();
                } else {
                    seatsBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public Builder removeSeats(int index) {
                if (seatsBuilder_ == null) {
                    ensureSeatsIsMutable();
                    seats_.remove(index);
                    onChanged();
                } else {
                    seatsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public mahjong.mode.Mahjong.SeatGameInfo.Builder getSeatsBuilder(
                    int index) {
                return getSeatsFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public mahjong.mode.Mahjong.SeatGameInfoOrBuilder getSeatsOrBuilder(
                    int index) {
                if (seatsBuilder_ == null) {
                    return seats_.get(index);
                } else {
                    return seatsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public java.util.List<? extends mahjong.mode.Mahjong.SeatGameInfoOrBuilder>
            getSeatsOrBuilderList() {
                if (seatsBuilder_ != null) {
                    return seatsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(seats_);
                }
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public mahjong.mode.Mahjong.SeatGameInfo.Builder addSeatsBuilder() {
                return getSeatsFieldBuilder().addBuilder(
                        mahjong.mode.Mahjong.SeatGameInfo.getDefaultInstance());
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public mahjong.mode.Mahjong.SeatGameInfo.Builder addSeatsBuilder(
                    int index) {
                return getSeatsFieldBuilder().addBuilder(
                        index, mahjong.mode.Mahjong.SeatGameInfo.getDefaultInstance());
            }

            /**
             * <pre>
             *座位
             * </pre>
             *
             * <code>repeated .SeatGameInfo seats = 4;</code>
             */
            public java.util.List<mahjong.mode.Mahjong.SeatGameInfo.Builder>
            getSeatsBuilderList() {
                return getSeatsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    mahjong.mode.Mahjong.SeatGameInfo, mahjong.mode.Mahjong.SeatGameInfo.Builder, mahjong.mode.Mahjong.SeatGameInfoOrBuilder>
            getSeatsFieldBuilder() {
                if (seatsBuilder_ == null) {
                    seatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            mahjong.mode.Mahjong.SeatGameInfo, mahjong.mode.Mahjong.SeatGameInfo.Builder, mahjong.mode.Mahjong.SeatGameInfoOrBuilder>(
                            seats_,
                            ((bitField0_ & 0x00000008) == 0x00000008),
                            getParentForChildren(),
                            isClean());
                    seats_ = null;
                }
                return seatsBuilder_;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:GameInfo)
        }

    }

    /**
     * <pre>
     * 玩家信息
     * </pre>
     * <p>
     * Protobuf type {@code SeatResponse}
     */
    public static final class SeatResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:SeatResponse)
            SeatResponseOrBuilder {
        public static final int SEATNO_FIELD_NUMBER = 1;
        public static final int ID_FIELD_NUMBER = 2;
        public static final int NICKNAME_FIELD_NUMBER = 3;
        public static final int GOLD_FIELD_NUMBER = 4;
        public static final int ISREADY_FIELD_NUMBER = 5;
        public static final int AREASTRING_FIELD_NUMBER = 6;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:SeatResponse)
        private static final mahjong.mode.Mahjong.SeatResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<SeatResponse>
                PARSER = new com.google.protobuf.AbstractParser<SeatResponse>() {
            public SeatResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new SeatResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.SeatResponse();
        }

        private int seatNo_;
        private volatile java.lang.Object iD_;
        private volatile java.lang.Object nickname_;
        private double gold_;
        private boolean isReady_;
        private volatile java.lang.Object areaString_;
        private byte memoizedIsInitialized = -1;

        // Use SeatResponse.newBuilder() to construct.
        private SeatResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private SeatResponse() {
            seatNo_ = 0;
            iD_ = "";
            nickname_ = "";
            gold_ = 0D;
            isReady_ = false;
            areaString_ = "";
        }

        private SeatResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            seatNo_ = input.readUInt32();
                            break;
                        }
                        case 18: {
                            java.lang.String s = input.readStringRequireUtf8();

                            iD_ = s;
                            break;
                        }
                        case 26: {
                            java.lang.String s = input.readStringRequireUtf8();

                            nickname_ = s;
                            break;
                        }
                        case 33: {

                            gold_ = input.readDouble();
                            break;
                        }
                        case 40: {

                            isReady_ = input.readBool();
                            break;
                        }
                        case 50: {
                            java.lang.String s = input.readStringRequireUtf8();

                            areaString_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_SeatResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.SeatResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.SeatResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.SeatResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.SeatResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<SeatResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_SeatResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.SeatResponse.class, mahjong.mode.Mahjong.SeatResponse.Builder.class);
        }

        /**
         * <pre>
         * 座位号
         * </pre>
         * <p>
         * <code>uint32 seatNo = 1;</code>
         */
        public int getSeatNo() {
            return seatNo_;
        }

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 2;</code>
         */
        public java.lang.String getID() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                iD_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 2;</code>
         */
        public com.google.protobuf.ByteString
        getIDBytes() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                iD_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string nickname = 3;</code>
         */
        public java.lang.String getNickname() {
            java.lang.Object ref = nickname_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                nickname_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string nickname = 3;</code>
         */
        public com.google.protobuf.ByteString
        getNicknameBytes() {
            java.lang.Object ref = nickname_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                nickname_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * 金币
         * </pre>
         * <p>
         * <code>double gold = 4;</code>
         */
        public double getGold() {
            return gold_;
        }

        /**
         * <pre>
         * 是否准备
         * </pre>
         * <p>
         * <code>bool isReady = 5;</code>
         */
        public boolean getIsReady() {
            return isReady_;
        }

        /**
         * <pre>
         * 地区
         * </pre>
         * <p>
         * <code>string areaString = 6;</code>
         */
        public java.lang.String getAreaString() {
            java.lang.Object ref = areaString_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                areaString_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 地区
         * </pre>
         * <p>
         * <code>string areaString = 6;</code>
         */
        public com.google.protobuf.ByteString
        getAreaStringBytes() {
            java.lang.Object ref = areaString_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                areaString_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (seatNo_ != 0) {
                output.writeUInt32(1, seatNo_);
            }
            if (!getIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, iD_);
            }
            if (!getNicknameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, nickname_);
            }
            if (gold_ != 0D) {
                output.writeDouble(4, gold_);
            }
            if (isReady_ != false) {
                output.writeBool(5, isReady_);
            }
            if (!getAreaStringBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 6, areaString_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (seatNo_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, seatNo_);
            }
            if (!getIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, iD_);
            }
            if (!getNicknameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, nickname_);
            }
            if (gold_ != 0D) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(4, gold_);
            }
            if (isReady_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(5, isReady_);
            }
            if (!getAreaStringBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, areaString_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.SeatResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.SeatResponse other = (mahjong.mode.Mahjong.SeatResponse) obj;

            boolean result = true;
            result = result && (getSeatNo()
                    == other.getSeatNo());
            result = result && getID()
                    .equals(other.getID());
            result = result && getNickname()
                    .equals(other.getNickname());
            result = result && (
                    java.lang.Double.doubleToLongBits(getGold())
                            == java.lang.Double.doubleToLongBits(
                            other.getGold()));
            result = result && (getIsReady()
                    == other.getIsReady());
            result = result && getAreaString()
                    .equals(other.getAreaString());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + SEATNO_FIELD_NUMBER;
            hash = (53 * hash) + getSeatNo();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getID().hashCode();
            hash = (37 * hash) + NICKNAME_FIELD_NUMBER;
            hash = (53 * hash) + getNickname().hashCode();
            hash = (37 * hash) + GOLD_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    java.lang.Double.doubleToLongBits(getGold()));
            hash = (37 * hash) + ISREADY_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsReady());
            hash = (37 * hash) + AREASTRING_FIELD_NUMBER;
            hash = (53 * hash) + getAreaString().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SeatResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.SeatResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 玩家信息
         * </pre>
         * <p>
         * Protobuf type {@code SeatResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:SeatResponse)
                mahjong.mode.Mahjong.SeatResponseOrBuilder {
            private int seatNo_;
            private java.lang.Object iD_ = "";
            private java.lang.Object nickname_ = "";
            private double gold_;
            private boolean isReady_;
            private java.lang.Object areaString_ = "";

            // Construct using mahjong.mode.Mahjong.SeatResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_SeatResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_SeatResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.SeatResponse.class, mahjong.mode.Mahjong.SeatResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                seatNo_ = 0;

                iD_ = "";

                nickname_ = "";

                gold_ = 0D;

                isReady_ = false;

                areaString_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_SeatResponse_descriptor;
            }

            public mahjong.mode.Mahjong.SeatResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.SeatResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.SeatResponse build() {
                mahjong.mode.Mahjong.SeatResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.SeatResponse buildPartial() {
                mahjong.mode.Mahjong.SeatResponse result = new mahjong.mode.Mahjong.SeatResponse(this);
                result.seatNo_ = seatNo_;
                result.iD_ = iD_;
                result.nickname_ = nickname_;
                result.gold_ = gold_;
                result.isReady_ = isReady_;
                result.areaString_ = areaString_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.SeatResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.SeatResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.SeatResponse other) {
                if (other == mahjong.mode.Mahjong.SeatResponse.getDefaultInstance()) return this;
                if (other.getSeatNo() != 0) {
                    setSeatNo(other.getSeatNo());
                }
                if (!other.getID().isEmpty()) {
                    iD_ = other.iD_;
                    onChanged();
                }
                if (!other.getNickname().isEmpty()) {
                    nickname_ = other.nickname_;
                    onChanged();
                }
                if (other.getGold() != 0D) {
                    setGold(other.getGold());
                }
                if (other.getIsReady() != false) {
                    setIsReady(other.getIsReady());
                }
                if (!other.getAreaString().isEmpty()) {
                    areaString_ = other.areaString_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.SeatResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.SeatResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * 座位号
             * </pre>
             * <p>
             * <code>uint32 seatNo = 1;</code>
             */
            public int getSeatNo() {
                return seatNo_;
            }

            /**
             * <pre>
             * 座位号
             * </pre>
             * <p>
             * <code>uint32 seatNo = 1;</code>
             */
            public Builder setSeatNo(int value) {

                seatNo_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 座位号
             * </pre>
             * <p>
             * <code>uint32 seatNo = 1;</code>
             */
            public Builder clearSeatNo() {

                seatNo_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 2;</code>
             */
            public java.lang.String getID() {
                java.lang.Object ref = iD_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    iD_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 2;</code>
             */
            public Builder setID(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 2;</code>
             */
            public com.google.protobuf.ByteString
            getIDBytes() {
                java.lang.Object ref = iD_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    iD_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 2;</code>
             */
            public Builder setIDBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 2;</code>
             */
            public Builder clearID() {

                iD_ = getDefaultInstance().getID();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string nickname = 3;</code>
             */
            public java.lang.String getNickname() {
                java.lang.Object ref = nickname_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    nickname_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string nickname = 3;</code>
             */
            public Builder setNickname(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                nickname_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string nickname = 3;</code>
             */
            public com.google.protobuf.ByteString
            getNicknameBytes() {
                java.lang.Object ref = nickname_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    nickname_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string nickname = 3;</code>
             */
            public Builder setNicknameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                nickname_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string nickname = 3;</code>
             */
            public Builder clearNickname() {

                nickname_ = getDefaultInstance().getNickname();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 金币
             * </pre>
             * <p>
             * <code>double gold = 4;</code>
             */
            public double getGold() {
                return gold_;
            }

            /**
             * <pre>
             * 金币
             * </pre>
             * <p>
             * <code>double gold = 4;</code>
             */
            public Builder setGold(double value) {

                gold_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 金币
             * </pre>
             * <p>
             * <code>double gold = 4;</code>
             */
            public Builder clearGold() {

                gold_ = 0D;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 是否准备
             * </pre>
             * <p>
             * <code>bool isReady = 5;</code>
             */
            public boolean getIsReady() {
                return isReady_;
            }

            /**
             * <pre>
             * 是否准备
             * </pre>
             * <p>
             * <code>bool isReady = 5;</code>
             */
            public Builder setIsReady(boolean value) {

                isReady_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 是否准备
             * </pre>
             * <p>
             * <code>bool isReady = 5;</code>
             */
            public Builder clearIsReady() {

                isReady_ = false;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 地区
             * </pre>
             * <p>
             * <code>string areaString = 6;</code>
             */
            public java.lang.String getAreaString() {
                java.lang.Object ref = areaString_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    areaString_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 地区
             * </pre>
             * <p>
             * <code>string areaString = 6;</code>
             */
            public Builder setAreaString(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                areaString_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 地区
             * </pre>
             * <p>
             * <code>string areaString = 6;</code>
             */
            public com.google.protobuf.ByteString
            getAreaStringBytes() {
                java.lang.Object ref = areaString_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    areaString_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 地区
             * </pre>
             * <p>
             * <code>string areaString = 6;</code>
             */
            public Builder setAreaStringBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                areaString_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 地区
             * </pre>
             * <p>
             * <code>string areaString = 6;</code>
             */
            public Builder clearAreaString() {

                areaString_ = getDefaultInstance().getAreaString();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:SeatResponse)
        }

    }

    /**
     * <pre>
     * 玩家游戏信息
     * </pre>
     * <p>
     * Protobuf type {@code SeatGameInfo}
     */
    public static final class SeatGameInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:SeatGameInfo)
            SeatGameInfoOrBuilder {
        public static final int ID_FIELD_NUMBER = 1;
        public static final int CARDS_FIELD_NUMBER = 2;
        public static final int CARDSSIZE_FIELD_NUMBER = 3;
        public static final int INVERTEDCARDS_FIELD_NUMBER = 4;
        public static final int INVERTEDINDEX_FIELD_NUMBER = 5;
        public static final int PLAYEDCARDS_FIELD_NUMBER = 6;
        public static final int SCORE_FIELD_NUMBER = 7;
        public static final int ISROBOT_FIELD_NUMBER = 8;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:SeatGameInfo)
        private static final mahjong.mode.Mahjong.SeatGameInfo DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<SeatGameInfo>
                PARSER = new com.google.protobuf.AbstractParser<SeatGameInfo>() {
            public SeatGameInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new SeatGameInfo(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.SeatGameInfo();
        }

        private int bitField0_;
        private volatile java.lang.Object iD_;
        private java.util.List<java.lang.Integer> cards_;
        private int cardsMemoizedSerializedSize = -1;
        private int cardsSize_;
        private java.util.List<java.lang.Integer> invertedCards_;
        private int invertedCardsMemoizedSerializedSize = -1;
        private java.util.List<java.lang.Integer> invertedIndex_;
        private int invertedIndexMemoizedSerializedSize = -1;
        private java.util.List<java.lang.Integer> playedCards_;
        private int playedCardsMemoizedSerializedSize = -1;
        private double score_;
        private boolean isRobot_;
        private byte memoizedIsInitialized = -1;

        // Use SeatGameInfo.newBuilder() to construct.
        private SeatGameInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private SeatGameInfo() {
            iD_ = "";
            cards_ = java.util.Collections.emptyList();
            cardsSize_ = 0;
            invertedCards_ = java.util.Collections.emptyList();
            invertedIndex_ = java.util.Collections.emptyList();
            playedCards_ = java.util.Collections.emptyList();
            score_ = 0D;
            isRobot_ = false;
        }

        private SeatGameInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            iD_ = s;
                            break;
                        }
                        case 16: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                cards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            cards_.add(input.readUInt32());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                                cards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                cards_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 24: {

                            cardsSize_ = input.readUInt32();
                            break;
                        }
                        case 32: {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                invertedCards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            invertedCards_.add(input.readUInt32());
                            break;
                        }
                        case 34: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                                invertedCards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                invertedCards_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 40: {
                            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                                invertedIndex_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            invertedIndex_.add(input.readUInt32());
                            break;
                        }
                        case 42: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                                invertedIndex_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                invertedIndex_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                playedCards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            playedCards_.add(input.readUInt32());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                playedCards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                playedCards_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 57: {

                            score_ = input.readDouble();
                            break;
                        }
                        case 64: {

                            isRobot_ = input.readBool();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    cards_ = java.util.Collections.unmodifiableList(cards_);
                }
                if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    invertedCards_ = java.util.Collections.unmodifiableList(invertedCards_);
                }
                if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    invertedIndex_ = java.util.Collections.unmodifiableList(invertedIndex_);
                }
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    playedCards_ = java.util.Collections.unmodifiableList(playedCards_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_SeatGameInfo_descriptor;
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.SeatGameInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.SeatGameInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<SeatGameInfo> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_SeatGameInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.SeatGameInfo.class, mahjong.mode.Mahjong.SeatGameInfo.Builder.class);
        }

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        public java.lang.String getID() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                iD_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIDBytes() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                iD_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 2;</code>
         */
        public java.util.List<java.lang.Integer>
        getCardsList() {
            return cards_;
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 2;</code>
         */
        public int getCardsCount() {
            return cards_.size();
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 2;</code>
         */
        public int getCards(int index) {
            return cards_.get(index);
        }

        /**
         * <pre>
         * 牌数量
         * </pre>
         * <p>
         * <code>uint32 cardsSize = 3;</code>
         */
        public int getCardsSize() {
            return cardsSize_;
        }

        /**
         * <pre>
         * 碰或杠的牌
         * </pre>
         * <p>
         * <code>repeated uint32 invertedCards = 4;</code>
         */
        public java.util.List<java.lang.Integer>
        getInvertedCardsList() {
            return invertedCards_;
        }

        /**
         * <pre>
         * 碰或杠的牌
         * </pre>
         * <p>
         * <code>repeated uint32 invertedCards = 4;</code>
         */
        public int getInvertedCardsCount() {
            return invertedCards_.size();
        }

        /**
         * <pre>
         * 碰或杠的牌
         * </pre>
         * <p>
         * <code>repeated uint32 invertedCards = 4;</code>
         */
        public int getInvertedCards(int index) {
            return invertedCards_.get(index);
        }

        /**
         * <pre>
         * 碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
         * </pre>
         * <p>
         * <code>repeated uint32 invertedIndex = 5;</code>
         */
        public java.util.List<java.lang.Integer>
        getInvertedIndexList() {
            return invertedIndex_;
        }

        /**
         * <pre>
         * 碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
         * </pre>
         * <p>
         * <code>repeated uint32 invertedIndex = 5;</code>
         */
        public int getInvertedIndexCount() {
            return invertedIndex_.size();
        }

        /**
         * <pre>
         * 碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
         * </pre>
         * <p>
         * <code>repeated uint32 invertedIndex = 5;</code>
         */
        public int getInvertedIndex(int index) {
            return invertedIndex_.get(index);
        }

        /**
         * <pre>
         * 出过的牌
         * </pre>
         * <p>
         * <code>repeated uint32 playedCards = 6;</code>
         */
        public java.util.List<java.lang.Integer>
        getPlayedCardsList() {
            return playedCards_;
        }

        /**
         * <pre>
         * 出过的牌
         * </pre>
         * <p>
         * <code>repeated uint32 playedCards = 6;</code>
         */
        public int getPlayedCardsCount() {
            return playedCards_.size();
        }

        /**
         * <pre>
         * 出过的牌
         * </pre>
         * <p>
         * <code>repeated uint32 playedCards = 6;</code>
         */
        public int getPlayedCards(int index) {
            return playedCards_.get(index);
        }

        /**
         * <pre>
         * 输赢分数
         * </pre>
         * <p>
         * <code>double score = 7;</code>
         */
        public double getScore() {
            return score_;
        }

        /**
         * <pre>
         * 是否托管
         * </pre>
         * <p>
         * <code>bool isRobot = 8;</code>
         */
        public boolean getIsRobot() {
            return isRobot_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (!getIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, iD_);
            }
            if (getCardsList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(cardsMemoizedSerializedSize);
            }
            for (int i = 0; i < cards_.size(); i++) {
                output.writeUInt32NoTag(cards_.get(i));
            }
            if (cardsSize_ != 0) {
                output.writeUInt32(3, cardsSize_);
            }
            if (getInvertedCardsList().size() > 0) {
                output.writeUInt32NoTag(34);
                output.writeUInt32NoTag(invertedCardsMemoizedSerializedSize);
            }
            for (int i = 0; i < invertedCards_.size(); i++) {
                output.writeUInt32NoTag(invertedCards_.get(i));
            }
            if (getInvertedIndexList().size() > 0) {
                output.writeUInt32NoTag(42);
                output.writeUInt32NoTag(invertedIndexMemoizedSerializedSize);
            }
            for (int i = 0; i < invertedIndex_.size(); i++) {
                output.writeUInt32NoTag(invertedIndex_.get(i));
            }
            if (getPlayedCardsList().size() > 0) {
                output.writeUInt32NoTag(50);
                output.writeUInt32NoTag(playedCardsMemoizedSerializedSize);
            }
            for (int i = 0; i < playedCards_.size(); i++) {
                output.writeUInt32NoTag(playedCards_.get(i));
            }
            if (score_ != 0D) {
                output.writeDouble(7, score_);
            }
            if (isRobot_ != false) {
                output.writeBool(8, isRobot_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, iD_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < cards_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(cards_.get(i));
                }
                size += dataSize;
                if (!getCardsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                cardsMemoizedSerializedSize = dataSize;
            }
            if (cardsSize_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, cardsSize_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < invertedCards_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(invertedCards_.get(i));
                }
                size += dataSize;
                if (!getInvertedCardsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                invertedCardsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < invertedIndex_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(invertedIndex_.get(i));
                }
                size += dataSize;
                if (!getInvertedIndexList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                invertedIndexMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < playedCards_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(playedCards_.get(i));
                }
                size += dataSize;
                if (!getPlayedCardsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                playedCardsMemoizedSerializedSize = dataSize;
            }
            if (score_ != 0D) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(7, score_);
            }
            if (isRobot_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(8, isRobot_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.SeatGameInfo)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.SeatGameInfo other = (mahjong.mode.Mahjong.SeatGameInfo) obj;

            boolean result = true;
            result = result && getID()
                    .equals(other.getID());
            result = result && getCardsList()
                    .equals(other.getCardsList());
            result = result && (getCardsSize()
                    == other.getCardsSize());
            result = result && getInvertedCardsList()
                    .equals(other.getInvertedCardsList());
            result = result && getInvertedIndexList()
                    .equals(other.getInvertedIndexList());
            result = result && getPlayedCardsList()
                    .equals(other.getPlayedCardsList());
            result = result && (
                    java.lang.Double.doubleToLongBits(getScore())
                            == java.lang.Double.doubleToLongBits(
                            other.getScore()));
            result = result && (getIsRobot()
                    == other.getIsRobot());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getID().hashCode();
            if (getCardsCount() > 0) {
                hash = (37 * hash) + CARDS_FIELD_NUMBER;
                hash = (53 * hash) + getCardsList().hashCode();
            }
            hash = (37 * hash) + CARDSSIZE_FIELD_NUMBER;
            hash = (53 * hash) + getCardsSize();
            if (getInvertedCardsCount() > 0) {
                hash = (37 * hash) + INVERTEDCARDS_FIELD_NUMBER;
                hash = (53 * hash) + getInvertedCardsList().hashCode();
            }
            if (getInvertedIndexCount() > 0) {
                hash = (37 * hash) + INVERTEDINDEX_FIELD_NUMBER;
                hash = (53 * hash) + getInvertedIndexList().hashCode();
            }
            if (getPlayedCardsCount() > 0) {
                hash = (37 * hash) + PLAYEDCARDS_FIELD_NUMBER;
                hash = (53 * hash) + getPlayedCardsList().hashCode();
            }
            hash = (37 * hash) + SCORE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    java.lang.Double.doubleToLongBits(getScore()));
            hash = (37 * hash) + ISROBOT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsRobot());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SeatGameInfo> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.SeatGameInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 玩家游戏信息
         * </pre>
         * <p>
         * Protobuf type {@code SeatGameInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:SeatGameInfo)
                mahjong.mode.Mahjong.SeatGameInfoOrBuilder {
            private int bitField0_;
            private java.lang.Object iD_ = "";
            private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
            private int cardsSize_;
            private java.util.List<java.lang.Integer> invertedCards_ = java.util.Collections.emptyList();
            private java.util.List<java.lang.Integer> invertedIndex_ = java.util.Collections.emptyList();
            private java.util.List<java.lang.Integer> playedCards_ = java.util.Collections.emptyList();
            private double score_;
            private boolean isRobot_;

            // Construct using mahjong.mode.Mahjong.SeatGameInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_SeatGameInfo_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_SeatGameInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.SeatGameInfo.class, mahjong.mode.Mahjong.SeatGameInfo.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                iD_ = "";

                cards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                cardsSize_ = 0;

                invertedCards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000008);
                invertedIndex_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000010);
                playedCards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                score_ = 0D;

                isRobot_ = false;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_SeatGameInfo_descriptor;
            }

            public mahjong.mode.Mahjong.SeatGameInfo getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.SeatGameInfo.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.SeatGameInfo build() {
                mahjong.mode.Mahjong.SeatGameInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.SeatGameInfo buildPartial() {
                mahjong.mode.Mahjong.SeatGameInfo result = new mahjong.mode.Mahjong.SeatGameInfo(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.iD_ = iD_;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    cards_ = java.util.Collections.unmodifiableList(cards_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.cards_ = cards_;
                result.cardsSize_ = cardsSize_;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    invertedCards_ = java.util.Collections.unmodifiableList(invertedCards_);
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.invertedCards_ = invertedCards_;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    invertedIndex_ = java.util.Collections.unmodifiableList(invertedIndex_);
                    bitField0_ = (bitField0_ & ~0x00000010);
                }
                result.invertedIndex_ = invertedIndex_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    playedCards_ = java.util.Collections.unmodifiableList(playedCards_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.playedCards_ = playedCards_;
                result.score_ = score_;
                result.isRobot_ = isRobot_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.SeatGameInfo) {
                    return mergeFrom((mahjong.mode.Mahjong.SeatGameInfo) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.SeatGameInfo other) {
                if (other == mahjong.mode.Mahjong.SeatGameInfo.getDefaultInstance()) return this;
                if (!other.getID().isEmpty()) {
                    iD_ = other.iD_;
                    onChanged();
                }
                if (!other.cards_.isEmpty()) {
                    if (cards_.isEmpty()) {
                        cards_ = other.cards_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureCardsIsMutable();
                        cards_.addAll(other.cards_);
                    }
                    onChanged();
                }
                if (other.getCardsSize() != 0) {
                    setCardsSize(other.getCardsSize());
                }
                if (!other.invertedCards_.isEmpty()) {
                    if (invertedCards_.isEmpty()) {
                        invertedCards_ = other.invertedCards_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureInvertedCardsIsMutable();
                        invertedCards_.addAll(other.invertedCards_);
                    }
                    onChanged();
                }
                if (!other.invertedIndex_.isEmpty()) {
                    if (invertedIndex_.isEmpty()) {
                        invertedIndex_ = other.invertedIndex_;
                        bitField0_ = (bitField0_ & ~0x00000010);
                    } else {
                        ensureInvertedIndexIsMutable();
                        invertedIndex_.addAll(other.invertedIndex_);
                    }
                    onChanged();
                }
                if (!other.playedCards_.isEmpty()) {
                    if (playedCards_.isEmpty()) {
                        playedCards_ = other.playedCards_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensurePlayedCardsIsMutable();
                        playedCards_.addAll(other.playedCards_);
                    }
                    onChanged();
                }
                if (other.getScore() != 0D) {
                    setScore(other.getScore());
                }
                if (other.getIsRobot() != false) {
                    setIsRobot(other.getIsRobot());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.SeatGameInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.SeatGameInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             *用户名
             * </pre>
             *
             * <code>string ID = 1;</code>
             */
            public java.lang.String getID() {
                java.lang.Object ref = iD_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    iD_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *用户名
             * </pre>
             *
             * <code>string ID = 1;</code>
             */
            public Builder setID(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *用户名
             * </pre>
             *
             * <code>string ID = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIDBytes() {
                java.lang.Object ref = iD_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    iD_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *用户名
             * </pre>
             *
             * <code>string ID = 1;</code>
             */
            public Builder setIDBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *用户名
             * </pre>
             *
             * <code>string ID = 1;</code>
             */
            public Builder clearID() {

                iD_ = getDefaultInstance().getID();
                onChanged();
                return this;
            }

            private void ensureCardsIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <pre>
             *牌
             * </pre>
             *
             * <code>repeated uint32 cards = 2;</code>
             */
            public java.util.List<java.lang.Integer>
            getCardsList() {
                return java.util.Collections.unmodifiableList(cards_);
            }

            /**
             * <pre>
             *牌
             * </pre>
             *
             * <code>repeated uint32 cards = 2;</code>
             */
            public int getCardsCount() {
                return cards_.size();
            }

            /**
             * <pre>
             *牌
             * </pre>
             *
             * <code>repeated uint32 cards = 2;</code>
             */
            public int getCards(int index) {
                return cards_.get(index);
            }

            /**
             * <pre>
             *牌
             * </pre>
             *
             * <code>repeated uint32 cards = 2;</code>
             */
            public Builder setCards(
                    int index, int value) {
                ensureCardsIsMutable();
                cards_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *牌
             * </pre>
             *
             * <code>repeated uint32 cards = 2;</code>
             */
            public Builder addCards(int value) {
                ensureCardsIsMutable();
                cards_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *牌
             * </pre>
             *
             * <code>repeated uint32 cards = 2;</code>
             */
            public Builder addAllCards(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                ensureCardsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, cards_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *牌
             * </pre>
             *
             * <code>repeated uint32 cards = 2;</code>
             */
            public Builder clearCards() {
                cards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *牌数量
             * </pre>
             *
             * <code>uint32 cardsSize = 3;</code>
             */
            public int getCardsSize() {
                return cardsSize_;
            }

            /**
             * <pre>
             *牌数量
             * </pre>
             *
             * <code>uint32 cardsSize = 3;</code>
             */
            public Builder setCardsSize(int value) {

                cardsSize_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *牌数量
             * </pre>
             *
             * <code>uint32 cardsSize = 3;</code>
             */
            public Builder clearCardsSize() {

                cardsSize_ = 0;
                onChanged();
                return this;
            }

            private void ensureInvertedCardsIsMutable() {
                if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                    invertedCards_ = new java.util.ArrayList<java.lang.Integer>(invertedCards_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <pre>
             *碰或杠的牌
             * </pre>
             *
             * <code>repeated uint32 invertedCards = 4;</code>
             */
            public java.util.List<java.lang.Integer>
            getInvertedCardsList() {
                return java.util.Collections.unmodifiableList(invertedCards_);
            }

            /**
             * <pre>
             *碰或杠的牌
             * </pre>
             *
             * <code>repeated uint32 invertedCards = 4;</code>
             */
            public int getInvertedCardsCount() {
                return invertedCards_.size();
            }

            /**
             * <pre>
             *碰或杠的牌
             * </pre>
             *
             * <code>repeated uint32 invertedCards = 4;</code>
             */
            public int getInvertedCards(int index) {
                return invertedCards_.get(index);
            }

            /**
             * <pre>
             *碰或杠的牌
             * </pre>
             *
             * <code>repeated uint32 invertedCards = 4;</code>
             */
            public Builder setInvertedCards(
                    int index, int value) {
                ensureInvertedCardsIsMutable();
                invertedCards_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *碰或杠的牌
             * </pre>
             *
             * <code>repeated uint32 invertedCards = 4;</code>
             */
            public Builder addInvertedCards(int value) {
                ensureInvertedCardsIsMutable();
                invertedCards_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *碰或杠的牌
             * </pre>
             *
             * <code>repeated uint32 invertedCards = 4;</code>
             */
            public Builder addAllInvertedCards(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                ensureInvertedCardsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, invertedCards_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *碰或杠的牌
             * </pre>
             *
             * <code>repeated uint32 invertedCards = 4;</code>
             */
            public Builder clearInvertedCards() {
                invertedCards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            private void ensureInvertedIndexIsMutable() {
                if (!((bitField0_ & 0x00000010) == 0x00000010)) {
                    invertedIndex_ = new java.util.ArrayList<java.lang.Integer>(invertedIndex_);
                    bitField0_ |= 0x00000010;
                }
            }

            /**
             * <pre>
             *碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
             * </pre>
             *
             * <code>repeated uint32 invertedIndex = 5;</code>
             */
            public java.util.List<java.lang.Integer>
            getInvertedIndexList() {
                return java.util.Collections.unmodifiableList(invertedIndex_);
            }

            /**
             * <pre>
             *碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
             * </pre>
             *
             * <code>repeated uint32 invertedIndex = 5;</code>
             */
            public int getInvertedIndexCount() {
                return invertedIndex_.size();
            }

            /**
             * <pre>
             *碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
             * </pre>
             *
             * <code>repeated uint32 invertedIndex = 5;</code>
             */
            public int getInvertedIndex(int index) {
                return invertedIndex_.get(index);
            }

            /**
             * <pre>
             *碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
             * </pre>
             *
             * <code>repeated uint32 invertedIndex = 5;</code>
             */
            public Builder setInvertedIndex(
                    int index, int value) {
                ensureInvertedIndexIsMutable();
                invertedIndex_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
             * </pre>
             *
             * <code>repeated uint32 invertedIndex = 5;</code>
             */
            public Builder addInvertedIndex(int value) {
                ensureInvertedIndexIsMutable();
                invertedIndex_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
             * </pre>
             *
             * <code>repeated uint32 invertedIndex = 5;</code>
             */
            public Builder addAllInvertedIndex(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                ensureInvertedIndexIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, invertedIndex_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *碰或杠的牌是谁打的0为暗杠，自己座位为扒杠
             * </pre>
             *
             * <code>repeated uint32 invertedIndex = 5;</code>
             */
            public Builder clearInvertedIndex() {
                invertedIndex_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000010);
                onChanged();
                return this;
            }

            private void ensurePlayedCardsIsMutable() {
                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    playedCards_ = new java.util.ArrayList<java.lang.Integer>(playedCards_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             *出过的牌
             * </pre>
             *
             * <code>repeated uint32 playedCards = 6;</code>
             */
            public java.util.List<java.lang.Integer>
            getPlayedCardsList() {
                return java.util.Collections.unmodifiableList(playedCards_);
            }

            /**
             * <pre>
             *出过的牌
             * </pre>
             *
             * <code>repeated uint32 playedCards = 6;</code>
             */
            public int getPlayedCardsCount() {
                return playedCards_.size();
            }

            /**
             * <pre>
             *出过的牌
             * </pre>
             *
             * <code>repeated uint32 playedCards = 6;</code>
             */
            public int getPlayedCards(int index) {
                return playedCards_.get(index);
            }

            /**
             * <pre>
             *出过的牌
             * </pre>
             *
             * <code>repeated uint32 playedCards = 6;</code>
             */
            public Builder setPlayedCards(
                    int index, int value) {
                ensurePlayedCardsIsMutable();
                playedCards_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *出过的牌
             * </pre>
             *
             * <code>repeated uint32 playedCards = 6;</code>
             */
            public Builder addPlayedCards(int value) {
                ensurePlayedCardsIsMutable();
                playedCards_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *出过的牌
             * </pre>
             *
             * <code>repeated uint32 playedCards = 6;</code>
             */
            public Builder addAllPlayedCards(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                ensurePlayedCardsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, playedCards_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *出过的牌
             * </pre>
             *
             * <code>repeated uint32 playedCards = 6;</code>
             */
            public Builder clearPlayedCards() {
                playedCards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            /**
             * <pre>
             *输赢分数
             * </pre>
             *
             * <code>double score = 7;</code>
             */
            public double getScore() {
                return score_;
            }

            /**
             * <pre>
             *输赢分数
             * </pre>
             *
             * <code>double score = 7;</code>
             */
            public Builder setScore(double value) {

                score_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 输赢分数
             * </pre>
             * <p>
             * <code>double score = 7;</code>
             */
            public Builder clearScore() {

                score_ = 0D;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 是否托管
             * </pre>
             * <p>
             * <code>bool isRobot = 8;</code>
             */
            public boolean getIsRobot() {
                return isRobot_;
            }

            /**
             * <pre>
             * 是否托管
             * </pre>
             * <p>
             * <code>bool isRobot = 8;</code>
             */
            public Builder setIsRobot(boolean value) {

                isRobot_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 是否托管
             * </pre>
             * <p>
             * <code>bool isRobot = 8;</code>
             */
            public Builder clearIsRobot() {

                isRobot_ = false;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:SeatGameInfo)
        }

    }

    /**
     * <pre>
     * 游戏开始 发牌
     * </pre>
     * <p>
     * Protobuf type {@code DealCardResponse}
     */
    public static final class DealCardResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:DealCardResponse)
            DealCardResponseOrBuilder {
        public static final int BANKER_FIELD_NUMBER = 1;
        public static final int DICE_FIELD_NUMBER = 2;
        public static final int CARDS_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:DealCardResponse)
        private static final mahjong.mode.Mahjong.DealCardResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<DealCardResponse>
                PARSER = new com.google.protobuf.AbstractParser<DealCardResponse>() {
            public DealCardResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new DealCardResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.DealCardResponse();
        }

        private int bitField0_;
        private volatile java.lang.Object banker_;
        private java.util.List<java.lang.Integer> dice_;
        private int diceMemoizedSerializedSize = -1;
        private java.util.List<java.lang.Integer> cards_;
        private int cardsMemoizedSerializedSize = -1;
        private byte memoizedIsInitialized = -1;

        // Use DealCardResponse.newBuilder() to construct.
        private DealCardResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private DealCardResponse() {
            banker_ = "";
            dice_ = java.util.Collections.emptyList();
            cards_ = java.util.Collections.emptyList();
        }

        private DealCardResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            banker_ = s;
                            break;
                        }
                        case 16: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                dice_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            dice_.add(input.readUInt32());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                                dice_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                dice_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 24: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                cards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            cards_.add(input.readUInt32());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                                cards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                cards_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    dice_ = java.util.Collections.unmodifiableList(dice_);
                }
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    cards_ = java.util.Collections.unmodifiableList(cards_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_DealCardResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.DealCardResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.DealCardResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<DealCardResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_DealCardResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.DealCardResponse.class, mahjong.mode.Mahjong.DealCardResponse.Builder.class);
        }

        /**
         * <pre>
         * 庄家
         * </pre>
         * <p>
         * <code>string banker = 1;</code>
         */
        public java.lang.String getBanker() {
            java.lang.Object ref = banker_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                banker_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 庄家
         * </pre>
         * <p>
         * <code>string banker = 1;</code>
         */
        public com.google.protobuf.ByteString
        getBankerBytes() {
            java.lang.Object ref = banker_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                banker_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * 骰子
         * </pre>
         * <p>
         * <code>repeated uint32 dice = 2;</code>
         */
        public java.util.List<java.lang.Integer>
        getDiceList() {
            return dice_;
        }

        /**
         * <pre>
         * 骰子
         * </pre>
         * <p>
         * <code>repeated uint32 dice = 2;</code>
         */
        public int getDiceCount() {
            return dice_.size();
        }

        /**
         * <pre>
         * 骰子
         * </pre>
         * <p>
         * <code>repeated uint32 dice = 2;</code>
         */
        public int getDice(int index) {
            return dice_.get(index);
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 3;</code>
         */
        public java.util.List<java.lang.Integer>
        getCardsList() {
            return cards_;
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 3;</code>
         */
        public int getCardsCount() {
            return cards_.size();
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 3;</code>
         */
        public int getCards(int index) {
            return cards_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (!getBankerBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, banker_);
            }
            if (getDiceList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(diceMemoizedSerializedSize);
            }
            for (int i = 0; i < dice_.size(); i++) {
                output.writeUInt32NoTag(dice_.get(i));
            }
            if (getCardsList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(cardsMemoizedSerializedSize);
            }
            for (int i = 0; i < cards_.size(); i++) {
                output.writeUInt32NoTag(cards_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getBankerBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, banker_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < dice_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(dice_.get(i));
                }
                size += dataSize;
                if (!getDiceList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                diceMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < cards_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(cards_.get(i));
                }
                size += dataSize;
                if (!getCardsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                cardsMemoizedSerializedSize = dataSize;
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.DealCardResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.DealCardResponse other = (mahjong.mode.Mahjong.DealCardResponse) obj;

            boolean result = true;
            result = result && getBanker()
                    .equals(other.getBanker());
            result = result && getDiceList()
                    .equals(other.getDiceList());
            result = result && getCardsList()
                    .equals(other.getCardsList());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + BANKER_FIELD_NUMBER;
            hash = (53 * hash) + getBanker().hashCode();
            if (getDiceCount() > 0) {
                hash = (37 * hash) + DICE_FIELD_NUMBER;
                hash = (53 * hash) + getDiceList().hashCode();
            }
            if (getCardsCount() > 0) {
                hash = (37 * hash) + CARDS_FIELD_NUMBER;
                hash = (53 * hash) + getCardsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<DealCardResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.DealCardResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 游戏开始 发牌
         * </pre>
         * <p>
         * Protobuf type {@code DealCardResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:DealCardResponse)
                mahjong.mode.Mahjong.DealCardResponseOrBuilder {
            private int bitField0_;
            private java.lang.Object banker_ = "";
            private java.util.List<java.lang.Integer> dice_ = java.util.Collections.emptyList();
            private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();

            // Construct using mahjong.mode.Mahjong.DealCardResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_DealCardResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_DealCardResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.DealCardResponse.class, mahjong.mode.Mahjong.DealCardResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                banker_ = "";

                dice_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                cards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_DealCardResponse_descriptor;
            }

            public mahjong.mode.Mahjong.DealCardResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.DealCardResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.DealCardResponse build() {
                mahjong.mode.Mahjong.DealCardResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.DealCardResponse buildPartial() {
                mahjong.mode.Mahjong.DealCardResponse result = new mahjong.mode.Mahjong.DealCardResponse(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.banker_ = banker_;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    dice_ = java.util.Collections.unmodifiableList(dice_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.dice_ = dice_;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    cards_ = java.util.Collections.unmodifiableList(cards_);
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.cards_ = cards_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.DealCardResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.DealCardResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.DealCardResponse other) {
                if (other == mahjong.mode.Mahjong.DealCardResponse.getDefaultInstance()) return this;
                if (!other.getBanker().isEmpty()) {
                    banker_ = other.banker_;
                    onChanged();
                }
                if (!other.dice_.isEmpty()) {
                    if (dice_.isEmpty()) {
                        dice_ = other.dice_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureDiceIsMutable();
                        dice_.addAll(other.dice_);
                    }
                    onChanged();
                }
                if (!other.cards_.isEmpty()) {
                    if (cards_.isEmpty()) {
                        cards_ = other.cards_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureCardsIsMutable();
                        cards_.addAll(other.cards_);
                    }
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.DealCardResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.DealCardResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             *庄家
             * </pre>
             *
             * <code>string banker = 1;</code>
             */
            public java.lang.String getBanker() {
                java.lang.Object ref = banker_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    banker_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *庄家
             * </pre>
             *
             * <code>string banker = 1;</code>
             */
            public Builder setBanker(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                banker_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *庄家
             * </pre>
             *
             * <code>string banker = 1;</code>
             */
            public com.google.protobuf.ByteString
            getBankerBytes() {
                java.lang.Object ref = banker_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    banker_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *庄家
             * </pre>
             *
             * <code>string banker = 1;</code>
             */
            public Builder setBankerBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                banker_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *庄家
             * </pre>
             *
             * <code>string banker = 1;</code>
             */
            public Builder clearBanker() {

                banker_ = getDefaultInstance().getBanker();
                onChanged();
                return this;
            }

            private void ensureDiceIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    dice_ = new java.util.ArrayList<java.lang.Integer>(dice_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <pre>
             * 骰子
             * </pre>
             * <p>
             * <code>repeated uint32 dice = 2;</code>
             */
            public java.util.List<java.lang.Integer>
            getDiceList() {
                return java.util.Collections.unmodifiableList(dice_);
            }

            /**
             * <pre>
             * 骰子
             * </pre>
             * <p>
             * <code>repeated uint32 dice = 2;</code>
             */
            public int getDiceCount() {
                return dice_.size();
            }

            /**
             * <pre>
             * 骰子
             * </pre>
             * <p>
             * <code>repeated uint32 dice = 2;</code>
             */
            public int getDice(int index) {
                return dice_.get(index);
            }

            /**
             * <pre>
             * 骰子
             * </pre>
             * <p>
             * <code>repeated uint32 dice = 2;</code>
             */
            public Builder setDice(
                    int index, int value) {
                ensureDiceIsMutable();
                dice_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 骰子
             * </pre>
             * <p>
             * <code>repeated uint32 dice = 2;</code>
             */
            public Builder addDice(int value) {
                ensureDiceIsMutable();
                dice_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 骰子
             * </pre>
             * <p>
             * <code>repeated uint32 dice = 2;</code>
             */
            public Builder addAllDice(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                ensureDiceIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, dice_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 骰子
             * </pre>
             * <p>
             * <code>repeated uint32 dice = 2;</code>
             */
            public Builder clearDice() {
                dice_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private void ensureCardsIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 3;</code>
             */
            public java.util.List<java.lang.Integer>
            getCardsList() {
                return java.util.Collections.unmodifiableList(cards_);
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 3;</code>
             */
            public int getCardsCount() {
                return cards_.size();
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 3;</code>
             */
            public int getCards(int index) {
                return cards_.get(index);
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 3;</code>
             */
            public Builder setCards(
                    int index, int value) {
                ensureCardsIsMutable();
                cards_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 3;</code>
             */
            public Builder addCards(int value) {
                ensureCardsIsMutable();
                cards_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 3;</code>
             */
            public Builder addAllCards(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                ensureCardsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, cards_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 3;</code>
             */
            public Builder clearCards() {
                cards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:DealCardResponse)
        }

    }

    /**
     * <pre>
     * 出牌
     * </pre>
     * <p>
     * Protobuf type {@code PlayCardRequest}
     */
    public static final class PlayCardRequest extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:PlayCardRequest)
            PlayCardRequestOrBuilder {
        public static final int CARD_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:PlayCardRequest)
        private static final mahjong.mode.Mahjong.PlayCardRequest DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<PlayCardRequest>
                PARSER = new com.google.protobuf.AbstractParser<PlayCardRequest>() {
            public PlayCardRequest parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new PlayCardRequest(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.PlayCardRequest();
        }

        private int card_;
        private byte memoizedIsInitialized = -1;

        // Use PlayCardRequest.newBuilder() to construct.
        private PlayCardRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PlayCardRequest() {
            card_ = 0;
        }

        private PlayCardRequest(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            card_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_PlayCardRequest_descriptor;
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.PlayCardRequest prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.PlayCardRequest getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<PlayCardRequest> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_PlayCardRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.PlayCardRequest.class, mahjong.mode.Mahjong.PlayCardRequest.Builder.class);
        }

        /**
         * <pre>
         *牌
         * </pre>
         *
         * <code>uint32 card = 1;</code>
         */
        public int getCard() {
            return card_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (card_ != 0) {
                output.writeUInt32(1, card_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (card_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, card_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.PlayCardRequest)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.PlayCardRequest other = (mahjong.mode.Mahjong.PlayCardRequest) obj;

            boolean result = true;
            result = result && (getCard()
                    == other.getCard());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + CARD_FIELD_NUMBER;
            hash = (53 * hash) + getCard();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PlayCardRequest> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.PlayCardRequest getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         *出牌
         * </pre>
         *
         * Protobuf type {@code PlayCardRequest}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:PlayCardRequest)
                mahjong.mode.Mahjong.PlayCardRequestOrBuilder {
            private int card_;

            // Construct using mahjong.mode.Mahjong.PlayCardRequest.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_PlayCardRequest_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_PlayCardRequest_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.PlayCardRequest.class, mahjong.mode.Mahjong.PlayCardRequest.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                card_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_PlayCardRequest_descriptor;
            }

            public mahjong.mode.Mahjong.PlayCardRequest getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.PlayCardRequest.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.PlayCardRequest build() {
                mahjong.mode.Mahjong.PlayCardRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.PlayCardRequest buildPartial() {
                mahjong.mode.Mahjong.PlayCardRequest result = new mahjong.mode.Mahjong.PlayCardRequest(this);
                result.card_ = card_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.PlayCardRequest) {
                    return mergeFrom((mahjong.mode.Mahjong.PlayCardRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.PlayCardRequest other) {
                if (other == mahjong.mode.Mahjong.PlayCardRequest.getDefaultInstance()) return this;
                if (other.getCard() != 0) {
                    setCard(other.getCard());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.PlayCardRequest parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.PlayCardRequest) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 1;</code>
             */
            public int getCard() {
                return card_;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 1;</code>
             */
            public Builder setCard(int value) {

                card_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 1;</code>
             */
            public Builder clearCard() {

                card_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:PlayCardRequest)
        }

    }

    /**
     * <pre>
     * 出牌
     * </pre>
     * <p>
     * Protobuf type {@code PlayCardResponse}
     */
    public static final class PlayCardResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:PlayCardResponse)
            PlayCardResponseOrBuilder {
        public static final int ID_FIELD_NUMBER = 1;
        public static final int CARD_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:PlayCardResponse)
        private static final mahjong.mode.Mahjong.PlayCardResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<PlayCardResponse>
                PARSER = new com.google.protobuf.AbstractParser<PlayCardResponse>() {
            public PlayCardResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new PlayCardResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.PlayCardResponse();
        }

        private volatile java.lang.Object iD_;
        private int card_;
        private byte memoizedIsInitialized = -1;

        // Use PlayCardResponse.newBuilder() to construct.
        private PlayCardResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PlayCardResponse() {
            iD_ = "";
            card_ = 0;
        }

        private PlayCardResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            iD_ = s;
                            break;
                        }
                        case 16: {

                            card_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_PlayCardResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.PlayCardResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.PlayCardResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<PlayCardResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_PlayCardResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.PlayCardResponse.class, mahjong.mode.Mahjong.PlayCardResponse.Builder.class);
        }

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        public java.lang.String getID() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                iD_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 用户名
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIDBytes() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                iD_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>uint32 card = 2;</code>
         */
        public int getCard() {
            return card_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, iD_);
            }
            if (card_ != 0) {
                output.writeUInt32(2, card_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, iD_);
            }
            if (card_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, card_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.PlayCardResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.PlayCardResponse other = (mahjong.mode.Mahjong.PlayCardResponse) obj;

            boolean result = true;
            result = result && getID()
                    .equals(other.getID());
            result = result && (getCard()
                    == other.getCard());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getID().hashCode();
            hash = (37 * hash) + CARD_FIELD_NUMBER;
            hash = (53 * hash) + getCard();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PlayCardResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.PlayCardResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 出牌
         * </pre>
         * <p>
         * Protobuf type {@code PlayCardResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:PlayCardResponse)
                mahjong.mode.Mahjong.PlayCardResponseOrBuilder {
            private java.lang.Object iD_ = "";
            private int card_;

            // Construct using mahjong.mode.Mahjong.PlayCardResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_PlayCardResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_PlayCardResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.PlayCardResponse.class, mahjong.mode.Mahjong.PlayCardResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                iD_ = "";

                card_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_PlayCardResponse_descriptor;
            }

            public mahjong.mode.Mahjong.PlayCardResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.PlayCardResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.PlayCardResponse build() {
                mahjong.mode.Mahjong.PlayCardResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.PlayCardResponse buildPartial() {
                mahjong.mode.Mahjong.PlayCardResponse result = new mahjong.mode.Mahjong.PlayCardResponse(this);
                result.iD_ = iD_;
                result.card_ = card_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.PlayCardResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.PlayCardResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.PlayCardResponse other) {
                if (other == mahjong.mode.Mahjong.PlayCardResponse.getDefaultInstance()) return this;
                if (!other.getID().isEmpty()) {
                    iD_ = other.iD_;
                    onChanged();
                }
                if (other.getCard() != 0) {
                    setCard(other.getCard());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.PlayCardResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.PlayCardResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public java.lang.String getID() {
                java.lang.Object ref = iD_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    iD_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setID(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIDBytes() {
                java.lang.Object ref = iD_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    iD_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setIDBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder clearID() {

                iD_ = getDefaultInstance().getID();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 2;</code>
             */
            public int getCard() {
                return card_;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 2;</code>
             */
            public Builder setCard(int value) {

                card_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 2;</code>
             */
            public Builder clearCard() {

                card_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:PlayCardResponse)
        }

    }

    /**
     * <pre>
     * 喇叭
     * </pre>
     * <p>
     * Protobuf type {@code MessageRequest}
     */
    public static final class MessageRequest extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:MessageRequest)
            MessageRequestOrBuilder {
        public static final int MESSAGE_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:MessageRequest)
        private static final mahjong.mode.Mahjong.MessageRequest DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<MessageRequest>
                PARSER = new com.google.protobuf.AbstractParser<MessageRequest>() {
            public MessageRequest parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new MessageRequest(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.MessageRequest();
        }

        private volatile java.lang.Object message_;
        private byte memoizedIsInitialized = -1;

        // Use MessageRequest.newBuilder() to construct.
        private MessageRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private MessageRequest() {
            message_ = "";
        }

        private MessageRequest(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            message_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_MessageRequest_descriptor;
        }

        public static mahjong.mode.Mahjong.MessageRequest parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.MessageRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.MessageRequest prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.MessageRequest getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<MessageRequest> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_MessageRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.MessageRequest.class, mahjong.mode.Mahjong.MessageRequest.Builder.class);
        }

        /**
         * <pre>
         *内容
         * </pre>
         *
         * <code>string message = 1;</code>
         */
        public java.lang.String getMessage() {
            java.lang.Object ref = message_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                message_ = s;
                return s;
            }
        }

        /**
         * <pre>
         *内容
         * </pre>
         *
         * <code>string message = 1;</code>
         */
        public com.google.protobuf.ByteString
        getMessageBytes() {
            java.lang.Object ref = message_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                message_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getMessageBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getMessageBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.MessageRequest)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.MessageRequest other = (mahjong.mode.Mahjong.MessageRequest) obj;

            boolean result = true;
            result = result && getMessage()
                    .equals(other.getMessage());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
            hash = (53 * hash) + getMessage().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MessageRequest> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.MessageRequest getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         *喇叭
         * </pre>
         *
         * Protobuf type {@code MessageRequest}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:MessageRequest)
                mahjong.mode.Mahjong.MessageRequestOrBuilder {
            private java.lang.Object message_ = "";

            // Construct using mahjong.mode.Mahjong.MessageRequest.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_MessageRequest_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_MessageRequest_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.MessageRequest.class, mahjong.mode.Mahjong.MessageRequest.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                message_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_MessageRequest_descriptor;
            }

            public mahjong.mode.Mahjong.MessageRequest getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.MessageRequest.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.MessageRequest build() {
                mahjong.mode.Mahjong.MessageRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.MessageRequest buildPartial() {
                mahjong.mode.Mahjong.MessageRequest result = new mahjong.mode.Mahjong.MessageRequest(this);
                result.message_ = message_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.MessageRequest) {
                    return mergeFrom((mahjong.mode.Mahjong.MessageRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.MessageRequest other) {
                if (other == mahjong.mode.Mahjong.MessageRequest.getDefaultInstance()) return this;
                if (!other.getMessage().isEmpty()) {
                    message_ = other.message_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.MessageRequest parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.MessageRequest) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * 内容
             * </pre>
             * <p>
             * <code>string message = 1;</code>
             */
            public java.lang.String getMessage() {
                java.lang.Object ref = message_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    message_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 内容
             * </pre>
             * <p>
             * <code>string message = 1;</code>
             */
            public Builder setMessage(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                message_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 内容
             * </pre>
             * <p>
             * <code>string message = 1;</code>
             */
            public com.google.protobuf.ByteString
            getMessageBytes() {
                java.lang.Object ref = message_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    message_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 内容
             * </pre>
             * <p>
             * <code>string message = 1;</code>
             */
            public Builder setMessageBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                message_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 内容
             * </pre>
             * <p>
             * <code>string message = 1;</code>
             */
            public Builder clearMessage() {

                message_ = getDefaultInstance().getMessage();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:MessageRequest)
        }

    }

    /**
     * <pre>
     * 碰
     * </pre>
     * <p>
     * Protobuf type {@code PengResponse}
     */
    public static final class PengResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:PengResponse)
            PengResponseOrBuilder {
        public static final int ID_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:PengResponse)
        private static final mahjong.mode.Mahjong.PengResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<PengResponse>
                PARSER = new com.google.protobuf.AbstractParser<PengResponse>() {
            public PengResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new PengResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.PengResponse();
        }

        private volatile java.lang.Object iD_;
        private byte memoizedIsInitialized = -1;

        // Use PengResponse.newBuilder() to construct.
        private PengResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PengResponse() {
            iD_ = "";
        }

        private PengResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            iD_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_PengResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.PengResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.PengResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PengResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.PengResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PengResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.PengResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PengResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.PengResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PengResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.PengResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.PengResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.PengResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.PengResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.PengResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<PengResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_PengResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.PengResponse.class, mahjong.mode.Mahjong.PengResponse.Builder.class);
        }

        /**
         * <pre>
         *碰牌的人
         * </pre>
         *
         * <code>string ID = 1;</code>
         */
        public java.lang.String getID() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                iD_ = s;
                return s;
            }
        }

        /**
         * <pre>
         *碰牌的人
         * </pre>
         *
         * <code>string ID = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIDBytes() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                iD_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, iD_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, iD_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.PengResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.PengResponse other = (mahjong.mode.Mahjong.PengResponse) obj;

            boolean result = true;
            result = result && getID()
                    .equals(other.getID());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getID().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PengResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.PengResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         *碰
         * </pre>
         *
         * Protobuf type {@code PengResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:PengResponse)
                mahjong.mode.Mahjong.PengResponseOrBuilder {
            private java.lang.Object iD_ = "";

            // Construct using mahjong.mode.Mahjong.PengResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_PengResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_PengResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.PengResponse.class, mahjong.mode.Mahjong.PengResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                iD_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_PengResponse_descriptor;
            }

            public mahjong.mode.Mahjong.PengResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.PengResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.PengResponse build() {
                mahjong.mode.Mahjong.PengResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.PengResponse buildPartial() {
                mahjong.mode.Mahjong.PengResponse result = new mahjong.mode.Mahjong.PengResponse(this);
                result.iD_ = iD_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.PengResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.PengResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.PengResponse other) {
                if (other == mahjong.mode.Mahjong.PengResponse.getDefaultInstance()) return this;
                if (!other.getID().isEmpty()) {
                    iD_ = other.iD_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.PengResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.PengResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * 碰牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public java.lang.String getID() {
                java.lang.Object ref = iD_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    iD_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 碰牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setID(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 碰牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIDBytes() {
                java.lang.Object ref = iD_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    iD_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 碰牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setIDBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 碰牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder clearID() {

                iD_ = getDefaultInstance().getID();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:PengResponse)
        }

    }

    /**
     * <pre>
     * 暗杠或扒杠
     * </pre>
     * <p>
     * Protobuf type {@code GangRequest}
     */
    public static final class GangRequest extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:GangRequest)
            GangRequestOrBuilder {
        public static final int CARD_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:GangRequest)
        private static final mahjong.mode.Mahjong.GangRequest DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<GangRequest>
                PARSER = new com.google.protobuf.AbstractParser<GangRequest>() {
            public GangRequest parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new GangRequest(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.GangRequest();
        }

        private int card_;
        private byte memoizedIsInitialized = -1;

        // Use GangRequest.newBuilder() to construct.
        private GangRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private GangRequest() {
            card_ = 0;
        }

        private GangRequest(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            card_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_GangRequest_descriptor;
        }

        public static mahjong.mode.Mahjong.GangRequest parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GangRequest parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GangRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GangRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GangRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GangRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GangRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GangRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GangRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GangRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GangRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GangRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.GangRequest prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.GangRequest getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<GangRequest> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_GangRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.GangRequest.class, mahjong.mode.Mahjong.GangRequest.Builder.class);
        }

        /**
         * <pre>
         *牌
         * </pre>
         *
         * <code>uint32 card = 1;</code>
         */
        public int getCard() {
            return card_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (card_ != 0) {
                output.writeUInt32(1, card_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (card_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, card_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.GangRequest)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.GangRequest other = (mahjong.mode.Mahjong.GangRequest) obj;

            boolean result = true;
            result = result && (getCard()
                    == other.getCard());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + CARD_FIELD_NUMBER;
            hash = (53 * hash) + getCard();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<GangRequest> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.GangRequest getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 暗杠或扒杠
         * </pre>
         * <p>
         * Protobuf type {@code GangRequest}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:GangRequest)
                mahjong.mode.Mahjong.GangRequestOrBuilder {
            private int card_;

            // Construct using mahjong.mode.Mahjong.GangRequest.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_GangRequest_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_GangRequest_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.GangRequest.class, mahjong.mode.Mahjong.GangRequest.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                card_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_GangRequest_descriptor;
            }

            public mahjong.mode.Mahjong.GangRequest getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.GangRequest.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.GangRequest build() {
                mahjong.mode.Mahjong.GangRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.GangRequest buildPartial() {
                mahjong.mode.Mahjong.GangRequest result = new mahjong.mode.Mahjong.GangRequest(this);
                result.card_ = card_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.GangRequest) {
                    return mergeFrom((mahjong.mode.Mahjong.GangRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.GangRequest other) {
                if (other == mahjong.mode.Mahjong.GangRequest.getDefaultInstance()) return this;
                if (other.getCard() != 0) {
                    setCard(other.getCard());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.GangRequest parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.GangRequest) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             *牌
             * </pre>
             *
             * <code>uint32 card = 1;</code>
             */
            public int getCard() {
                return card_;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 1;</code>
             */
            public Builder setCard(int value) {

                card_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 1;</code>
             */
            public Builder clearCard() {

                card_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:GangRequest)
        }

    }

    /**
     * <pre>
     * 杠
     * </pre>
     * <p>
     * Protobuf type {@code GangResponse}
     */
    public static final class GangResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:GangResponse)
            GangResponseOrBuilder {
        public static final int ID_FIELD_NUMBER = 1;
        public static final int CARD_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:GangResponse)
        private static final mahjong.mode.Mahjong.GangResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<GangResponse>
                PARSER = new com.google.protobuf.AbstractParser<GangResponse>() {
            public GangResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new GangResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.GangResponse();
        }

        private volatile java.lang.Object iD_;
        private int card_;
        private byte memoizedIsInitialized = -1;

        // Use GangResponse.newBuilder() to construct.
        private GangResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private GangResponse() {
            iD_ = "";
            card_ = 0;
        }

        private GangResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            iD_ = s;
                            break;
                        }
                        case 16: {

                            card_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_GangResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.GangResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GangResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GangResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GangResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GangResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GangResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GangResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GangResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GangResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GangResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GangResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GangResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.GangResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.GangResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<GangResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_GangResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.GangResponse.class, mahjong.mode.Mahjong.GangResponse.Builder.class);
        }

        /**
         * <pre>
         * 杠牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        public java.lang.String getID() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                iD_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 杠牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIDBytes() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                iD_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>uint32 card = 2;</code>
         */
        public int getCard() {
            return card_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, iD_);
            }
            if (card_ != 0) {
                output.writeUInt32(2, card_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, iD_);
            }
            if (card_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, card_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.GangResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.GangResponse other = (mahjong.mode.Mahjong.GangResponse) obj;

            boolean result = true;
            result = result && getID()
                    .equals(other.getID());
            result = result && (getCard()
                    == other.getCard());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getID().hashCode();
            hash = (37 * hash) + CARD_FIELD_NUMBER;
            hash = (53 * hash) + getCard();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<GangResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.GangResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 杠
         * </pre>
         * <p>
         * Protobuf type {@code GangResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:GangResponse)
                mahjong.mode.Mahjong.GangResponseOrBuilder {
            private java.lang.Object iD_ = "";
            private int card_;

            // Construct using mahjong.mode.Mahjong.GangResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_GangResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_GangResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.GangResponse.class, mahjong.mode.Mahjong.GangResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                iD_ = "";

                card_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_GangResponse_descriptor;
            }

            public mahjong.mode.Mahjong.GangResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.GangResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.GangResponse build() {
                mahjong.mode.Mahjong.GangResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.GangResponse buildPartial() {
                mahjong.mode.Mahjong.GangResponse result = new mahjong.mode.Mahjong.GangResponse(this);
                result.iD_ = iD_;
                result.card_ = card_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.GangResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.GangResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.GangResponse other) {
                if (other == mahjong.mode.Mahjong.GangResponse.getDefaultInstance()) return this;
                if (!other.getID().isEmpty()) {
                    iD_ = other.iD_;
                    onChanged();
                }
                if (other.getCard() != 0) {
                    setCard(other.getCard());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.GangResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.GangResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * 杠牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public java.lang.String getID() {
                java.lang.Object ref = iD_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    iD_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 杠牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setID(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 杠牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIDBytes() {
                java.lang.Object ref = iD_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    iD_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 杠牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setIDBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 杠牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder clearID() {

                iD_ = getDefaultInstance().getID();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 2;</code>
             */
            public int getCard() {
                return card_;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 2;</code>
             */
            public Builder setCard(int value) {

                card_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 2;</code>
             */
            public Builder clearCard() {

                card_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:GangResponse)
        }

    }

    /**
     * <pre>
     * 吃
     * </pre>
     * <p>
     * Protobuf type {@code ChiRequest}
     */
    public static final class ChiRequest extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:ChiRequest)
            ChiRequestOrBuilder {
        public static final int CARDS_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:ChiRequest)
        private static final mahjong.mode.Mahjong.ChiRequest DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<ChiRequest>
                PARSER = new com.google.protobuf.AbstractParser<ChiRequest>() {
            public ChiRequest parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ChiRequest(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.ChiRequest();
        }

        private java.util.List<java.lang.Integer> cards_;
        private int cardsMemoizedSerializedSize = -1;
        private byte memoizedIsInitialized = -1;

        // Use ChiRequest.newBuilder() to construct.
        private ChiRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private ChiRequest() {
            cards_ = java.util.Collections.emptyList();
        }

        private ChiRequest(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                cards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            cards_.add(input.readUInt32());
                            break;
                        }
                        case 10: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                                cards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                cards_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    cards_ = java.util.Collections.unmodifiableList(cards_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_ChiRequest_descriptor;
        }

        public static mahjong.mode.Mahjong.ChiRequest parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.ChiRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.ChiRequest prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.ChiRequest getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<ChiRequest> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_ChiRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.ChiRequest.class, mahjong.mode.Mahjong.ChiRequest.Builder.class);
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 1;</code>
         */
        public java.util.List<java.lang.Integer>
        getCardsList() {
            return cards_;
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 1;</code>
         */
        public int getCardsCount() {
            return cards_.size();
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 cards = 1;</code>
         */
        public int getCards(int index) {
            return cards_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (getCardsList().size() > 0) {
                output.writeUInt32NoTag(10);
                output.writeUInt32NoTag(cardsMemoizedSerializedSize);
            }
            for (int i = 0; i < cards_.size(); i++) {
                output.writeUInt32NoTag(cards_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                for (int i = 0; i < cards_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(cards_.get(i));
                }
                size += dataSize;
                if (!getCardsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                cardsMemoizedSerializedSize = dataSize;
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.ChiRequest)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.ChiRequest other = (mahjong.mode.Mahjong.ChiRequest) obj;

            boolean result = true;
            result = result && getCardsList()
                    .equals(other.getCardsList());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getCardsCount() > 0) {
                hash = (37 * hash) + CARDS_FIELD_NUMBER;
                hash = (53 * hash) + getCardsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ChiRequest> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.ChiRequest getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 吃
         * </pre>
         * <p>
         * Protobuf type {@code ChiRequest}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:ChiRequest)
                mahjong.mode.Mahjong.ChiRequestOrBuilder {
            private int bitField0_;
            private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();

            // Construct using mahjong.mode.Mahjong.ChiRequest.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_ChiRequest_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_ChiRequest_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.ChiRequest.class, mahjong.mode.Mahjong.ChiRequest.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                cards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_ChiRequest_descriptor;
            }

            public mahjong.mode.Mahjong.ChiRequest getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.ChiRequest.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.ChiRequest build() {
                mahjong.mode.Mahjong.ChiRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.ChiRequest buildPartial() {
                mahjong.mode.Mahjong.ChiRequest result = new mahjong.mode.Mahjong.ChiRequest(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    cards_ = java.util.Collections.unmodifiableList(cards_);
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.cards_ = cards_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.ChiRequest) {
                    return mergeFrom((mahjong.mode.Mahjong.ChiRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.ChiRequest other) {
                if (other == mahjong.mode.Mahjong.ChiRequest.getDefaultInstance()) return this;
                if (!other.cards_.isEmpty()) {
                    if (cards_.isEmpty()) {
                        cards_ = other.cards_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureCardsIsMutable();
                        cards_.addAll(other.cards_);
                    }
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.ChiRequest parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.ChiRequest) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private void ensureCardsIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 1;</code>
             */
            public java.util.List<java.lang.Integer>
            getCardsList() {
                return java.util.Collections.unmodifiableList(cards_);
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 1;</code>
             */
            public int getCardsCount() {
                return cards_.size();
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 1;</code>
             */
            public int getCards(int index) {
                return cards_.get(index);
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 1;</code>
             */
            public Builder setCards(
                    int index, int value) {
                ensureCardsIsMutable();
                cards_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 1;</code>
             */
            public Builder addCards(int value) {
                ensureCardsIsMutable();
                cards_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 1;</code>
             */
            public Builder addAllCards(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                ensureCardsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, cards_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 cards = 1;</code>
             */
            public Builder clearCards() {
                cards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:ChiRequest)
        }

    }

    /**
     * <pre>
     * 吃
     * </pre>
     * <p>
     * Protobuf type {@code ChiResponse}
     */
    public static final class ChiResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:ChiResponse)
            ChiResponseOrBuilder {
        public static final int ID_FIELD_NUMBER = 1;
        public static final int CARD_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:ChiResponse)
        private static final mahjong.mode.Mahjong.ChiResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<ChiResponse>
                PARSER = new com.google.protobuf.AbstractParser<ChiResponse>() {
            public ChiResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ChiResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.ChiResponse();
        }

        private int bitField0_;
        private volatile java.lang.Object iD_;
        private java.util.List<java.lang.Integer> card_;
        private int cardMemoizedSerializedSize = -1;
        private byte memoizedIsInitialized = -1;

        // Use ChiResponse.newBuilder() to construct.
        private ChiResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private ChiResponse() {
            iD_ = "";
            card_ = java.util.Collections.emptyList();
        }

        private ChiResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            iD_ = s;
                            break;
                        }
                        case 16: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                card_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            card_.add(input.readUInt32());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                                card_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                card_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    card_ = java.util.Collections.unmodifiableList(card_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_ChiResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.ChiResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.ChiResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.ChiResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.ChiResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<ChiResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_ChiResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.ChiResponse.class, mahjong.mode.Mahjong.ChiResponse.Builder.class);
        }

        /**
         * <pre>
         * 吃牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        public java.lang.String getID() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                iD_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 吃牌的人
         * </pre>
         * <p>
         * <code>string ID = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIDBytes() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                iD_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 card = 2;</code>
         */
        public java.util.List<java.lang.Integer>
        getCardList() {
            return card_;
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 card = 2;</code>
         */
        public int getCardCount() {
            return card_.size();
        }

        /**
         * <pre>
         * 牌
         * </pre>
         * <p>
         * <code>repeated uint32 card = 2;</code>
         */
        public int getCard(int index) {
            return card_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (!getIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, iD_);
            }
            if (getCardList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(cardMemoizedSerializedSize);
            }
            for (int i = 0; i < card_.size(); i++) {
                output.writeUInt32NoTag(card_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, iD_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < card_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(card_.get(i));
                }
                size += dataSize;
                if (!getCardList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                cardMemoizedSerializedSize = dataSize;
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.ChiResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.ChiResponse other = (mahjong.mode.Mahjong.ChiResponse) obj;

            boolean result = true;
            result = result && getID()
                    .equals(other.getID());
            result = result && getCardList()
                    .equals(other.getCardList());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getID().hashCode();
            if (getCardCount() > 0) {
                hash = (37 * hash) + CARD_FIELD_NUMBER;
                hash = (53 * hash) + getCardList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ChiResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.ChiResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 吃
         * </pre>
         * <p>
         * Protobuf type {@code ChiResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:ChiResponse)
                mahjong.mode.Mahjong.ChiResponseOrBuilder {
            private int bitField0_;
            private java.lang.Object iD_ = "";
            private java.util.List<java.lang.Integer> card_ = java.util.Collections.emptyList();

            // Construct using mahjong.mode.Mahjong.ChiResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_ChiResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_ChiResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.ChiResponse.class, mahjong.mode.Mahjong.ChiResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                iD_ = "";

                card_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_ChiResponse_descriptor;
            }

            public mahjong.mode.Mahjong.ChiResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.ChiResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.ChiResponse build() {
                mahjong.mode.Mahjong.ChiResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.ChiResponse buildPartial() {
                mahjong.mode.Mahjong.ChiResponse result = new mahjong.mode.Mahjong.ChiResponse(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.iD_ = iD_;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    card_ = java.util.Collections.unmodifiableList(card_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.card_ = card_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.ChiResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.ChiResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.ChiResponse other) {
                if (other == mahjong.mode.Mahjong.ChiResponse.getDefaultInstance()) return this;
                if (!other.getID().isEmpty()) {
                    iD_ = other.iD_;
                    onChanged();
                }
                if (!other.card_.isEmpty()) {
                    if (card_.isEmpty()) {
                        card_ = other.card_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureCardIsMutable();
                        card_.addAll(other.card_);
                    }
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.ChiResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.ChiResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * 吃牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public java.lang.String getID() {
                java.lang.Object ref = iD_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    iD_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 吃牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setID(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 吃牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIDBytes() {
                java.lang.Object ref = iD_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    iD_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 吃牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setIDBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 吃牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder clearID() {

                iD_ = getDefaultInstance().getID();
                onChanged();
                return this;
            }

            private void ensureCardIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    card_ = new java.util.ArrayList<java.lang.Integer>(card_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 card = 2;</code>
             */
            public java.util.List<java.lang.Integer>
            getCardList() {
                return java.util.Collections.unmodifiableList(card_);
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 card = 2;</code>
             */
            public int getCardCount() {
                return card_.size();
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 card = 2;</code>
             */
            public int getCard(int index) {
                return card_.get(index);
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 card = 2;</code>
             */
            public Builder setCard(
                    int index, int value) {
                ensureCardIsMutable();
                card_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 card = 2;</code>
             */
            public Builder addCard(int value) {
                ensureCardIsMutable();
                card_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 card = 2;</code>
             */
            public Builder addAllCard(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                ensureCardIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, card_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>repeated uint32 card = 2;</code>
             */
            public Builder clearCard() {
                card_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:ChiResponse)
        }

    }

    /**
     * <pre>
     * 胡
     * </pre>
     * <p>
     * Protobuf type {@code HuResponse}
     */
    public static final class HuResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:HuResponse)
            HuResponseOrBuilder {
        public static final int ID_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:HuResponse)
        private static final mahjong.mode.Mahjong.HuResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<HuResponse>
                PARSER = new com.google.protobuf.AbstractParser<HuResponse>() {
            public HuResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HuResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.HuResponse();
        }

        private volatile java.lang.Object iD_;
        private byte memoizedIsInitialized = -1;

        // Use HuResponse.newBuilder() to construct.
        private HuResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private HuResponse() {
            iD_ = "";
        }

        private HuResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            iD_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_HuResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.HuResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.HuResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.HuResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.HuResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.HuResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.HuResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.HuResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.HuResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.HuResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.HuResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.HuResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.HuResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.HuResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.HuResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<HuResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_HuResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.HuResponse.class, mahjong.mode.Mahjong.HuResponse.Builder.class);
        }

        /**
         * <pre>
         *胡牌的人
         * </pre>
         *
         * <code>string ID = 1;</code>
         */
        public java.lang.String getID() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                iD_ = s;
                return s;
            }
        }

        /**
         * <pre>
         *胡牌的人
         * </pre>
         *
         * <code>string ID = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIDBytes() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                iD_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, iD_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, iD_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.HuResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.HuResponse other = (mahjong.mode.Mahjong.HuResponse) obj;

            boolean result = true;
            result = result && getID()
                    .equals(other.getID());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getID().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<HuResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.HuResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 胡
         * </pre>
         * <p>
         * Protobuf type {@code HuResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:HuResponse)
                mahjong.mode.Mahjong.HuResponseOrBuilder {
            private java.lang.Object iD_ = "";

            // Construct using mahjong.mode.Mahjong.HuResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_HuResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_HuResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.HuResponse.class, mahjong.mode.Mahjong.HuResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                iD_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_HuResponse_descriptor;
            }

            public mahjong.mode.Mahjong.HuResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.HuResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.HuResponse build() {
                mahjong.mode.Mahjong.HuResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.HuResponse buildPartial() {
                mahjong.mode.Mahjong.HuResponse result = new mahjong.mode.Mahjong.HuResponse(this);
                result.iD_ = iD_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.HuResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.HuResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.HuResponse other) {
                if (other == mahjong.mode.Mahjong.HuResponse.getDefaultInstance()) return this;
                if (!other.getID().isEmpty()) {
                    iD_ = other.iD_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.HuResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.HuResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
          }
        }
                return this;
            }

            /**
             * <pre>
             * 胡牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public java.lang.String getID() {
                java.lang.Object ref = iD_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    iD_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 胡牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setID(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 胡牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIDBytes() {
                java.lang.Object ref = iD_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    iD_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 胡牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setIDBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 胡牌的人
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder clearID() {

                iD_ = getDefaultInstance().getID();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:HuResponse)
        }

    }

    /**
     * <pre>
     * 摸牌
     * </pre>
     * <p>
     * Protobuf type {@code GetCardResponse}
     */
    public static final class GetCardResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:GetCardResponse)
            GetCardResponseOrBuilder {
        public static final int ID_FIELD_NUMBER = 1;
        public static final int CARD_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:GetCardResponse)
        private static final mahjong.mode.Mahjong.GetCardResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<GetCardResponse>
                PARSER = new com.google.protobuf.AbstractParser<GetCardResponse>() {
            public GetCardResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new GetCardResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.GetCardResponse();
        }

        private volatile java.lang.Object iD_;
        private int card_;
        private byte memoizedIsInitialized = -1;

        // Use GetCardResponse.newBuilder() to construct.
        private GetCardResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private GetCardResponse() {
            iD_ = "";
            card_ = 0;
        }

        private GetCardResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            iD_ = s;
                            break;
                        }
                        case 16: {

                            card_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_GetCardResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.GetCardResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.GetCardResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<GetCardResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_GetCardResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.GetCardResponse.class, mahjong.mode.Mahjong.GetCardResponse.Builder.class);
        }

        /**
         * <pre>
         *用户名
         * </pre>
         *
         * <code>string ID = 1;</code>
         */
        public java.lang.String getID() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                iD_ = s;
                return s;
            }
        }

        /**
         * <pre>
         *用户名
         * </pre>
         *
         * <code>string ID = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIDBytes() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                iD_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         *牌
         * </pre>
         *
         * <code>uint32 card = 2;</code>
         */
        public int getCard() {
            return card_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, iD_);
            }
            if (card_ != 0) {
                output.writeUInt32(2, card_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, iD_);
            }
            if (card_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, card_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.GetCardResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.GetCardResponse other = (mahjong.mode.Mahjong.GetCardResponse) obj;

            boolean result = true;
            result = result && getID()
                    .equals(other.getID());
            result = result && (getCard()
                    == other.getCard());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getID().hashCode();
            hash = (37 * hash) + CARD_FIELD_NUMBER;
            hash = (53 * hash) + getCard();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<GetCardResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.GetCardResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         *摸牌
         * </pre>
         *
         * Protobuf type {@code GetCardResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:GetCardResponse)
                mahjong.mode.Mahjong.GetCardResponseOrBuilder {
            private java.lang.Object iD_ = "";
            private int card_;

            // Construct using mahjong.mode.Mahjong.GetCardResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_GetCardResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_GetCardResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.GetCardResponse.class, mahjong.mode.Mahjong.GetCardResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                iD_ = "";

                card_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_GetCardResponse_descriptor;
            }

            public mahjong.mode.Mahjong.GetCardResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.GetCardResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.GetCardResponse build() {
                mahjong.mode.Mahjong.GetCardResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.GetCardResponse buildPartial() {
                mahjong.mode.Mahjong.GetCardResponse result = new mahjong.mode.Mahjong.GetCardResponse(this);
                result.iD_ = iD_;
                result.card_ = card_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.GetCardResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.GetCardResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.GetCardResponse other) {
                if (other == mahjong.mode.Mahjong.GetCardResponse.getDefaultInstance()) return this;
                if (!other.getID().isEmpty()) {
                    iD_ = other.iD_;
                    onChanged();
                }
                if (other.getCard() != 0) {
                    setCard(other.getCard());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.GetCardResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.GetCardResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public java.lang.String getID() {
                java.lang.Object ref = iD_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    iD_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setID(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIDBytes() {
                java.lang.Object ref = iD_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    iD_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder setIDBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 用户名
             * </pre>
             * <p>
             * <code>string ID = 1;</code>
             */
            public Builder clearID() {

                iD_ = getDefaultInstance().getID();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 2;</code>
             */
            public int getCard() {
                return card_;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 2;</code>
             */
            public Builder setCard(int value) {

                card_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌
             * </pre>
             * <p>
             * <code>uint32 card = 2;</code>
             */
            public Builder clearCard() {

                card_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:GetCardResponse)
        }

    }

    /**
     * <pre>
     * 当局游戏结果
     * </pre>
     * <p>
     * Protobuf type {@code ResultResponse}
     */
    public static final class ResultResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:ResultResponse)
            ResultResponseOrBuilder {
        public static final int USERRESULT_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:ResultResponse)
        private static final mahjong.mode.Mahjong.ResultResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<ResultResponse>
                PARSER = new com.google.protobuf.AbstractParser<ResultResponse>() {
            public ResultResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResultResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.ResultResponse();
        }

        private java.util.List<mahjong.mode.Mahjong.UserResult> userResult_;
        private byte memoizedIsInitialized = -1;

        // Use ResultResponse.newBuilder() to construct.
        private ResultResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private ResultResponse() {
            userResult_ = java.util.Collections.emptyList();
        }

        private ResultResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                userResult_ = new java.util.ArrayList<mahjong.mode.Mahjong.UserResult>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            userResult_.add(
                                    input.readMessage(mahjong.mode.Mahjong.UserResult.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    userResult_ = java.util.Collections.unmodifiableList(userResult_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_ResultResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.ResultResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.ResultResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.ResultResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.ResultResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<ResultResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_ResultResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.ResultResponse.class, mahjong.mode.Mahjong.ResultResponse.Builder.class);
        }

        /**
         * <pre>
         *用户结算
         * </pre>
         *
         * <code>repeated .UserResult userResult = 1;</code>
         */
        public java.util.List<mahjong.mode.Mahjong.UserResult> getUserResultList() {
            return userResult_;
        }

        /**
         * <pre>
         *用户结算
         * </pre>
         *
         * <code>repeated .UserResult userResult = 1;</code>
         */
        public java.util.List<? extends mahjong.mode.Mahjong.UserResultOrBuilder>
        getUserResultOrBuilderList() {
            return userResult_;
        }

        /**
         * <pre>
         *用户结算
         * </pre>
         *
         * <code>repeated .UserResult userResult = 1;</code>
         */
        public int getUserResultCount() {
            return userResult_.size();
        }

        /**
         * <pre>
         *用户结算
         * </pre>
         *
         * <code>repeated .UserResult userResult = 1;</code>
         */
        public mahjong.mode.Mahjong.UserResult getUserResult(int index) {
            return userResult_.get(index);
        }

        /**
         * <pre>
         *用户结算
         * </pre>
         *
         * <code>repeated .UserResult userResult = 1;</code>
         */
        public mahjong.mode.Mahjong.UserResultOrBuilder getUserResultOrBuilder(
                int index) {
            return userResult_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < userResult_.size(); i++) {
                output.writeMessage(1, userResult_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < userResult_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, userResult_.get(i));
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.ResultResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.ResultResponse other = (mahjong.mode.Mahjong.ResultResponse) obj;

            boolean result = true;
            result = result && getUserResultList()
                    .equals(other.getUserResultList());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getUserResultCount() > 0) {
                hash = (37 * hash) + USERRESULT_FIELD_NUMBER;
                hash = (53 * hash) + getUserResultList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ResultResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.ResultResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         *当局游戏结果
         * </pre>
         *
         * Protobuf type {@code ResultResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:ResultResponse)
                mahjong.mode.Mahjong.ResultResponseOrBuilder {
            private int bitField0_;
            private java.util.List<mahjong.mode.Mahjong.UserResult> userResult_ =
                    java.util.Collections.emptyList();
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    mahjong.mode.Mahjong.UserResult, mahjong.mode.Mahjong.UserResult.Builder, mahjong.mode.Mahjong.UserResultOrBuilder> userResultBuilder_;

            // Construct using mahjong.mode.Mahjong.ResultResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_ResultResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_ResultResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.ResultResponse.class, mahjong.mode.Mahjong.ResultResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getUserResultFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                if (userResultBuilder_ == null) {
                    userResult_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    userResultBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_ResultResponse_descriptor;
            }

            public mahjong.mode.Mahjong.ResultResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.ResultResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.ResultResponse build() {
                mahjong.mode.Mahjong.ResultResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.ResultResponse buildPartial() {
                mahjong.mode.Mahjong.ResultResponse result = new mahjong.mode.Mahjong.ResultResponse(this);
                int from_bitField0_ = bitField0_;
                if (userResultBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        userResult_ = java.util.Collections.unmodifiableList(userResult_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.userResult_ = userResult_;
                } else {
                    result.userResult_ = userResultBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.ResultResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.ResultResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.ResultResponse other) {
                if (other == mahjong.mode.Mahjong.ResultResponse.getDefaultInstance()) return this;
                if (userResultBuilder_ == null) {
                    if (!other.userResult_.isEmpty()) {
                        if (userResult_.isEmpty()) {
                            userResult_ = other.userResult_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureUserResultIsMutable();
                            userResult_.addAll(other.userResult_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.userResult_.isEmpty()) {
                        if (userResultBuilder_.isEmpty()) {
                            userResultBuilder_.dispose();
                            userResultBuilder_ = null;
                            userResult_ = other.userResult_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            userResultBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getUserResultFieldBuilder() : null;
                        } else {
                            userResultBuilder_.addAllMessages(other.userResult_);
                        }
                    }
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.ResultResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.ResultResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private void ensureUserResultIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    userResult_ = new java.util.ArrayList<mahjong.mode.Mahjong.UserResult>(userResult_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <pre>
             *用户结算
             * </pre>
             *
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public java.util.List<mahjong.mode.Mahjong.UserResult> getUserResultList() {
                if (userResultBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(userResult_);
                } else {
                    return userResultBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             *用户结算
             * </pre>
             *
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public int getUserResultCount() {
                if (userResultBuilder_ == null) {
                    return userResult_.size();
                } else {
                    return userResultBuilder_.getCount();
                }
            }

            /**
             * <pre>
             *用户结算
             * </pre>
             *
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public mahjong.mode.Mahjong.UserResult getUserResult(int index) {
                if (userResultBuilder_ == null) {
                    return userResult_.get(index);
                } else {
                    return userResultBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             *用户结算
             * </pre>
             *
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public Builder setUserResult(
                    int index, mahjong.mode.Mahjong.UserResult value) {
                if (userResultBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureUserResultIsMutable();
                    userResult_.set(index, value);
                    onChanged();
                } else {
                    userResultBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             *用户结算
             * </pre>
             *
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public Builder setUserResult(
                    int index, mahjong.mode.Mahjong.UserResult.Builder builderForValue) {
                if (userResultBuilder_ == null) {
                    ensureUserResultIsMutable();
                    userResult_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    userResultBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             *用户结算
             * </pre>
             *
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public Builder addUserResult(mahjong.mode.Mahjong.UserResult value) {
                if (userResultBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureUserResultIsMutable();
                    userResult_.add(value);
                    onChanged();
                } else {
                    userResultBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             *用户结算
             * </pre>
             *
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public Builder addUserResult(
                    int index, mahjong.mode.Mahjong.UserResult value) {
                if (userResultBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureUserResultIsMutable();
                    userResult_.add(index, value);
                    onChanged();
                } else {
                    userResultBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * 用户结算
             * </pre>
             * <p>
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public Builder addUserResult(
                    mahjong.mode.Mahjong.UserResult.Builder builderForValue) {
                if (userResultBuilder_ == null) {
                    ensureUserResultIsMutable();
                    userResult_.add(builderForValue.build());
                    onChanged();
                } else {
                    userResultBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 用户结算
             * </pre>
             * <p>
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public Builder addUserResult(
                    int index, mahjong.mode.Mahjong.UserResult.Builder builderForValue) {
                if (userResultBuilder_ == null) {
                    ensureUserResultIsMutable();
                    userResult_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    userResultBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 用户结算
             * </pre>
             * <p>
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public Builder addAllUserResult(
                    java.lang.Iterable<? extends mahjong.mode.Mahjong.UserResult> values) {
                if (userResultBuilder_ == null) {
                    ensureUserResultIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, userResult_);
                    onChanged();
                } else {
                    userResultBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * 用户结算
             * </pre>
             * <p>
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public Builder clearUserResult() {
                if (userResultBuilder_ == null) {
                    userResult_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    userResultBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * 用户结算
             * </pre>
             * <p>
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public Builder removeUserResult(int index) {
                if (userResultBuilder_ == null) {
                    ensureUserResultIsMutable();
                    userResult_.remove(index);
                    onChanged();
                } else {
                    userResultBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * 用户结算
             * </pre>
             * <p>
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public mahjong.mode.Mahjong.UserResult.Builder getUserResultBuilder(
                    int index) {
                return getUserResultFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * 用户结算
             * </pre>
             * <p>
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public mahjong.mode.Mahjong.UserResultOrBuilder getUserResultOrBuilder(
                    int index) {
                if (userResultBuilder_ == null) {
                    return userResult_.get(index);
                } else {
                    return userResultBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * 用户结算
             * </pre>
             * <p>
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public java.util.List<? extends mahjong.mode.Mahjong.UserResultOrBuilder>
            getUserResultOrBuilderList() {
                if (userResultBuilder_ != null) {
                    return userResultBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(userResult_);
                }
            }

            /**
             * <pre>
             * 用户结算
             * </pre>
             * <p>
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public mahjong.mode.Mahjong.UserResult.Builder addUserResultBuilder() {
                return getUserResultFieldBuilder().addBuilder(
                        mahjong.mode.Mahjong.UserResult.getDefaultInstance());
            }

            /**
             * <pre>
             *用户结算
             * </pre>
             *
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public mahjong.mode.Mahjong.UserResult.Builder addUserResultBuilder(
                    int index) {
                return getUserResultFieldBuilder().addBuilder(
                        index, mahjong.mode.Mahjong.UserResult.getDefaultInstance());
            }

            /**
             * <pre>
             * 用户结算
             * </pre>
             * <p>
             * <code>repeated .UserResult userResult = 1;</code>
             */
            public java.util.List<mahjong.mode.Mahjong.UserResult.Builder>
            getUserResultBuilderList() {
                return getUserResultFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    mahjong.mode.Mahjong.UserResult, mahjong.mode.Mahjong.UserResult.Builder, mahjong.mode.Mahjong.UserResultOrBuilder>
            getUserResultFieldBuilder() {
                if (userResultBuilder_ == null) {
                    userResultBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            mahjong.mode.Mahjong.UserResult, mahjong.mode.Mahjong.UserResult.Builder, mahjong.mode.Mahjong.UserResultOrBuilder>(
                            userResult_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    userResult_ = null;
                }
                return userResultBuilder_;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:ResultResponse)
        }

    }

    /**
     * <pre>
     * 单个人结算
     * </pre>
     * <p>
     * Protobuf type {@code UserResult}
     */
    public static final class UserResult extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:UserResult)
            UserResultOrBuilder {
        public static final int ID_FIELD_NUMBER = 1;
        public static final int RESULT_FIELD_NUMBER = 2;
        public static final int CARDS_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:UserResult)
        private static final mahjong.mode.Mahjong.UserResult DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<UserResult>
                PARSER = new com.google.protobuf.AbstractParser<UserResult>() {
            public UserResult parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new UserResult(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.UserResult();
        }

        private int bitField0_;
        private volatile java.lang.Object iD_;
        private java.util.List<mahjong.mode.Mahjong.Result> result_;
        private java.util.List<java.lang.Integer> cards_;
        private int cardsMemoizedSerializedSize = -1;
        private byte memoizedIsInitialized = -1;

        // Use UserResult.newBuilder() to construct.
        private UserResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private UserResult() {
            iD_ = "";
            result_ = java.util.Collections.emptyList();
            cards_ = java.util.Collections.emptyList();
        }

        private UserResult(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            iD_ = s;
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                result_ = new java.util.ArrayList<mahjong.mode.Mahjong.Result>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            result_.add(
                                    input.readMessage(mahjong.mode.Mahjong.Result.parser(), extensionRegistry));
                            break;
                        }
                        case 24: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                cards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            cards_.add(input.readUInt32());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                                cards_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                cards_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    result_ = java.util.Collections.unmodifiableList(result_);
                }
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    cards_ = java.util.Collections.unmodifiableList(cards_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_UserResult_descriptor;
        }

        public static mahjong.mode.Mahjong.UserResult parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.UserResult parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.UserResult parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.UserResult parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.UserResult parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.UserResult parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.UserResult parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.UserResult parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.UserResult parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.UserResult parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.UserResult parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.UserResult parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.UserResult prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.UserResult getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<UserResult> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_UserResult_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.UserResult.class, mahjong.mode.Mahjong.UserResult.Builder.class);
        }

        /**
         * <pre>
         *人
         * </pre>
         *
         * <code>string ID = 1;</code>
         */
        public java.lang.String getID() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                iD_ = s;
                return s;
            }
        }

        /**
         * <pre>
         *人
         * </pre>
         *
         * <code>string ID = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIDBytes() {
            java.lang.Object ref = iD_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                iD_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         *结算
         * </pre>
         *
         * <code>repeated .Result result = 2;</code>
         */
        public java.util.List<mahjong.mode.Mahjong.Result> getResultList() {
            return result_;
        }

        /**
         * <pre>
         *结算
         * </pre>
         *
         * <code>repeated .Result result = 2;</code>
         */
        public java.util.List<? extends mahjong.mode.Mahjong.ResultOrBuilder>
        getResultOrBuilderList() {
            return result_;
        }

        /**
         * <pre>
         *结算
         * </pre>
         *
         * <code>repeated .Result result = 2;</code>
         */
        public int getResultCount() {
            return result_.size();
        }

        /**
         * <pre>
         *结算
         * </pre>
         *
         * <code>repeated .Result result = 2;</code>
         */
        public mahjong.mode.Mahjong.Result getResult(int index) {
            return result_.get(index);
        }

        /**
         * <pre>
         *结算
         * </pre>
         *
         * <code>repeated .Result result = 2;</code>
         */
        public mahjong.mode.Mahjong.ResultOrBuilder getResultOrBuilder(
                int index) {
            return result_.get(index);
        }

        /**
         * <code>repeated uint32 cards = 3;</code>
         */
        public java.util.List<java.lang.Integer>
        getCardsList() {
            return cards_;
        }

        /**
         * <code>repeated uint32 cards = 3;</code>
         */
        public int getCardsCount() {
            return cards_.size();
        }

        /**
         * <code>repeated uint32 cards = 3;</code>
         */
        public int getCards(int index) {
            return cards_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (!getIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, iD_);
            }
            for (int i = 0; i < result_.size(); i++) {
                output.writeMessage(2, result_.get(i));
            }
            if (getCardsList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(cardsMemoizedSerializedSize);
            }
            for (int i = 0; i < cards_.size(); i++) {
                output.writeUInt32NoTag(cards_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, iD_);
            }
            for (int i = 0; i < result_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, result_.get(i));
            }
            {
                int dataSize = 0;
                for (int i = 0; i < cards_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(cards_.get(i));
                }
                size += dataSize;
                if (!getCardsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                cardsMemoizedSerializedSize = dataSize;
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.UserResult)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.UserResult other = (mahjong.mode.Mahjong.UserResult) obj;

            boolean result = true;
            result = result && getID()
                    .equals(other.getID());
            result = result && getResultList()
                    .equals(other.getResultList());
            result = result && getCardsList()
                    .equals(other.getCardsList());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getID().hashCode();
            if (getResultCount() > 0) {
                hash = (37 * hash) + RESULT_FIELD_NUMBER;
                hash = (53 * hash) + getResultList().hashCode();
            }
            if (getCardsCount() > 0) {
                hash = (37 * hash) + CARDS_FIELD_NUMBER;
                hash = (53 * hash) + getCardsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<UserResult> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.UserResult getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         *单个人结算
         * </pre>
         *
         * Protobuf type {@code UserResult}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:UserResult)
                mahjong.mode.Mahjong.UserResultOrBuilder {
            private int bitField0_;
            private java.lang.Object iD_ = "";
            private java.util.List<mahjong.mode.Mahjong.Result> result_ =
                    java.util.Collections.emptyList();
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    mahjong.mode.Mahjong.Result, mahjong.mode.Mahjong.Result.Builder, mahjong.mode.Mahjong.ResultOrBuilder> resultBuilder_;
            private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();

            // Construct using mahjong.mode.Mahjong.UserResult.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_UserResult_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_UserResult_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.UserResult.class, mahjong.mode.Mahjong.UserResult.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getResultFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                iD_ = "";

                if (resultBuilder_ == null) {
                    result_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    resultBuilder_.clear();
                }
                cards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_UserResult_descriptor;
            }

            public mahjong.mode.Mahjong.UserResult getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.UserResult.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.UserResult build() {
                mahjong.mode.Mahjong.UserResult result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.UserResult buildPartial() {
                mahjong.mode.Mahjong.UserResult result = new mahjong.mode.Mahjong.UserResult(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.iD_ = iD_;
                if (resultBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        result_ = java.util.Collections.unmodifiableList(result_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.result_ = result_;
                } else {
                    result.result_ = resultBuilder_.build();
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    cards_ = java.util.Collections.unmodifiableList(cards_);
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.cards_ = cards_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.UserResult) {
                    return mergeFrom((mahjong.mode.Mahjong.UserResult) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.UserResult other) {
                if (other == mahjong.mode.Mahjong.UserResult.getDefaultInstance()) return this;
                if (!other.getID().isEmpty()) {
                    iD_ = other.iD_;
                    onChanged();
                }
                if (resultBuilder_ == null) {
                    if (!other.result_.isEmpty()) {
                        if (result_.isEmpty()) {
                            result_ = other.result_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureResultIsMutable();
                            result_.addAll(other.result_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.result_.isEmpty()) {
                        if (resultBuilder_.isEmpty()) {
                            resultBuilder_.dispose();
                            resultBuilder_ = null;
                            result_ = other.result_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            resultBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getResultFieldBuilder() : null;
                        } else {
                            resultBuilder_.addAllMessages(other.result_);
                        }
                    }
                }
                if (!other.cards_.isEmpty()) {
                    if (cards_.isEmpty()) {
                        cards_ = other.cards_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureCardsIsMutable();
                        cards_.addAll(other.cards_);
                    }
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.UserResult parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.UserResult) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             *人
             * </pre>
             *
             * <code>string ID = 1;</code>
             */
            public java.lang.String getID() {
                java.lang.Object ref = iD_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    iD_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *人
             * </pre>
             *
             * <code>string ID = 1;</code>
             */
            public Builder setID(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *人
             * </pre>
             *
             * <code>string ID = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIDBytes() {
                java.lang.Object ref = iD_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    iD_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *人
             * </pre>
             *
             * <code>string ID = 1;</code>
             */
            public Builder setIDBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                iD_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *人
             * </pre>
             *
             * <code>string ID = 1;</code>
             */
            public Builder clearID() {

                iD_ = getDefaultInstance().getID();
                onChanged();
                return this;
            }

            private void ensureResultIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    result_ = new java.util.ArrayList<mahjong.mode.Mahjong.Result>(result_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <pre>
             *结算
             * </pre>
             *
             * <code>repeated .Result result = 2;</code>
             */
            public java.util.List<mahjong.mode.Mahjong.Result> getResultList() {
                if (resultBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(result_);
                } else {
                    return resultBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             *结算
             * </pre>
             *
             * <code>repeated .Result result = 2;</code>
             */
            public int getResultCount() {
                if (resultBuilder_ == null) {
                    return result_.size();
                } else {
                    return resultBuilder_.getCount();
                }
            }

            /**
             * <pre>
             *结算
             * </pre>
             *
             * <code>repeated .Result result = 2;</code>
             */
            public mahjong.mode.Mahjong.Result getResult(int index) {
                if (resultBuilder_ == null) {
                    return result_.get(index);
                } else {
                    return resultBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             *结算
             * </pre>
             *
             * <code>repeated .Result result = 2;</code>
             */
            public Builder setResult(
                    int index, mahjong.mode.Mahjong.Result value) {
                if (resultBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureResultIsMutable();
                    result_.set(index, value);
                    onChanged();
                } else {
                    resultBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             *结算
             * </pre>
             *
             * <code>repeated .Result result = 2;</code>
             */
            public Builder setResult(
                    int index, mahjong.mode.Mahjong.Result.Builder builderForValue) {
                if (resultBuilder_ == null) {
                    ensureResultIsMutable();
                    result_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    resultBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             *结算
             * </pre>
             *
             * <code>repeated .Result result = 2;</code>
             */
            public Builder addResult(mahjong.mode.Mahjong.Result value) {
                if (resultBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureResultIsMutable();
                    result_.add(value);
                    onChanged();
                } else {
                    resultBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             *结算
             * </pre>
             *
             * <code>repeated .Result result = 2;</code>
             */
            public Builder addResult(
                    int index, mahjong.mode.Mahjong.Result value) {
                if (resultBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureResultIsMutable();
                    result_.add(index, value);
                    onChanged();
                } else {
                    resultBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public Builder addResult(
                    mahjong.mode.Mahjong.Result.Builder builderForValue) {
                if (resultBuilder_ == null) {
                    ensureResultIsMutable();
                    result_.add(builderForValue.build());
                    onChanged();
                } else {
                    resultBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public Builder addResult(
                    int index, mahjong.mode.Mahjong.Result.Builder builderForValue) {
                if (resultBuilder_ == null) {
                    ensureResultIsMutable();
                    result_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    resultBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public Builder addAllResult(
                    java.lang.Iterable<? extends mahjong.mode.Mahjong.Result> values) {
                if (resultBuilder_ == null) {
                    ensureResultIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, result_);
                    onChanged();
                } else {
                    resultBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public Builder clearResult() {
                if (resultBuilder_ == null) {
                    result_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    resultBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public Builder removeResult(int index) {
                if (resultBuilder_ == null) {
                    ensureResultIsMutable();
                    result_.remove(index);
                    onChanged();
                } else {
                    resultBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public mahjong.mode.Mahjong.Result.Builder getResultBuilder(
                    int index) {
                return getResultFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public mahjong.mode.Mahjong.ResultOrBuilder getResultOrBuilder(
                    int index) {
                if (resultBuilder_ == null) {
                    return result_.get(index);
                } else {
                    return resultBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public java.util.List<? extends mahjong.mode.Mahjong.ResultOrBuilder>
            getResultOrBuilderList() {
                if (resultBuilder_ != null) {
                    return resultBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(result_);
                }
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public mahjong.mode.Mahjong.Result.Builder addResultBuilder() {
                return getResultFieldBuilder().addBuilder(
                        mahjong.mode.Mahjong.Result.getDefaultInstance());
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public mahjong.mode.Mahjong.Result.Builder addResultBuilder(
                    int index) {
                return getResultFieldBuilder().addBuilder(
                        index, mahjong.mode.Mahjong.Result.getDefaultInstance());
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>repeated .Result result = 2;</code>
             */
            public java.util.List<mahjong.mode.Mahjong.Result.Builder>
            getResultBuilderList() {
                return getResultFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    mahjong.mode.Mahjong.Result, mahjong.mode.Mahjong.Result.Builder, mahjong.mode.Mahjong.ResultOrBuilder>
            getResultFieldBuilder() {
                if (resultBuilder_ == null) {
                    resultBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            mahjong.mode.Mahjong.Result, mahjong.mode.Mahjong.Result.Builder, mahjong.mode.Mahjong.ResultOrBuilder>(
                            result_,
                            ((bitField0_ & 0x00000002) == 0x00000002),
                            getParentForChildren(),
                            isClean());
                    result_ = null;
                }
                return resultBuilder_;
            }

            private void ensureCardsIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated uint32 cards = 3;</code>
             */
            public java.util.List<java.lang.Integer>
            getCardsList() {
                return java.util.Collections.unmodifiableList(cards_);
            }

            /**
             * <code>repeated uint32 cards = 3;</code>
             */
            public int getCardsCount() {
                return cards_.size();
            }

            /**
             * <code>repeated uint32 cards = 3;</code>
             */
            public int getCards(int index) {
                return cards_.get(index);
            }

            /**
             * <code>repeated uint32 cards = 3;</code>
             */
            public Builder setCards(
                    int index, int value) {
                ensureCardsIsMutable();
                cards_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated uint32 cards = 3;</code>
             */
            public Builder addCards(int value) {
                ensureCardsIsMutable();
                cards_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated uint32 cards = 3;</code>
             */
            public Builder addAllCards(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                ensureCardsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, cards_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated uint32 cards = 3;</code>
             */
            public Builder clearCards() {
                cards_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:UserResult)
        }

    }

    /**
     * <pre>
     * 单个结算
     * </pre>
     * <p>
     * Protobuf type {@code Result}
     */
    public static final class Result extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:Result)
            ResultOrBuilder {
        public static final int SCORE_FIELD_NUMBER = 1;
        public static final int SCORETYPES_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:Result)
        private static final mahjong.mode.Mahjong.Result DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<Result>
                PARSER = new com.google.protobuf.AbstractParser<Result>() {
            public Result parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Result(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.Result();
        }

        private int bitField0_;
        private double score_;
        private java.util.List<java.lang.Integer> scoreTypes_;
        private int scoreTypesMemoizedSerializedSize = -1;
        private byte memoizedIsInitialized = -1;

        // Use Result.newBuilder() to construct.
        private Result(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private Result() {
            score_ = 0D;
            scoreTypes_ = java.util.Collections.emptyList();
        }

        private Result(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 9: {

                            score_ = input.readDouble();
                            break;
                        }
                        case 16: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                scoreTypes_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            scoreTypes_.add(input.readUInt32());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                                scoreTypes_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                scoreTypes_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    scoreTypes_ = java.util.Collections.unmodifiableList(scoreTypes_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_Result_descriptor;
        }

        public static mahjong.mode.Mahjong.Result parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.Result parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.Result parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.Result parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.Result parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.Result parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.Result parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.Result parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.Result parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.Result parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.Result parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.Result parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.Result prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.Result getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<Result> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_Result_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.Result.class, mahjong.mode.Mahjong.Result.Builder.class);
        }

        /**
         * <pre>
         *结算
         * </pre>
         *
         * <code>double score = 1;</code>
         */
        public double getScore() {
            return score_;
        }

        /**
         * <pre>
         *牌型
         * </pre>
         *
         * <code>repeated uint32 scoreTypes = 2;</code>
         */
        public java.util.List<java.lang.Integer>
        getScoreTypesList() {
            return scoreTypes_;
        }

        /**
         * <pre>
         *牌型
         * </pre>
         *
         * <code>repeated uint32 scoreTypes = 2;</code>
         */
        public int getScoreTypesCount() {
            return scoreTypes_.size();
        }

        /**
         * <pre>
         *牌型
         * </pre>
         *
         * <code>repeated uint32 scoreTypes = 2;</code>
         */
        public int getScoreTypes(int index) {
            return scoreTypes_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (score_ != 0D) {
                output.writeDouble(1, score_);
            }
            if (getScoreTypesList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(scoreTypesMemoizedSerializedSize);
            }
            for (int i = 0; i < scoreTypes_.size(); i++) {
                output.writeUInt32NoTag(scoreTypes_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (score_ != 0D) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(1, score_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < scoreTypes_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(scoreTypes_.get(i));
                }
                size += dataSize;
                if (!getScoreTypesList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                scoreTypesMemoizedSerializedSize = dataSize;
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.Result)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.Result other = (mahjong.mode.Mahjong.Result) obj;

            boolean result = true;
            result = result && (
                    java.lang.Double.doubleToLongBits(getScore())
                            == java.lang.Double.doubleToLongBits(
                            other.getScore()));
            result = result && getScoreTypesList()
                    .equals(other.getScoreTypesList());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + SCORE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    java.lang.Double.doubleToLongBits(getScore()));
            if (getScoreTypesCount() > 0) {
                hash = (37 * hash) + SCORETYPES_FIELD_NUMBER;
                hash = (53 * hash) + getScoreTypesList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Result> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.Result getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 单个结算
         * </pre>
         * <p>
         * Protobuf type {@code Result}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:Result)
                mahjong.mode.Mahjong.ResultOrBuilder {
            private int bitField0_;
            private double score_;
            private java.util.List<java.lang.Integer> scoreTypes_ = java.util.Collections.emptyList();

            // Construct using mahjong.mode.Mahjong.Result.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_Result_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_Result_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.Result.class, mahjong.mode.Mahjong.Result.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                score_ = 0D;

                scoreTypes_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_Result_descriptor;
            }

            public mahjong.mode.Mahjong.Result getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.Result.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.Result build() {
                mahjong.mode.Mahjong.Result result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.Result buildPartial() {
                mahjong.mode.Mahjong.Result result = new mahjong.mode.Mahjong.Result(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.score_ = score_;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    scoreTypes_ = java.util.Collections.unmodifiableList(scoreTypes_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.scoreTypes_ = scoreTypes_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
      }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.Result) {
                    return mergeFrom((mahjong.mode.Mahjong.Result) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.Result other) {
                if (other == mahjong.mode.Mahjong.Result.getDefaultInstance()) return this;
                if (other.getScore() != 0D) {
                    setScore(other.getScore());
                }
                if (!other.scoreTypes_.isEmpty()) {
                    if (scoreTypes_.isEmpty()) {
                        scoreTypes_ = other.scoreTypes_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureScoreTypesIsMutable();
                        scoreTypes_.addAll(other.scoreTypes_);
                    }
                    onChanged();
                }
                onChanged();
        return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.Result parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.Result) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>double score = 1;</code>
             */
            public double getScore() {
                return score_;
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>double score = 1;</code>
             */
            public Builder setScore(double value) {

                score_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 结算
             * </pre>
             * <p>
             * <code>double score = 1;</code>
             */
            public Builder clearScore() {

                score_ = 0D;
                onChanged();
                return this;
            }

            private void ensureScoreTypesIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    scoreTypes_ = new java.util.ArrayList<java.lang.Integer>(scoreTypes_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <pre>
             * 牌型
             * </pre>
             * <p>
             * <code>repeated uint32 scoreTypes = 2;</code>
             */
            public java.util.List<java.lang.Integer>
            getScoreTypesList() {
                return java.util.Collections.unmodifiableList(scoreTypes_);
            }

            /**
             * <pre>
             * 牌型
             * </pre>
             * <p>
             * <code>repeated uint32 scoreTypes = 2;</code>
             */
            public int getScoreTypesCount() {
                return scoreTypes_.size();
            }

            /**
             * <pre>
             * 牌型
             * </pre>
             * <p>
             * <code>repeated uint32 scoreTypes = 2;</code>
             */
            public int getScoreTypes(int index) {
                return scoreTypes_.get(index);
            }

            /**
             * <pre>
             * 牌型
             * </pre>
             * <p>
             * <code>repeated uint32 scoreTypes = 2;</code>
             */
            public Builder setScoreTypes(
                    int index, int value) {
                ensureScoreTypesIsMutable();
                scoreTypes_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌型
             * </pre>
             * <p>
             * <code>repeated uint32 scoreTypes = 2;</code>
             */
            public Builder addScoreTypes(int value) {
                ensureScoreTypesIsMutable();
                scoreTypes_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌型
             * </pre>
             * <p>
             * <code>repeated uint32 scoreTypes = 2;</code>
             */
            public Builder addAllScoreTypes(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                ensureScoreTypesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, scoreTypes_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 牌型
             * </pre>
             * <p>
             * <code>repeated uint32 scoreTypes = 2;</code>
             */
            public Builder clearScoreTypes() {
                scoreTypes_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:Result)
        }

    }

    /**
     * <pre>
     * 喇叭
     * </pre>
     * <p>
     * Protobuf type {@code MessageResponse}
     */
    public static final class MessageResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:MessageResponse)
            MessageResponseOrBuilder {
        public static final int MESSAGE_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:MessageResponse)
        private static final mahjong.mode.Mahjong.MessageResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<MessageResponse>
                PARSER = new com.google.protobuf.AbstractParser<MessageResponse>() {
            public MessageResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new MessageResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new mahjong.mode.Mahjong.MessageResponse();
        }

        private volatile java.lang.Object message_;
        private byte memoizedIsInitialized = -1;

        // Use MessageResponse.newBuilder() to construct.
        private MessageResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private MessageResponse() {
            message_ = "";
        }

        private MessageResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            message_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.Mahjong.internal_static_MessageResponse_descriptor;
        }

        public static mahjong.mode.Mahjong.MessageResponse parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static mahjong.mode.Mahjong.MessageResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(mahjong.mode.Mahjong.MessageResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static mahjong.mode.Mahjong.MessageResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<MessageResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.Mahjong.internal_static_MessageResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.Mahjong.MessageResponse.class, mahjong.mode.Mahjong.MessageResponse.Builder.class);
        }

        /**
         * <pre>
         * 内容
         * </pre>
         * <p>
         * <code>string message = 1;</code>
         */
        public java.lang.String getMessage() {
            java.lang.Object ref = message_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                message_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * 内容
         * </pre>
         * <p>
         * <code>string message = 1;</code>
         */
        public com.google.protobuf.ByteString
        getMessageBytes() {
            java.lang.Object ref = message_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                message_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getMessageBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getMessageBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof mahjong.mode.Mahjong.MessageResponse)) {
                return super.equals(obj);
            }
            mahjong.mode.Mahjong.MessageResponse other = (mahjong.mode.Mahjong.MessageResponse) obj;

            boolean result = true;
            result = result && getMessage()
                    .equals(other.getMessage());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
            hash = (53 * hash) + getMessage().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MessageResponse> getParserForType() {
            return PARSER;
        }

        public mahjong.mode.Mahjong.MessageResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * 喇叭
         * </pre>
         * <p>
         * Protobuf type {@code MessageResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:MessageResponse)
                mahjong.mode.Mahjong.MessageResponseOrBuilder {
            private java.lang.Object message_ = "";

            // Construct using mahjong.mode.Mahjong.MessageResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return mahjong.mode.Mahjong.internal_static_MessageResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return mahjong.mode.Mahjong.internal_static_MessageResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                mahjong.mode.Mahjong.MessageResponse.class, mahjong.mode.Mahjong.MessageResponse.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                message_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return mahjong.mode.Mahjong.internal_static_MessageResponse_descriptor;
            }

            public mahjong.mode.Mahjong.MessageResponse getDefaultInstanceForType() {
                return mahjong.mode.Mahjong.MessageResponse.getDefaultInstance();
            }

            public mahjong.mode.Mahjong.MessageResponse build() {
                mahjong.mode.Mahjong.MessageResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public mahjong.mode.Mahjong.MessageResponse buildPartial() {
                mahjong.mode.Mahjong.MessageResponse result = new mahjong.mode.Mahjong.MessageResponse(this);
                result.message_ = message_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof mahjong.mode.Mahjong.MessageResponse) {
                    return mergeFrom((mahjong.mode.Mahjong.MessageResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(mahjong.mode.Mahjong.MessageResponse other) {
                if (other == mahjong.mode.Mahjong.MessageResponse.getDefaultInstance()) return this;
                if (!other.getMessage().isEmpty()) {
                    message_ = other.message_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                mahjong.mode.Mahjong.MessageResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (mahjong.mode.Mahjong.MessageResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             *内容
             * </pre>
             *
             * <code>string message = 1;</code>
             */
            public java.lang.String getMessage() {
                java.lang.Object ref = message_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    message_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *内容
             * </pre>
             *
             * <code>string message = 1;</code>
             */
            public Builder setMessage(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                message_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *内容
             * </pre>
             *
             * <code>string message = 1;</code>
             */
            public com.google.protobuf.ByteString
            getMessageBytes() {
                java.lang.Object ref = message_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    message_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *内容
             * </pre>
             *
             * <code>string message = 1;</code>
             */
            public Builder setMessageBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                message_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *内容
             * </pre>
             *
             * <code>string message = 1;</code>
             */
            public Builder clearMessage() {

                message_ = getDefaultInstance().getMessage();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:MessageResponse)
    }

  }

  // @@protoc_insertion_point(outer_class_scope)
}
