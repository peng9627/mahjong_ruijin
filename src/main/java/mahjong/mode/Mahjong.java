// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mahjong.proto

package mahjong.mode;

public final class Mahjong {
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_MahjongStartResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_MahjongStartResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_MahjongPengResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_MahjongPengResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_MahjongGang_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_MahjongGang_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_MahjongChi_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_MahjongChi_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_MahjongHuResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_MahjongHuResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_MahjongGetCardResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_MahjongGetCardResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_MahjongPlayCard_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_MahjongPlayCard_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.FileDescriptor
          descriptor;

  static {
    java.lang.String[] descriptorData = {
            "\n\rmahjong.proto\"C\n\024MahjongStartResponse\022" +
                    "\016\n\006banker\030\001 \001(\r\022\014\n\004dice\030\002 \003(\r\022\r\n\005cards\030\003" +
                    " \003(\005\"#\n\023MahjongPengResponse\022\014\n\004card\030\002 \001(" +
                    "\005\"\033\n\013MahjongGang\022\014\n\004card\030\001 \001(\005\"\033\n\nMahjon" +
                    "gChi\022\r\n\005cards\030\001 \003(\005\"!\n\021MahjongHuResponse" +
                    "\022\014\n\004card\030\001 \001(\005\"&\n\026MahjongGetCardResponse" +
                    "\022\014\n\004card\030\001 \001(\005\"\037\n\017MahjongPlayCard\022\014\n\004car" +
                    "d\030\001 \001(\005B\016\n\014mahjong.modeb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[]{
                    }, assigner);
    internal_static_MahjongStartResponse_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_MahjongStartResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_MahjongStartResponse_descriptor,
            new java.lang.String[]{"Banker", "Dice", "Cards",});
    internal_static_MahjongPengResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
    internal_static_MahjongPengResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_MahjongPengResponse_descriptor,
            new java.lang.String[]{"Card",});
    internal_static_MahjongGang_descriptor =
            getDescriptor().getMessageTypes().get(2);
    internal_static_MahjongGang_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_MahjongGang_descriptor,
            new java.lang.String[]{"Card",});
    internal_static_MahjongChi_descriptor =
            getDescriptor().getMessageTypes().get(3);
    internal_static_MahjongChi_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_MahjongChi_descriptor,
            new java.lang.String[]{"Cards",});
    internal_static_MahjongHuResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
    internal_static_MahjongHuResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_MahjongHuResponse_descriptor,
            new java.lang.String[]{"Card",});
    internal_static_MahjongGetCardResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
    internal_static_MahjongGetCardResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_MahjongGetCardResponse_descriptor,
            new java.lang.String[]{"Card",});
    internal_static_MahjongPlayCard_descriptor =
            getDescriptor().getMessageTypes().get(6);
    internal_static_MahjongPlayCard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_MahjongPlayCard_descriptor,
            new java.lang.String[]{"Card",});
  }

  private Mahjong() {
  }

  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
            (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }

  public interface MahjongStartResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:MahjongStartResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *庄家ID
     * </pre>
     *
     * <code>uint32 banker = 1;</code>
     */
    int getBanker();

    /**
     * <pre>
     *骰子
     * </pre>
     *
     * <code>repeated uint32 dice = 2;</code>
     */
    java.util.List<java.lang.Integer> getDiceList();
    /**
     * <pre>
     *骰子
     * </pre>
     *
     * <code>repeated uint32 dice = 2;</code>
     */
    int getDiceCount();
    /**
     * <pre>
     *骰子
     * </pre>
     *
     * <code>repeated uint32 dice = 2;</code>
     */
    int getDice(int index);

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 3;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 3;</code>
     */
    int getCardsCount();
    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 3;</code>
     */
    int getCards(int index);
  }

  public interface MahjongPengResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:MahjongPengResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>int32 card = 2;</code>
     */
    int getCard();
  }

  public interface MahjongGangOrBuilder extends
          // @@protoc_insertion_point(interface_extends:MahjongGang)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>int32 card = 1;</code>
     */
    int getCard();
  }

  public interface MahjongChiOrBuilder extends
          // @@protoc_insertion_point(interface_extends:MahjongChi)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 1;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 1;</code>
     */
    int getCardsCount();

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated int32 cards = 1;</code>
     */
    int getCards(int index);
  }

  public interface MahjongHuResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:MahjongHuResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>int32 card = 1;</code>
     */
    int getCard();
  }

  public interface MahjongGetCardResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:MahjongGetCardResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>int32 card = 1;</code>
     */
    int getCard();
  }

  public interface MahjongPlayCardOrBuilder extends
          // @@protoc_insertion_point(interface_extends:MahjongPlayCard)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>int32 card = 1;</code>
     */
    int getCard();
  }

  /**
   * <pre>
   *游戏开始 发牌 START
   * </pre>
   *
   * Protobuf type {@code MahjongStartResponse}
   */
  public static final class MahjongStartResponse extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:MahjongStartResponse)
          MahjongStartResponseOrBuilder {
    public static final int BANKER_FIELD_NUMBER = 1;
    public static final int DICE_FIELD_NUMBER = 2;

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    public static final int CARDS_FIELD_NUMBER = 3;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:MahjongStartResponse)
    private static final mahjong.mode.Mahjong.MahjongStartResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<MahjongStartResponse>
            PARSER = new com.google.protobuf.AbstractParser<MahjongStartResponse>() {
      public MahjongStartResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new MahjongStartResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.MahjongStartResponse();
    }

    private int bitField0_;
    private int banker_;
    private java.util.List<java.lang.Integer> dice_;
    private int diceMemoizedSerializedSize = -1;
    private java.util.List<java.lang.Integer> cards_;
    private int cardsMemoizedSerializedSize = -1;
    private byte memoizedIsInitialized = -1;

    // Use MahjongStartResponse.newBuilder() to construct.
    private MahjongStartResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private MahjongStartResponse() {
      banker_ = 0;
      dice_ = java.util.Collections.emptyList();
      cards_ = java.util.Collections.emptyList();
    }

    private MahjongStartResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              banker_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                dice_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              dice_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                dice_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                dice_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          dice_ = java.util.Collections.unmodifiableList(dice_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_MahjongStartResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseFrom(
            com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.MahjongStartResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.MahjongStartResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<MahjongStartResponse> parser() {
      return PARSER;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_MahjongStartResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.MahjongStartResponse.class, mahjong.mode.Mahjong.MahjongStartResponse.Builder.class);
    }

    /**
     * <pre>
     *庄家ID
     * </pre>
     *
     * <code>uint32 banker = 1;</code>
     */
    public int getBanker() {
      return banker_;
    }

    /**
     * <pre>
     *骰子
     * </pre>
     *
     * <code>repeated uint32 dice = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getDiceList() {
      return dice_;
    }

    /**
     * <pre>
     *骰子
     * </pre>
     *
     * <code>repeated uint32 dice = 2;</code>
     */
    public int getDiceCount() {
      return dice_.size();
    }

    /**
     * <pre>
     *骰子
     * </pre>
     *
     * <code>repeated uint32 dice = 2;</code>
     */
    public int getDice(int index) {
      return dice_.get(index);
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (banker_ != 0) {
        output.writeUInt32(1, banker_);
      }
      if (getDiceList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(diceMemoizedSerializedSize);
      }
      for (int i = 0; i < dice_.size(); i++) {
        output.writeUInt32NoTag(dice_.get(i));
      }
      if (getCardsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(cardsMemoizedSerializedSize);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32NoTag(cards_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (banker_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, banker_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dice_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(dice_.get(i));
        }
        size += dataSize;
        if (!getDiceList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        diceMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        if (!getCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        cardsMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.MahjongStartResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.MahjongStartResponse other = (mahjong.mode.Mahjong.MahjongStartResponse) obj;

      boolean result = true;
      result = result && (getBanker()
              == other.getBanker());
      result = result && getDiceList()
              .equals(other.getDiceList());
      result = result && getCardsList()
              .equals(other.getCardsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BANKER_FIELD_NUMBER;
      hash = (53 * hash) + getBanker();
      if (getDiceCount() > 0) {
        hash = (37 * hash) + DICE_FIELD_NUMBER;
        hash = (53 * hash) + getDiceList().hashCode();
      }
      if (getCardsCount() > 0) {
        hash = (37 * hash) + CARDS_FIELD_NUMBER;
        hash = (53 * hash) + getCardsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MahjongStartResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.MahjongStartResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     *游戏开始 发牌 START
     * </pre>
     *
     * Protobuf type {@code MahjongStartResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:MahjongStartResponse)
            mahjong.mode.Mahjong.MahjongStartResponseOrBuilder {
      private int bitField0_;
      private int banker_ ;
      private java.util.List<java.lang.Integer> dice_ = java.util.Collections.emptyList();
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        banker_ = 0;

        dice_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      // Construct using mahjong.mode.Mahjong.MahjongStartResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_MahjongStartResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_MahjongStartResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.MahjongStartResponse.class, mahjong.mode.Mahjong.MahjongStartResponse.Builder.class);
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_MahjongStartResponse_descriptor;
      }

      public mahjong.mode.Mahjong.MahjongStartResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.MahjongStartResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.MahjongStartResponse build() {
        mahjong.mode.Mahjong.MahjongStartResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.MahjongStartResponse buildPartial() {
        mahjong.mode.Mahjong.MahjongStartResponse result = new mahjong.mode.Mahjong.MahjongStartResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.banker_ = banker_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          dice_ = java.util.Collections.unmodifiableList(dice_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dice_ = dice_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cards_ = cards_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.MahjongStartResponse) {
          return mergeFrom((mahjong.mode.Mahjong.MahjongStartResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.MahjongStartResponse other) {
        if (other == mahjong.mode.Mahjong.MahjongStartResponse.getDefaultInstance()) return this;
        if (other.getBanker() != 0) {
          setBanker(other.getBanker());
        }
        if (!other.dice_.isEmpty()) {
          if (dice_.isEmpty()) {
            dice_ = other.dice_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDiceIsMutable();
            dice_.addAll(other.dice_);
          }
          onChanged();
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 庄家ID
       * </pre>
       * <p>
       * <code>uint32 banker = 1;</code>
       */
      public int getBanker() {
        return banker_;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.MahjongStartResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.MahjongStartResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       *庄家ID
       * </pre>
       *
       * <code>uint32 banker = 1;</code>
       */
      public Builder setBanker(int value) {

        banker_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       *庄家ID
       * </pre>
       *
       * <code>uint32 banker = 1;</code>
       */
      public Builder clearBanker() {

        banker_ = 0;
        onChanged();
        return this;
      }

      private void ensureDiceIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          dice_ = new java.util.ArrayList<java.lang.Integer>(dice_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public int getDiceCount() {
        return dice_.size();
      }
      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public int getDice(int index) {
        return dice_.get(index);
      }

      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getDiceList() {
        return java.util.Collections.unmodifiableList(dice_);
      }
      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public Builder addDice(int value) {
        ensureDiceIsMutable();
        dice_.add(value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public Builder setDice(
          int index, int value) {
        ensureDiceIsMutable();
        dice_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public Builder addAllDice(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDiceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, dice_);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 骰子
       * </pre>
       * <p>
       * <code>repeated uint32 dice = 2;</code>
       */
      public Builder clearDice() {
        dice_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MahjongStartResponse)
    }

  }

  /**
   * <pre>
   * 碰 TOUCH
   * </pre>
   * <p>
   * Protobuf type {@code MahjongPengResponse}
   */
  public static final class MahjongPengResponse extends
          com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MahjongPengResponse)
      MahjongPengResponseOrBuilder {
    public static final int CARD_FIELD_NUMBER = 2;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:MahjongPengResponse)
    private static final mahjong.mode.Mahjong.MahjongPengResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<MahjongPengResponse>
            PARSER = new com.google.protobuf.AbstractParser<MahjongPengResponse>() {
      public MahjongPengResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new MahjongPengResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.MahjongPengResponse();
    }

    private int card_;
    private byte memoizedIsInitialized = -1;

    // Use MahjongPengResponse.newBuilder() to construct.
    private MahjongPengResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private MahjongPengResponse() {
      card_ = 0;
    }

    private MahjongPengResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 16: {

              card_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_MahjongPengResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseFrom(
        java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseFrom(
        com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseFrom(
            java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseDelimitedFrom(
            java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.MahjongPengResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.MahjongPengResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<MahjongPengResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_MahjongPengResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
              mahjong.mode.Mahjong.MahjongPengResponse.class, mahjong.mode.Mahjong.MahjongPengResponse.Builder.class);
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>int32 card = 2;</code>
     */
    public int getCard() {
      return card_;
    }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (card_ != 0) {
        output.writeInt32(2, card_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, card_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.MahjongPengResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.MahjongPengResponse other = (mahjong.mode.Mahjong.MahjongPengResponse) obj;

      boolean result = true;
      result = result && (getCard()
          == other.getCard());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MahjongPengResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.MahjongPengResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     *碰 TOUCH
     * </pre>
     *
     * Protobuf type {@code MahjongPengResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:MahjongPengResponse)
            mahjong.mode.Mahjong.MahjongPengResponseOrBuilder {
      private int card_ ;

      // Construct using mahjong.mode.Mahjong.MahjongPengResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_MahjongPengResponse_descriptor;
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        card_ = 0;

        return this;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_MahjongPengResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.MahjongPengResponse.class, mahjong.mode.Mahjong.MahjongPengResponse.Builder.class);
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_MahjongPengResponse_descriptor;
      }

      public mahjong.mode.Mahjong.MahjongPengResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.MahjongPengResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.MahjongPengResponse build() {
        mahjong.mode.Mahjong.MahjongPengResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public mahjong.mode.Mahjong.MahjongPengResponse buildPartial() {
        mahjong.mode.Mahjong.MahjongPengResponse result = new mahjong.mode.Mahjong.MahjongPengResponse(this);
        result.card_ = card_;
        onBuilt();
        return result;
      }

      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.MahjongPengResponse) {
          return mergeFrom((mahjong.mode.Mahjong.MahjongPengResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.MahjongPengResponse other) {
        if (other == mahjong.mode.Mahjong.MahjongPengResponse.getDefaultInstance()) return this;
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mahjong.mode.Mahjong.MahjongPengResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.MahjongPengResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 2;</code>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 2;</code>
       */
      public Builder setCard(int value) {

        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 2;</code>
       */
      public Builder clearCard() {

        card_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MahjongPengResponse)
    }

  }

  /**
   * <pre>
   * 暗杠或扒杠 AN_GANG DIAN_GANG BA_GANG
   * </pre>
   * <p>
   * Protobuf type {@code MahjongGang}
   */
  public static final class MahjongGang extends
          com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MahjongGang)
          MahjongGangOrBuilder {
    public static final int CARD_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:MahjongGang)
    private static final mahjong.mode.Mahjong.MahjongGang DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<MahjongGang>
            PARSER = new com.google.protobuf.AbstractParser<MahjongGang>() {
      public MahjongGang parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MahjongGang(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.MahjongGang();
    }

    private int card_;
    private byte memoizedIsInitialized = -1;
    // Use MahjongGang.newBuilder() to construct.
    private MahjongGang(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private MahjongGang() {
      card_ = 0;
    }

    private MahjongGang(
            com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              card_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_MahjongGang_descriptor;
    }

    public static mahjong.mode.Mahjong.MahjongGang parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseFrom(
            java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseFrom(
        com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseFrom(
            com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseFrom(
            byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongGang parseFrom(
            com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.MahjongGang prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.MahjongGang getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<MahjongGang> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_MahjongGang_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.MahjongGang.class, mahjong.mode.Mahjong.MahjongGang.Builder.class);
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>int32 card = 1;</code>
     */
    public int getCard() {
      return card_;
    }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (card_ != 0) {
        output.writeInt32(1, card_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, card_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.MahjongGang)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.MahjongGang other = (mahjong.mode.Mahjong.MahjongGang) obj;

      boolean result = true;
      result = result && (getCard()
          == other.getCard());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder(); }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MahjongGang> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.MahjongGang getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     *暗杠或扒杠 AN_GANG DIAN_GANG BA_GANG
     * </pre>
     *
     * Protobuf type {@code MahjongGang}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:MahjongGang)
            mahjong.mode.Mahjong.MahjongGangOrBuilder {
      private int card_ ;

      // Construct using mahjong.mode.Mahjong.MahjongGang.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_MahjongGang_descriptor;
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        card_ = 0;

        return this;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_MahjongGang_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.MahjongGang.class, mahjong.mode.Mahjong.MahjongGang.Builder.class);
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_MahjongGang_descriptor;
      }

      public mahjong.mode.Mahjong.MahjongGang getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.MahjongGang.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.MahjongGang build() {
        mahjong.mode.Mahjong.MahjongGang result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public mahjong.mode.Mahjong.MahjongGang buildPartial() {
        mahjong.mode.Mahjong.MahjongGang result = new mahjong.mode.Mahjong.MahjongGang(this);
        result.card_ = card_;
        onBuilt();
        return result;
      }

      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.MahjongGang) {
          return mergeFrom((mahjong.mode.Mahjong.MahjongGang) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.MahjongGang other) {
        if (other == mahjong.mode.Mahjong.MahjongGang.getDefaultInstance()) return this;
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mahjong.mode.Mahjong.MahjongGang parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.MahjongGang) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public Builder setCard(int value) {

        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public Builder clearCard() {

        card_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MahjongGang)
    }

  }

  /**
   * <pre>
   * 吃 CHI
   * </pre>
   * <p>
   * Protobuf type {@code MahjongChi}
   */
  public static final class MahjongChi extends
          com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MahjongChi)
          MahjongChiOrBuilder {
    public static final int CARDS_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:MahjongChi)
    private static final mahjong.mode.Mahjong.MahjongChi DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<MahjongChi>
            PARSER = new com.google.protobuf.AbstractParser<MahjongChi>() {
      public MahjongChi parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return new MahjongChi(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.MahjongChi();
    }

    private java.util.List<java.lang.Integer> cards_;
    private int cardsMemoizedSerializedSize = -1;
    private byte memoizedIsInitialized = -1;

    // Use MahjongChi.newBuilder() to construct.
    private MahjongChi(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private MahjongChi() {
      cards_ = java.util.Collections.emptyList();
    }

    private MahjongChi(
            com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_MahjongChi_descriptor;
    }

    public static mahjong.mode.Mahjong.MahjongChi parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseFrom(
            java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseFrom(
            com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongChi parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.MahjongChi prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.MahjongChi getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<MahjongChi> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_MahjongChi_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
                  mahjong.mode.Mahjong.MahjongChi.class, mahjong.mode.Mahjong.MahjongChi.Builder.class);
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 1;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>repeated int32 cards = 1;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getCardsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(cardsMemoizedSerializedSize);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32NoTag(cards_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        if (!getCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cardsMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.MahjongChi)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.MahjongChi other = (mahjong.mode.Mahjong.MahjongChi) obj;

      boolean result = true;
      result = result && getCardsList()
              .equals(other.getCardsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCardsCount() > 0) {
        hash = (37 * hash) + CARDS_FIELD_NUMBER;
        hash = (53 * hash) + getCardsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MahjongChi> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.MahjongChi getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 吃 CHI
     * </pre>
     * <p>
     * Protobuf type {@code MahjongChi}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MahjongChi)
            mahjong.mode.Mahjong.MahjongChiOrBuilder {
      private int bitField0_;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();

      // Construct using mahjong.mode.Mahjong.MahjongChi.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_MahjongChi_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_MahjongChi_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.MahjongChi.class, mahjong.mode.Mahjong.MahjongChi.Builder.class);
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_MahjongChi_descriptor;
      }

      public mahjong.mode.Mahjong.MahjongChi getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.MahjongChi.getDefaultInstance();
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public mahjong.mode.Mahjong.MahjongChi build() {
        mahjong.mode.Mahjong.MahjongChi result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.MahjongChi buildPartial() {
        mahjong.mode.Mahjong.MahjongChi result = new mahjong.mode.Mahjong.MahjongChi(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cards_ = cards_;
        onBuilt();
        return result;
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.MahjongChi) {
          return mergeFrom((mahjong.mode.Mahjong.MahjongChi) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.MahjongChi other) {
        if (other == mahjong.mode.Mahjong.MahjongChi.getDefaultInstance()) return this;
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mahjong.mode.Mahjong.MahjongChi parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.MahjongChi) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000001;
        }
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 1;</code>
       */
      public java.util.List<java.lang.Integer>
      getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 1;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 1;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 1;</code>
       */
      public Builder setCards(
              int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 1;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 1;</code>
       */
      public Builder addAllCards(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated int32 cards = 1;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MahjongChi)
    }

  }

  /**
   * <pre>
   * 胡 HU
   * </pre>
   * <p>
   * Protobuf type {@code MahjongHuResponse}
   */
  public static final class MahjongHuResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:MahjongHuResponse)
          MahjongHuResponseOrBuilder {
    public static final int CARD_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:MahjongHuResponse)
    private static final mahjong.mode.Mahjong.MahjongHuResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<MahjongHuResponse>
            PARSER = new com.google.protobuf.AbstractParser<MahjongHuResponse>() {
      public MahjongHuResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return new MahjongHuResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.MahjongHuResponse();
    }

    private int card_;
    private byte memoizedIsInitialized = -1;

    // Use MahjongHuResponse.newBuilder() to construct.
    private MahjongHuResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private MahjongHuResponse() {
      card_ = 0;
    }

    private MahjongHuResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              card_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_MahjongHuResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.MahjongHuResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.MahjongHuResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<MahjongHuResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_MahjongHuResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
              mahjong.mode.Mahjong.MahjongHuResponse.class, mahjong.mode.Mahjong.MahjongHuResponse.Builder.class);
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>int32 card = 1;</code>
     */
    public int getCard() {
      return card_;
    }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (card_ != 0) {
        output.writeInt32(1, card_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, card_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.MahjongHuResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.MahjongHuResponse other = (mahjong.mode.Mahjong.MahjongHuResponse) obj;

      boolean result = true;
      result = result && (getCard()
          == other.getCard());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() { return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MahjongHuResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.MahjongHuResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 胡 HU
     * </pre>
     * <p>
     * Protobuf type {@code MahjongHuResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:MahjongHuResponse)
        mahjong.mode.Mahjong.MahjongHuResponseOrBuilder {
      private int card_;

      // Construct using mahjong.mode.Mahjong.MahjongHuResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_MahjongHuResponse_descriptor;
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        card_ = 0;

        return this;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_MahjongHuResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.MahjongHuResponse.class, mahjong.mode.Mahjong.MahjongHuResponse.Builder.class);
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_MahjongHuResponse_descriptor;
      }

      public mahjong.mode.Mahjong.MahjongHuResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.MahjongHuResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.MahjongHuResponse build() {
        mahjong.mode.Mahjong.MahjongHuResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public mahjong.mode.Mahjong.MahjongHuResponse buildPartial() {
        mahjong.mode.Mahjong.MahjongHuResponse result = new mahjong.mode.Mahjong.MahjongHuResponse(this);
        result.card_ = card_;
        onBuilt();
        return result;
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.MahjongHuResponse) {
          return mergeFrom((mahjong.mode.Mahjong.MahjongHuResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.MahjongHuResponse other) {
        if (other == mahjong.mode.Mahjong.MahjongHuResponse.getDefaultInstance()) return this;
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mahjong.mode.Mahjong.MahjongHuResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.MahjongHuResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public Builder setCard(int value) {

        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public Builder clearCard() {

        card_ = 0;
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MahjongHuResponse)
    }

  }

  /**
   * <pre>
   *摸牌 GET_CARD
   * </pre>
   *
   * Protobuf type {@code MahjongGetCardResponse}
   */
  public  static final class MahjongGetCardResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:MahjongGetCardResponse)
          MahjongGetCardResponseOrBuilder {
    public static final int CARD_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:MahjongGetCardResponse)
    private static final mahjong.mode.Mahjong.MahjongGetCardResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<MahjongGetCardResponse>
            PARSER = new com.google.protobuf.AbstractParser<MahjongGetCardResponse>() {
      public MahjongGetCardResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return new MahjongGetCardResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.MahjongGetCardResponse();
    }

    private int card_;
    private byte memoizedIsInitialized = -1;
    // Use MahjongGetCardResponse.newBuilder() to construct.
    private MahjongGetCardResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private MahjongGetCardResponse() {
      card_ = 0;
    }

    private MahjongGetCardResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              card_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_MahjongGetCardResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.MahjongGetCardResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.MahjongGetCardResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<MahjongGetCardResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_MahjongGetCardResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
              mahjong.mode.Mahjong.MahjongGetCardResponse.class, mahjong.mode.Mahjong.MahjongGetCardResponse.Builder.class);
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>int32 card = 1;</code>
     */
    public int getCard() {
      return card_;
    }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (card_ != 0) {
        output.writeInt32(1, card_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, card_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.MahjongGetCardResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.MahjongGetCardResponse other = (mahjong.mode.Mahjong.MahjongGetCardResponse) obj;

      boolean result = true;
      result = result && (getCard()
          == other.getCard());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MahjongGetCardResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.MahjongGetCardResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 摸牌 GET_CARD
     * </pre>
     * <p>
     * Protobuf type {@code MahjongGetCardResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:MahjongGetCardResponse)
            mahjong.mode.Mahjong.MahjongGetCardResponseOrBuilder {
      private int card_ ;

      // Construct using mahjong.mode.Mahjong.MahjongGetCardResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_MahjongGetCardResponse_descriptor;
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        card_ = 0;

        return this;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_MahjongGetCardResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.MahjongGetCardResponse.class, mahjong.mode.Mahjong.MahjongGetCardResponse.Builder.class);
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_MahjongGetCardResponse_descriptor;
      }

      public mahjong.mode.Mahjong.MahjongGetCardResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.MahjongGetCardResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.MahjongGetCardResponse build() {
        mahjong.mode.Mahjong.MahjongGetCardResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public mahjong.mode.Mahjong.MahjongGetCardResponse buildPartial() {
        mahjong.mode.Mahjong.MahjongGetCardResponse result = new mahjong.mode.Mahjong.MahjongGetCardResponse(this);
        result.card_ = card_;
        onBuilt();
        return result;
      }

      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.MahjongGetCardResponse) {
          return mergeFrom((mahjong.mode.Mahjong.MahjongGetCardResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.MahjongGetCardResponse other) {
        if (other == mahjong.mode.Mahjong.MahjongGetCardResponse.getDefaultInstance()) return this;
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mahjong.mode.Mahjong.MahjongGetCardResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.MahjongGetCardResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public Builder setCard(int value) {

        card_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public Builder clearCard() {

        card_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MahjongGetCardResponse)
    }

  }

  /**
   * <pre>
   *出牌 PLAY_CARD
   * </pre>
   *
   * Protobuf type {@code MahjongPlayCard}
   */
  public  static final class MahjongPlayCard extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:MahjongPlayCard)
          MahjongPlayCardOrBuilder {
    public static final int CARD_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:MahjongPlayCard)
    private static final mahjong.mode.Mahjong.MahjongPlayCard DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<MahjongPlayCard>
            PARSER = new com.google.protobuf.AbstractParser<MahjongPlayCard>() {
      public MahjongPlayCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MahjongPlayCard(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.MahjongPlayCard();
    }

    private int card_;
    private byte memoizedIsInitialized = -1;

    // Use MahjongPlayCard.newBuilder() to construct.
    private MahjongPlayCard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private MahjongPlayCard() {
      card_ = 0;
    }

    private MahjongPlayCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              card_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_MahjongPlayCard_descriptor;
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.MahjongPlayCard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.MahjongPlayCard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<MahjongPlayCard> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_MahjongPlayCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
                  mahjong.mode.Mahjong.MahjongPlayCard.class, mahjong.mode.Mahjong.MahjongPlayCard.Builder.class);
    }

    /**
     * <pre>
     *牌
     * </pre>
     *
     * <code>int32 card = 1;</code>
     */
    public int getCard() {
      return card_;
    }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (card_ != 0) {
        output.writeInt32(1, card_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, card_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.MahjongPlayCard)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.MahjongPlayCard other = (mahjong.mode.Mahjong.MahjongPlayCard) obj;

      boolean result = true;
      result = result && (getCard()
          == other.getCard());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MahjongPlayCard> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.MahjongPlayCard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 出牌 PLAY_CARD
     * </pre>
     * <p>
     * Protobuf type {@code MahjongPlayCard}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MahjongPlayCard)
            mahjong.mode.Mahjong.MahjongPlayCardOrBuilder {
      private int card_ ;

      // Construct using mahjong.mode.Mahjong.MahjongPlayCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_MahjongPlayCard_descriptor;
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        card_ = 0;

        return this;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_MahjongPlayCard_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.MahjongPlayCard.class, mahjong.mode.Mahjong.MahjongPlayCard.Builder.class);
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_MahjongPlayCard_descriptor;
      }

      public mahjong.mode.Mahjong.MahjongPlayCard getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.MahjongPlayCard.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.MahjongPlayCard build() {
        mahjong.mode.Mahjong.MahjongPlayCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public mahjong.mode.Mahjong.MahjongPlayCard buildPartial() {
        mahjong.mode.Mahjong.MahjongPlayCard result = new mahjong.mode.Mahjong.MahjongPlayCard(this);
        result.card_ = card_;
        onBuilt();
        return result;
      }

      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.MahjongPlayCard) {
          return mergeFrom((mahjong.mode.Mahjong.MahjongPlayCard) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.MahjongPlayCard other) {
        if (other == mahjong.mode.Mahjong.MahjongPlayCard.getDefaultInstance()) return this;
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.MahjongPlayCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.MahjongPlayCard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public int getCard() {
        return card_;
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public Builder setCard(int value) {

        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>int32 card = 1;</code>
       */
      public Builder clearCard() {

        card_ = 0;
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MahjongPlayCard)
    }

  }

  // @@protoc_insertion_point(outer_class_scope)
}
